webpackJsonp([1],{

/***/ 100:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(99)(__webpack_require__(96))

/***/ }),

/***/ 96:
/***/ (function(module, exports) {

module.exports = "/*!\n * @overview RSVP - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2016 Yehuda Katz, Tom Dale, Stefan Penner and contributors\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/tildeio/rsvp.js/master/LICENSE\n * @version   3.3.3\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.RSVP = global.RSVP || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction indexOf(callbacks, callback) {\n  for (var i = 0, l = callbacks.length; i < l; i++) {\n    if (callbacks[i] === callback) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction callbacksFor(object) {\n  var callbacks = object._promiseCallbacks;\n\n  if (!callbacks) {\n    callbacks = object._promiseCallbacks = {};\n  }\n\n  return callbacks;\n}\n\n/**\n  @class RSVP.EventTarget\n*/\nvar EventTarget = {\n\n  /**\n    `RSVP.EventTarget.mixin` extends an object with EventTarget methods. For\n    Example:\n     ```javascript\n    let object = {};\n     RSVP.EventTarget.mixin(object);\n     object.on('finished', function(event) {\n      // handle event\n    });\n     object.trigger('finished', { detail: value });\n    ```\n     `EventTarget.mixin` also works with prototypes:\n     ```javascript\n    let Person = function() {};\n    RSVP.EventTarget.mixin(Person.prototype);\n     let yehuda = new Person();\n    let tom = new Person();\n     yehuda.on('poke', function(event) {\n      console.log('Yehuda says OW');\n    });\n     tom.on('poke', function(event) {\n      console.log('Tom says OW');\n    });\n     yehuda.trigger('poke');\n    tom.trigger('poke');\n    ```\n     @method mixin\n    @for RSVP.EventTarget\n    @private\n    @param {Object} object object to extend with EventTarget methods\n  */\n  mixin: function mixin(object) {\n    object['on'] = this['on'];\n    object['off'] = this['off'];\n    object['trigger'] = this['trigger'];\n    object._promiseCallbacks = undefined;\n    return object;\n  },\n\n  /**\n    Registers a callback to be executed when `eventName` is triggered\n     ```javascript\n    object.on('event', function(eventInfo){\n      // handle the event\n    });\n     object.trigger('event');\n    ```\n     @method on\n    @for RSVP.EventTarget\n    @private\n    @param {String} eventName name of the event to listen for\n    @param {Function} callback function to be called when the event is triggered.\n  */\n  on: function on(eventName, callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function');\n    }\n\n    var allCallbacks = callbacksFor(this),\n        callbacks = undefined;\n\n    callbacks = allCallbacks[eventName];\n\n    if (!callbacks) {\n      callbacks = allCallbacks[eventName] = [];\n    }\n\n    if (indexOf(callbacks, callback) === -1) {\n      callbacks.push(callback);\n    }\n  },\n\n  /**\n    You can use `off` to stop firing a particular callback for an event:\n     ```javascript\n    function doStuff() { // do stuff! }\n    object.on('stuff', doStuff);\n     object.trigger('stuff'); // doStuff will be called\n     // Unregister ONLY the doStuff callback\n    object.off('stuff', doStuff);\n    object.trigger('stuff'); // doStuff will NOT be called\n    ```\n     If you don't pass a `callback` argument to `off`, ALL callbacks for the\n    event will not be executed when the event fires. For example:\n     ```javascript\n    let callback1 = function(){};\n    let callback2 = function(){};\n     object.on('stuff', callback1);\n    object.on('stuff', callback2);\n     object.trigger('stuff'); // callback1 and callback2 will be executed.\n     object.off('stuff');\n    object.trigger('stuff'); // callback1 and callback2 will not be executed!\n    ```\n     @method off\n    @for RSVP.EventTarget\n    @private\n    @param {String} eventName event to stop listening to\n    @param {Function} callback optional argument. If given, only the function\n    given will be removed from the event's callback queue. If no `callback`\n    argument is given, all callbacks will be removed from the event's callback\n    queue.\n  */\n  off: function off(eventName, callback) {\n    var allCallbacks = callbacksFor(this),\n        callbacks = undefined,\n        index = undefined;\n\n    if (!callback) {\n      allCallbacks[eventName] = [];\n      return;\n    }\n\n    callbacks = allCallbacks[eventName];\n\n    index = indexOf(callbacks, callback);\n\n    if (index !== -1) {\n      callbacks.splice(index, 1);\n    }\n  },\n\n  /**\n    Use `trigger` to fire custom events. For example:\n     ```javascript\n    object.on('foo', function(){\n      console.log('foo event happened!');\n    });\n    object.trigger('foo');\n    // 'foo event happened!' logged to the console\n    ```\n     You can also pass a value as a second argument to `trigger` that will be\n    passed as an argument to all event listeners for the event:\n     ```javascript\n    object.on('foo', function(value){\n      console.log(value.name);\n    });\n     object.trigger('foo', { name: 'bar' });\n    // 'bar' logged to the console\n    ```\n     @method trigger\n    @for RSVP.EventTarget\n    @private\n    @param {String} eventName name of the event to be triggered\n    @param {*} options optional value to be passed to any event handlers for\n    the given `eventName`\n  */\n  trigger: function trigger(eventName, options, label) {\n    var allCallbacks = callbacksFor(this),\n        callbacks = undefined,\n        callback = undefined;\n\n    if (callbacks = allCallbacks[eventName]) {\n      // Don't cache the callbacks.length since it may grow\n      for (var i = 0; i < callbacks.length; i++) {\n        callback = callbacks[i];\n\n        callback(options, label);\n      }\n    }\n  }\n};\n\nvar config = {\n  instrument: false\n};\n\nEventTarget['mixin'](config);\n\nfunction configure(name, value) {\n  if (name === 'onerror') {\n    // handle for legacy users that expect the actual\n    // error to be passed to their function added via\n    // `RSVP.configure('onerror', someFunctionHere);`\n    config['on']('error', value);\n    return;\n  }\n\n  if (arguments.length === 2) {\n    config[name] = value;\n  } else {\n    return config[name];\n  }\n}\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nfunction isMaybeThenable(x) {\n  return typeof x === 'object' && x !== null;\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\n// Date.now is not available in browsers < IE9\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility\nvar now = Date.now || function () {\n  return new Date().getTime();\n};\n\nfunction F() {}\n\nvar o_create = Object.create || function (o) {\n  if (arguments.length > 1) {\n    throw new Error('Second argument not supported');\n  }\n  if (typeof o !== 'object') {\n    throw new TypeError('Argument must be an object');\n  }\n  F.prototype = o;\n  return new F();\n};\n\nvar queue = [];\n\nfunction scheduleFlush() {\n  setTimeout(function () {\n    for (var i = 0; i < queue.length; i++) {\n      var entry = queue[i];\n\n      var payload = entry.payload;\n\n      payload.guid = payload.key + payload.id;\n      payload.childGuid = payload.key + payload.childId;\n      if (payload.error) {\n        payload.stack = payload.error.stack;\n      }\n\n      config['trigger'](entry.name, entry.payload);\n    }\n    queue.length = 0;\n  }, 50);\n}\nfunction instrument(eventName, promise, child) {\n  if (1 === queue.push({\n    name: eventName,\n    payload: {\n      key: promise._guidKey,\n      id: promise._id,\n      eventName: eventName,\n      detail: promise._result,\n      childId: child && child._id,\n      label: promise._label,\n      timeStamp: now(),\n      error: config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n    } })) {\n    scheduleFlush();\n  }\n}\n\n/**\n  `RSVP.Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new RSVP.Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = RSVP.Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {*} object value that the returned promise will be resolved with\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop, label);\n  resolve(promise, object);\n  return promise;\n}\n\nfunction withOwnPromise() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  config.async(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value, undefined);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    thenable._onError = null;\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      if (thenable !== value) {\n        resolve(promise, value, undefined);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && promise.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    fulfill(promise, value);\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onError) {\n    promise._onError(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length === 0) {\n    if (config.instrument) {\n      instrument('fulfilled', promise);\n    }\n  } else {\n    config.async(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n  config.async(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var subscribers = parent._subscribers;\n  var length = subscribers.length;\n\n  parent._onError = null;\n\n  subscribers[length] = child;\n  subscribers[length + FULFILLED] = onFulfillment;\n  subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    config.async(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (config.instrument) {\n    instrument(settled === FULFILLED ? 'fulfilled' : 'rejected', promise);\n  }\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, withOwnPromise());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      resolve(promise, value);\n    } else if (failed) {\n      reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  var resolved = false;\n  try {\n    resolver(function (value) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      resolve(promise, value);\n    }, function (reason) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nfunction then(onFulfillment, onRejection, label) {\n  var _arguments = arguments;\n\n  var parent = this;\n  var state = parent._state;\n\n  if (state === FULFILLED && !onFulfillment || state === REJECTED && !onRejection) {\n    config.instrument && instrument('chained', parent, parent);\n    return parent;\n  }\n\n  parent._onError = null;\n\n  var child = new parent.constructor(noop, label);\n  var result = parent._result;\n\n  config.instrument && instrument('chained', parent, child);\n\n  if (state) {\n    (function () {\n      var callback = _arguments[state - 1];\n      config.async(function () {\n        return invokeCallback(state, child, callback, result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\nfunction makeSettledResult(state, position, value) {\n  if (state === FULFILLED) {\n    return {\n      state: 'fulfilled',\n      value: value\n    };\n  } else {\n    return {\n      state: 'rejected',\n      reason: value\n    };\n  }\n}\n\nfunction Enumerator(Constructor, input, abortOnReject, label) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop, label);\n  this._abortOnReject = abortOnReject;\n\n  if (this._validateInput(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._init();\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    reject(this.promise, this._validationError());\n  }\n}\n\nEnumerator.prototype._validateInput = function (input) {\n  return isArray(input);\n};\n\nEnumerator.prototype._validationError = function () {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._init = function () {\n  this._result = new Array(this.length);\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var promise = this.promise;\n  var input = this._input;\n\n  for (var i = 0; promise._state === PENDING && i < length; i++) {\n    this._eachEntry(input[i], i);\n  }\n};\n\nEnumerator.prototype._settleMaybeThenable = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve = c.resolve;\n\n  if (resolve === resolve$1) {\n    var then$$ = getThen(entry);\n\n    if (then$$ === then && entry._state !== PENDING) {\n      entry._onError = null;\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof then$$ !== 'function') {\n      this._remaining--;\n      this._result[i] = this._makeResult(FULFILLED, i, entry);\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, then$$);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve) {\n        return resolve(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve(entry), i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  if (isMaybeThenable(entry)) {\n    this._settleMaybeThenable(entry, i);\n  } else {\n    this._remaining--;\n    this._result[i] = this._makeResult(FULFILLED, i, entry);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (this._abortOnReject && state === REJECTED) {\n      reject(promise, value);\n    } else {\n      this._result[i] = this._makeResult(state, i, value);\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._makeResult = function (state, i, value) {\n  return value;\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `RSVP.Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.resolve(2);\n  let promise3 = RSVP.resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  RSVP.Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.reject(new Error(\"2\"));\n  let promise3 = RSVP.reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  RSVP.Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries, label) {\n  return new Enumerator(this, entries, true, /* abort on reject */label).promise;\n}\n\n/**\n  `RSVP.Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  RSVP.Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `RSVP.Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  RSVP.Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  RSVP.Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} entries array of promises to observe\n  @param {String} label optional string for describing the promise returned.\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  var promise = new Constructor(noop, label);\n\n  if (!isArray(entries)) {\n    reject(promise, new TypeError('You must pass an array to race.'));\n    return promise;\n  }\n\n  for (var i = 0; promise._state === PENDING && i < entries.length; i++) {\n    subscribe(Constructor.resolve(entries[i]), undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n\n  return promise;\n}\n\n/**\n  `RSVP.Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new RSVP.Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = RSVP.Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop, label);\n  reject(promise, reason);\n  return promise;\n}\n\nvar guidKey = 'rsvp_' + now() + '-';\nvar counter = 0;\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise’s eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class RSVP.Promise\n  @param {function} resolver\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver, label) {\n  this._id = counter++;\n  this._label = label;\n  this._state = undefined;\n  this._result = undefined;\n  this._subscribers = [];\n\n  config.instrument && instrument('created', this);\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.cast = resolve$1; // deprecated\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve$1;\nPromise.reject = reject$1;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  _guidKey: guidKey,\n\n  _onError: function _onError(reason) {\n    var promise = this;\n    config.after(function () {\n      if (promise._onError) {\n        config['trigger']('error', reason, promise._label);\n      }\n    });\n  },\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we\\'re unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we\\'re unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfillment\n    @param {Function} onRejection\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn\\'t find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection, label) {\n    return this.then(undefined, onRejection, label);\n  },\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n  */\n  'finally': function _finally(callback, label) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    return promise.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        throw reason;\n      });\n    }, label);\n  }\n};\n\nfunction Result() {\n  this.value = undefined;\n}\n\nvar ERROR = new Result();\nvar GET_THEN_ERROR$1 = new Result();\n\nfunction getThen$1(obj) {\n  try {\n    return obj.then;\n  } catch (error) {\n    ERROR.value = error;\n    return ERROR;\n  }\n}\n\nfunction tryApply(f, s, a) {\n  try {\n    f.apply(s, a);\n  } catch (error) {\n    ERROR.value = error;\n    return ERROR;\n  }\n}\n\nfunction makeObject(_, argumentNames) {\n  var obj = {};\n  var length = _.length;\n  var args = new Array(length);\n\n  for (var x = 0; x < length; x++) {\n    args[x] = _[x];\n  }\n\n  for (var i = 0; i < argumentNames.length; i++) {\n    var _name = argumentNames[i];\n    obj[_name] = args[i + 1];\n  }\n\n  return obj;\n}\n\nfunction arrayResult(_) {\n  var length = _.length;\n  var args = new Array(length - 1);\n\n  for (var i = 1; i < length; i++) {\n    args[i - 1] = _[i];\n  }\n\n  return args;\n}\n\nfunction wrapThenable(_then, promise) {\n  return {\n    then: function then(onFulFillment, onRejection) {\n      return _then.call(promise, onFulFillment, onRejection);\n    }\n  };\n}\n\n/**\n  `RSVP.denodeify` takes a 'node-style' function and returns a function that\n  will return an `RSVP.Promise`. You can use `denodeify` in Node.js or the\n  browser when you'd prefer to use promises over using callbacks. For example,\n  `denodeify` transforms the following:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) return handleError(err);\n    handleData(data);\n  });\n  ```\n\n  into:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = RSVP.denodeify(fs.readFile);\n\n  readFile('myfile.txt').then(handleData, handleError);\n  ```\n\n  If the node function has multiple success parameters, then `denodeify`\n  just returns the first one:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request'));\n\n  request('http://example.com').then(function(res) {\n    // ...\n  });\n  ```\n\n  However, if you need all success parameters, setting `denodeify`'s\n  second parameter to `true` causes it to return all success parameters\n  as an array:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request'), true);\n\n  request('http://example.com').then(function(result) {\n    // result[0] -> res\n    // result[1] -> body\n  });\n  ```\n\n  Or if you pass it an array with names it returns the parameters as a hash:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request'), ['res', 'body']);\n\n  request('http://example.com').then(function(result) {\n    // result.res\n    // result.body\n  });\n  ```\n\n  Sometimes you need to retain the `this`:\n\n  ```javascript\n  let app = require('express')();\n  let render = RSVP.denodeify(app.render.bind(app));\n  ```\n\n  The denodified function inherits from the original function. It works in all\n  environments, except IE 10 and below. Consequently all properties of the original\n  function are available to you. However, any properties you change on the\n  denodeified function won't be changed on the original function. Example:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request')),\n      cookieJar = request.jar(); // <- Inheritance is used here\n\n  request('http://example.com', {jar: cookieJar}).then(function(res) {\n    // cookieJar.cookies holds now the cookies returned by example.com\n  });\n  ```\n\n  Using `denodeify` makes it easier to compose asynchronous operations instead\n  of using callbacks. For example, instead of:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) { ... } // Handle error\n    fs.writeFile('myfile2.txt', data, function(err){\n      if (err) { ... } // Handle error\n      console.log('done')\n    });\n  });\n  ```\n\n  you can chain the operations together using `then` from the returned promise:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = RSVP.denodeify(fs.readFile);\n  let writeFile = RSVP.denodeify(fs.writeFile);\n\n  readFile('myfile.txt').then(function(data){\n    return writeFile('myfile2.txt', data);\n  }).then(function(){\n    console.log('done')\n  }).catch(function(error){\n    // Handle error\n  });\n  ```\n\n  @method denodeify\n  @static\n  @for RSVP\n  @param {Function} nodeFunc a 'node-style' function that takes a callback as\n  its last argument. The callback expects an error to be passed as its first\n  argument (if an error occurred, otherwise null), and the value from the\n  operation as its second argument ('function(err, value){ }').\n  @param {Boolean|Array} [options] An optional paramter that if set\n  to `true` causes the promise to fulfill with the callback's success arguments\n  as an array. This is useful if the node function has multiple success\n  paramters. If you set this paramter to an array with names, the promise will\n  fulfill with a hash with these names as keys and the success parameters as\n  values.\n  @return {Function} a function that wraps `nodeFunc` to return an\n  `RSVP.Promise`\n  @static\n*/\nfunction denodeify(nodeFunc, options) {\n  var fn = function fn() {\n    var self = this;\n    var l = arguments.length;\n    var args = new Array(l + 1);\n    var promiseInput = false;\n\n    for (var i = 0; i < l; ++i) {\n      var arg = arguments[i];\n\n      if (!promiseInput) {\n        // TODO: clean this up\n        promiseInput = needsPromiseInput(arg);\n        if (promiseInput === GET_THEN_ERROR$1) {\n          var p = new Promise(noop);\n          reject(p, GET_THEN_ERROR$1.value);\n          return p;\n        } else if (promiseInput && promiseInput !== true) {\n          arg = wrapThenable(promiseInput, arg);\n        }\n      }\n      args[i] = arg;\n    }\n\n    var promise = new Promise(noop);\n\n    args[l] = function (err, val) {\n      if (err) reject(promise, err);else if (options === undefined) resolve(promise, val);else if (options === true) resolve(promise, arrayResult(arguments));else if (isArray(options)) resolve(promise, makeObject(arguments, options));else resolve(promise, val);\n    };\n\n    if (promiseInput) {\n      return handlePromiseInput(promise, args, nodeFunc, self);\n    } else {\n      return handleValueInput(promise, args, nodeFunc, self);\n    }\n  };\n\n  fn.__proto__ = nodeFunc;\n\n  return fn;\n}\n\nfunction handleValueInput(promise, args, nodeFunc, self) {\n  var result = tryApply(nodeFunc, self, args);\n  if (result === ERROR) {\n    reject(promise, result.value);\n  }\n  return promise;\n}\n\nfunction handlePromiseInput(promise, args, nodeFunc, self) {\n  return Promise.all(args).then(function (args) {\n    var result = tryApply(nodeFunc, self, args);\n    if (result === ERROR) {\n      reject(promise, result.value);\n    }\n    return promise;\n  });\n}\n\nfunction needsPromiseInput(arg) {\n  if (arg && typeof arg === 'object') {\n    if (arg.constructor === Promise) {\n      return true;\n    } else {\n      return getThen$1(arg);\n    }\n  } else {\n    return false;\n  }\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.all`.\n\n  @method all\n  @static\n  @for RSVP\n  @param {Array} array Array of promises.\n  @param {String} label An optional label. This is useful\n  for tooling.\n*/\nfunction all$1(array, label) {\n  return Promise.all(array, label);\n}\n\nfunction AllSettled(Constructor, entries, label) {\n  this._superConstructor(Constructor, entries, false, /* don't abort on reject */label);\n}\n\nAllSettled.prototype = o_create(Enumerator.prototype);\nAllSettled.prototype._superConstructor = Enumerator;\nAllSettled.prototype._makeResult = makeSettledResult;\nAllSettled.prototype._validationError = function () {\n  return new Error('allSettled must be called with an array');\n};\n\n/**\n  `RSVP.allSettled` is similar to `RSVP.all`, but instead of implementing\n  a fail-fast method, it waits until all the promises have returned and\n  shows you all the results. This is useful if you want to handle multiple\n  promises' failure states together as a set.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  settled. The return promise is fulfilled with an array of the states of\n  the promises passed into the `promises` array argument.\n\n  Each state object will either indicate fulfillment or rejection, and\n  provide the corresponding value or reason. The states will take one of\n  the following formats:\n\n  ```javascript\n  { state: 'fulfilled', value: value }\n    or\n  { state: 'rejected', reason: reason }\n  ```\n\n  Example:\n\n  ```javascript\n  let promise1 = RSVP.Promise.resolve(1);\n  let promise2 = RSVP.Promise.reject(new Error('2'));\n  let promise3 = RSVP.Promise.reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  RSVP.allSettled(promises).then(function(array){\n    // array == [\n    //   { state: 'fulfilled', value: 1 },\n    //   { state: 'rejected', reason: Error },\n    //   { state: 'rejected', reason: Error }\n    // ]\n    // Note that for the second item, reason.message will be '2', and for the\n    // third item, reason.message will be '3'.\n  }, function(error) {\n    // Not run. (This block would only be called if allSettled had failed,\n    // for instance if passed an incorrect argument type.)\n  });\n  ```\n\n  @method allSettled\n  @static\n  @for RSVP\n  @param {Array} entries\n  @param {String} label - optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled with an array of the settled\n  states of the constituent promises.\n*/\nfunction allSettled(entries, label) {\n  return new AllSettled(Promise, entries, label).promise;\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.race`.\n\n  @method race\n  @static\n  @for RSVP\n  @param {Array} array Array of promises.\n  @param {String} label An optional label. This is useful\n  for tooling.\n */\nfunction race$1(array, label) {\n  return Promise.race(array, label);\n}\n\nfunction PromiseHash(Constructor, object, label) {\n  this._superConstructor(Constructor, object, true, label);\n}\n\nPromiseHash.prototype = o_create(Enumerator.prototype);\nPromiseHash.prototype._superConstructor = Enumerator;\nPromiseHash.prototype._init = function () {\n  this._result = {};\n};\n\nPromiseHash.prototype._validateInput = function (input) {\n  return input && typeof input === 'object';\n};\n\nPromiseHash.prototype._validationError = function () {\n  return new Error('Promise.hash must be called with an object');\n};\n\nPromiseHash.prototype._enumerate = function () {\n  var enumerator = this;\n  var promise = enumerator.promise;\n  var input = enumerator._input;\n  var results = [];\n\n  for (var key in input) {\n    if (promise._state === PENDING && Object.prototype.hasOwnProperty.call(input, key)) {\n      results.push({\n        position: key,\n        entry: input[key]\n      });\n    }\n  }\n\n  var length = results.length;\n  enumerator._remaining = length;\n  var result = undefined;\n\n  for (var i = 0; promise._state === PENDING && i < length; i++) {\n    result = results[i];\n    enumerator._eachEntry(result.entry, result.position);\n  }\n};\n\n/**\n  `RSVP.hash` is similar to `RSVP.all`, but takes an object instead of an array\n  for its `promises` argument.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  fulfilled, or rejected if any of them become rejected. The returned promise\n  is fulfilled with a hash that has the same key names as the `promises` object\n  argument. If any of the values in the object are not promises, they will\n  simply be copied over to the fulfilled object.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.resolve(1),\n    yourPromise: RSVP.resolve(2),\n    theirPromise: RSVP.resolve(3),\n    notAPromise: 4\n  };\n\n  RSVP.hash(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: 1,\n    //   yourPromise: 2,\n    //   theirPromise: 3,\n    //   notAPromise: 4\n    // }\n  });\n  ````\n\n  If any of the `promises` given to `RSVP.hash` are rejected, the first promise\n  that is rejected will be given as the reason to the rejection handler.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.resolve(1),\n    rejectedPromise: RSVP.reject(new Error('rejectedPromise')),\n    anotherRejectedPromise: RSVP.reject(new Error('anotherRejectedPromise')),\n  };\n\n  RSVP.hash(promises).then(function(hash){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === 'rejectedPromise'\n  });\n  ```\n\n  An important note: `RSVP.hash` is intended for plain JavaScript objects that\n  are just a set of keys and values. `RSVP.hash` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  function MyConstructor(){\n    this.example = RSVP.resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: RSVP.resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  RSVP.hash(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: 'Example'\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hash\n  @static\n  @for RSVP\n  @param {Object} object\n  @param {String} label optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all properties of `promises`\n  have been fulfilled, or rejected if any of them become rejected.\n*/\nfunction hash(object, label) {\n  return new PromiseHash(Promise, object, label).promise;\n}\n\nfunction HashSettled(Constructor, object, label) {\n  this._superConstructor(Constructor, object, false, label);\n}\n\nHashSettled.prototype = o_create(PromiseHash.prototype);\nHashSettled.prototype._superConstructor = Enumerator;\nHashSettled.prototype._makeResult = makeSettledResult;\n\nHashSettled.prototype._validationError = function () {\n  return new Error('hashSettled must be called with an object');\n};\n\n/**\n  `RSVP.hashSettled` is similar to `RSVP.allSettled`, but takes an object\n  instead of an array for its `promises` argument.\n\n  Unlike `RSVP.all` or `RSVP.hash`, which implement a fail-fast method,\n  but like `RSVP.allSettled`, `hashSettled` waits until all the\n  constituent promises have returned and then shows you all the results\n  with their states and values/reasons. This is useful if you want to\n  handle multiple promises' failure states together as a set.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  settled, or rejected if the passed parameters are invalid.\n\n  The returned promise is fulfilled with a hash that has the same key names as\n  the `promises` object argument. If any of the values in the object are not\n  promises, they will be copied over to the fulfilled object and marked with state\n  'fulfilled'.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.Promise.resolve(1),\n    yourPromise: RSVP.Promise.resolve(2),\n    theirPromise: RSVP.Promise.resolve(3),\n    notAPromise: 4\n  };\n\n  RSVP.hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: { state: 'fulfilled', value: 1 },\n    //   yourPromise: { state: 'fulfilled', value: 2 },\n    //   theirPromise: { state: 'fulfilled', value: 3 },\n    //   notAPromise: { state: 'fulfilled', value: 4 }\n    // }\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.hash` are rejected, the state will\n  be set to 'rejected' and the reason for rejection provided.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.Promise.resolve(1),\n    rejectedPromise: RSVP.Promise.reject(new Error('rejection')),\n    anotherRejectedPromise: RSVP.Promise.reject(new Error('more rejection')),\n  };\n\n  RSVP.hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise:              { state: 'fulfilled', value: 1 },\n    //   rejectedPromise:        { state: 'rejected', reason: Error },\n    //   anotherRejectedPromise: { state: 'rejected', reason: Error },\n    // }\n    // Note that for rejectedPromise, reason.message == 'rejection',\n    // and for anotherRejectedPromise, reason.message == 'more rejection'.\n  });\n  ```\n\n  An important note: `RSVP.hashSettled` is intended for plain JavaScript objects that\n  are just a set of keys and values. `RSVP.hashSettled` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  function MyConstructor(){\n    this.example = RSVP.Promise.resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: RSVP.Promise.resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  RSVP.hashSettled(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: { state: 'fulfilled', value: 'Example' }\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hashSettled\n  @for RSVP\n  @param {Object} object\n  @param {String} label optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when when all properties of `promises`\n  have been settled.\n  @static\n*/\nfunction hashSettled(object, label) {\n  return new HashSettled(Promise, object, label).promise;\n}\n\nfunction rethrow(reason) {\n  setTimeout(function () {\n    throw reason;\n  });\n  throw reason;\n}\n\n/**\n  `RSVP.defer` returns an object similar to jQuery's `$.Deferred`.\n  `RSVP.defer` should be used when porting over code reliant on `$.Deferred`'s\n  interface. New code should use the `RSVP.Promise` constructor instead.\n\n  The object returned from `RSVP.defer` is a plain object with three properties:\n\n  * promise - an `RSVP.Promise`.\n  * reject - a function that causes the `promise` property on this object to\n    become rejected\n  * resolve - a function that causes the `promise` property on this object to\n    become fulfilled.\n\n  Example:\n\n   ```javascript\n   let deferred = RSVP.defer();\n\n   deferred.resolve(\"Success!\");\n\n   deferred.promise.then(function(value){\n     // value here is \"Success!\"\n   });\n   ```\n\n  @method defer\n  @static\n  @for RSVP\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Object}\n */\nfunction defer(label) {\n  var deferred = { resolve: undefined, reject: undefined };\n\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  }, label);\n\n  return deferred;\n}\n\n/**\n `RSVP.map` is similar to JavaScript's native `map` method, except that it\n  waits for all promises to become fulfilled before running the `mapFn` on\n  each item in given to `promises`. `RSVP.map` returns a promise that will\n  become fulfilled with the result of running `mapFn` on the values the promises\n  become fulfilled with.\n\n  For example:\n\n  ```javascript\n\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.resolve(2);\n  let promise3 = RSVP.resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  RSVP.map(promises, mapFn).then(function(result){\n    // result is [ 2, 3, 4 ]\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.map` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.reject(new Error('2'));\n  let promise3 = RSVP.reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  RSVP.map(promises, mapFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `RSVP.map` will also wait if a promise is returned from `mapFn`. For example,\n  say you want to get all comments from a set of blog posts, but you need\n  the blog posts first because they contain a url to those comments.\n\n  ```javscript\n\n  let mapFn = function(blogPost){\n    // getComments does some ajax and returns an RSVP.Promise that is fulfilled\n    // with some comments data\n    return getComments(blogPost.comments_url);\n  };\n\n  // getBlogPosts does some ajax and returns an RSVP.Promise that is fulfilled\n  // with some blog post data\n  RSVP.map(getBlogPosts(), mapFn).then(function(comments){\n    // comments is the result of asking the server for the comments\n    // of all blog posts returned from getBlogPosts()\n  });\n  ```\n\n  @method map\n  @static\n  @for RSVP\n  @param {Array} promises\n  @param {Function} mapFn function to be called on each fulfilled promise.\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled with the result of calling\n  `mapFn` on each fulfilled promise or value when they become fulfilled.\n   The promise will be rejected if any of the given `promises` become rejected.\n  @static\n*/\nfunction map(promises, mapFn, label) {\n  return Promise.all(promises, label).then(function (values) {\n    if (!isFunction(mapFn)) {\n      throw new TypeError(\"You must pass a function as map's second argument.\");\n    }\n\n    var length = values.length;\n    var results = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      results[i] = mapFn(values[i]);\n    }\n\n    return Promise.all(results, label);\n  });\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.resolve`.\n\n  @method resolve\n  @static\n  @for RSVP\n  @param {*} value value that the returned promise will be resolved with\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$2(value, label) {\n  return Promise.resolve(value, label);\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.reject`.\n\n  @method reject\n  @static\n  @for RSVP\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$2(reason, label) {\n  return Promise.reject(reason, label);\n}\n\n/**\n `RSVP.filter` is similar to JavaScript's native `filter` method, except that it\n  waits for all promises to become fulfilled before running the `filterFn` on\n  each item in given to `promises`. `RSVP.filter` returns a promise that will\n  become fulfilled with the result of running `filterFn` on the values the\n  promises become fulfilled with.\n\n  For example:\n\n  ```javascript\n\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.resolve(2);\n  let promise3 = RSVP.resolve(3);\n\n  let promises = [promise1, promise2, promise3];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  RSVP.filter(promises, filterFn).then(function(result){\n    // result is [ 2, 3 ]\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.filter` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.reject(new Error('2'));\n  let promise3 = RSVP.reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  RSVP.filter(promises, filterFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `RSVP.filter` will also wait for any promises returned from `filterFn`.\n  For instance, you may want to fetch a list of users then return a subset\n  of those users based on some asynchronous operation:\n\n  ```javascript\n\n  let alice = { name: 'alice' };\n  let bob   = { name: 'bob' };\n  let users = [ alice, bob ];\n\n  let promises = users.map(function(user){\n    return RSVP.resolve(user);\n  });\n\n  let filterFn = function(user){\n    // Here, Alice has permissions to create a blog post, but Bob does not.\n    return getPrivilegesForUser(user).then(function(privs){\n      return privs.can_create_blog_post === true;\n    });\n  };\n  RSVP.filter(promises, filterFn).then(function(users){\n    // true, because the server told us only Alice can create a blog post.\n    users.length === 1;\n    // false, because Alice is the only user present in `users`\n    users[0] === bob;\n  });\n  ```\n\n  @method filter\n  @static\n  @for RSVP\n  @param {Array} promises\n  @param {Function} filterFn - function to be called on each resolved value to\n  filter the final results.\n  @param {String} label optional string describing the promise. Useful for\n  tooling.\n  @return {Promise}\n*/\n\nfunction resolveAll(promises, label) {\n  return Promise.all(promises, label);\n}\n\nfunction resolveSingle(promise, label) {\n  return Promise.resolve(promise, label).then(function (promises) {\n    return resolveAll(promises, label);\n  });\n}\nfunction filter(promises, filterFn, label) {\n  var promise = isArray(promises) ? resolveAll(promises, label) : resolveSingle(promises, label);\n  return promise.then(function (values) {\n    if (!isFunction(filterFn)) {\n      throw new TypeError(\"You must pass a function as filter's second argument.\");\n    }\n\n    var length = values.length;\n    var filtered = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      filtered[i] = filterFn(values[i]);\n    }\n\n    return resolveAll(filtered, label).then(function (filtered) {\n      var results = new Array(length);\n      var newLength = 0;\n\n      for (var i = 0; i < length; i++) {\n        if (filtered[i]) {\n          results[newLength] = values[i];\n          newLength++;\n        }\n      }\n\n      results.length = newLength;\n\n      return results;\n    });\n  });\n}\n\nvar len = 0;\nvar vertxNext = undefined;\nfunction asap(callback, arg) {\n  queue$1[len] = callback;\n  queue$1[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 1, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    scheduleFlush$1();\n  }\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  var nextTick = process.nextTick;\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // setImmediate should be used instead instead\n  var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n  if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n    nextTick = setImmediate;\n  }\n  return function () {\n    return nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    return node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  return function () {\n    return setTimeout(flush, 1);\n  };\n}\n\nvar queue$1 = new Array(1000);\n\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue$1[i];\n    var arg = queue$1[i + 1];\n\n    callback(arg);\n\n    queue$1[i] = undefined;\n    queue$1[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertex() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush$1 = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush$1 = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush$1 = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush$1 = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush$1 = attemptVertex();\n} else {\n  scheduleFlush$1 = useSetTimeout();\n}\n\nvar platform = undefined;\n\n/* global self */\nif (typeof self === 'object') {\n  platform = self;\n\n  /* global global */\n} else if (typeof global === 'object') {\n    platform = global;\n  } else {\n    throw new Error('no global: `self` or `global` found');\n  }\n\nvar _async$filter;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// defaults\n\n// the default export here is for backwards compat:\n//   https://github.com/tildeio/rsvp.js/issues/434\nconfig.async = asap;\nconfig.after = function (cb) {\n  return setTimeout(cb, 0);\n};\nvar cast = resolve$2;\n\nvar async = function async(callback, arg) {\n  return config.async(callback, arg);\n};\n\nfunction on() {\n  config['on'].apply(config, arguments);\n}\n\nfunction off() {\n  config['off'].apply(config, arguments);\n}\n\n// Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`\nif (typeof window !== 'undefined' && typeof window['__PROMISE_INSTRUMENTATION__'] === 'object') {\n  var callbacks = window['__PROMISE_INSTRUMENTATION__'];\n  configure('instrument', true);\n  for (var eventName in callbacks) {\n    if (callbacks.hasOwnProperty(eventName)) {\n      on(eventName, callbacks[eventName]);\n    }\n  }\n}var rsvp = (_async$filter = {\n  cast: cast,\n  Promise: Promise,\n  EventTarget: EventTarget,\n  all: all$1,\n  allSettled: allSettled,\n  race: race$1,\n  hash: hash,\n  hashSettled: hashSettled,\n  rethrow: rethrow,\n  defer: defer,\n  denodeify: denodeify,\n  configure: configure,\n  on: on,\n  off: off,\n  resolve: resolve$2,\n  reject: reject$2,\n  map: map\n}, _defineProperty(_async$filter, 'async', async), _defineProperty(_async$filter, 'filter', // babel seems to error if async isn't a computed prop here...\nfilter), _async$filter);\n\nexports['default'] = rsvp;\nexports.cast = cast;\nexports.Promise = Promise;\nexports.EventTarget = EventTarget;\nexports.all = all$1;\nexports.allSettled = allSettled;\nexports.race = race$1;\nexports.hash = hash;\nexports.hashSettled = hashSettled;\nexports.rethrow = rethrow;\nexports.defer = defer;\nexports.denodeify = denodeify;\nexports.configure = configure;\nexports.on = on;\nexports.off = off;\nexports.resolve = resolve$2;\nexports.reject = reject$2;\nexports.map = map;\nexports.async = async;\nexports.filter = filter;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//\n'use strict';\n\nvar EPUBJS = EPUBJS || {};\nEPUBJS.VERSION = \"0.2.15\";\n\nEPUBJS.plugins = EPUBJS.plugins || {};\n\nEPUBJS.filePath = EPUBJS.filePath || \"/epubjs/\";\n\nEPUBJS.Render = {};\n\n(function(root) {\n\n\tvar previousEpub = root.ePub || {};\n\n\tvar ePub = root.ePub = function() {\n\t\tvar bookPath, options;\n\n\t\t//-- var book = ePub(\"path/to/book.epub\", { restore: true })\n\t\tif(typeof(arguments[0]) != 'undefined' &&\n\t\t\t(typeof arguments[0] === 'string' || arguments[0] instanceof ArrayBuffer)) {\n\n\t\t\tbookPath = arguments[0];\n\n\t\t\tif( arguments[1] && typeof arguments[1] === 'object' ) {\n\t\t\t\toptions = arguments[1];\n\t\t\t\toptions.bookPath = bookPath;\n\t\t\t} else {\n\t\t\t\toptions = { 'bookPath' : bookPath };\n\t\t\t}\n\n\t\t}\n\n\t\t/*\n\t\t*   var book = ePub({ bookPath: \"path/to/book.epub\", restore: true });\n\t\t*\n\t\t*   - OR -\n\t\t*\n\t\t*   var book = ePub({ restore: true });\n\t\t*   book.open(\"path/to/book.epub\");\n\t\t*/\n\n\t\tif( arguments[0] && typeof arguments[0] === 'object' && !(arguments[0] instanceof ArrayBuffer)) {\n\t\t\toptions = arguments[0];\n\t\t}\n\n\n\t\treturn new EPUBJS.Book(options);\n\t};\n\n\t//exports to multiple environments\n\tif (typeof define === 'function' && define.amd) {\n\t\t//AMD\n\t\tdefine(['rsvp', 'jszip', 'localforage'], function(RSVP, JSZip, localForage){ return ePub; });\n\t} else if (typeof module != \"undefined\" && module.exports) {\n\t\t//Node\n\t\tglobal.RSVP = require('rsvp');\n\t\tglobal.JSZip = require('jszip');\n\t\tglobal.localForage = require('localforage');\n\t\tmodule.exports = ePub;\n\t}\n\n})(window);\n\nEPUBJS.Book = function(options){\n\n\tvar book = this;\n\n\tthis.settings = EPUBJS.core.defaults(options || {}, {\n\t\tbookPath : undefined,\n\t\tbookKey : undefined,\n\t\tpackageUrl : undefined,\n\t\tstorage: false, //-- true (auto) or false (none) | override: 'ram', 'websqldatabase', 'indexeddb', 'filesystem'\n\t\tfromStorage : false,\n\t\tsaved : false,\n\t\tonline : true,\n\t\tcontained : false,\n\t\twidth : undefined,\n\t\theight: undefined,\n\t\tlayoutOveride : undefined, // Default: { spread: 'reflowable', layout: 'auto', orientation: 'auto'}\n\t\torientation : undefined,\n\t\tminSpreadWidth: 768, //-- overridden by spread: none (never) / both (always)\n\t\tgap: \"auto\", //-- \"auto\" or int\n\t\tversion: 1,\n\t\trestore: false,\n\t\treload : false,\n\t\tgoto : false,\n\t\tstyles : {},\n\t\theadTags : {},\n\t\twithCredentials: false,\n\t\trender_method: \"Iframe\",\n\t\tdisplayLastPage: false\n\t});\n\n\tthis.settings.EPUBJSVERSION = EPUBJS.VERSION;\n\n\tthis.spinePos = 0;\n\tthis.stored = false;\n\n\t//-- All Book events for listening\n\t/*\n\t\tbook:ready\n\t\tbook:stored\n\t\tbook:online\n\t\tbook:offline\n\t\tbook:pageChanged\n\t\tbook:loadFailed\n\t\tbook:loadChapterFailed\n\t*/\n\n\t//-- Adds Hook methods to the Book prototype\n\t//   Hooks will all return before triggering the callback.\n\t// EPUBJS.Hooks.mixin(this);\n\t//-- Get pre-registered hooks for events\n\t// this.getHooks(\"beforeChapterDisplay\");\n\n\tthis.online = this.settings.online || navigator.onLine;\n\tthis.networkListeners();\n\n\tthis.ready = {\n\t\tmanifest: new RSVP.defer(),\n\t\tspine: new RSVP.defer(),\n\t\tmetadata: new RSVP.defer(),\n\t\tcover: new RSVP.defer(),\n\t\ttoc: new RSVP.defer(),\n\t\tpageList: new RSVP.defer()\n\t};\n\n\tthis.readyPromises = [\n\t\tthis.ready.manifest.promise,\n\t\tthis.ready.spine.promise,\n\t\tthis.ready.metadata.promise,\n\t\tthis.ready.cover.promise,\n\t\tthis.ready.toc.promise\n\t];\n\n\tthis.pageList = [];\n\tthis.pagination = new EPUBJS.Pagination();\n\tthis.pageListReady = this.ready.pageList.promise;\n\n\tthis.ready.all = RSVP.all(this.readyPromises);\n\n\tthis.ready.all.then(this._ready.bind(this));\n\n\t// Queue for methods used before rendering\n\tthis.isRendered = false;\n\tthis._q = EPUBJS.core.queue(this);\n\t// Queue for rendering\n\tthis._rendering = false;\n\tthis._displayQ = EPUBJS.core.queue(this);\n\t// Queue for going to another location\n\tthis._moving = false;\n\tthis._gotoQ = EPUBJS.core.queue(this);\n\n\t/**\n\t* Creates a new renderer.\n\t* The renderer will handle displaying the content using the method provided in the settings\n\t*/\n\tthis.renderer = new EPUBJS.Renderer(this.settings.render_method);\n\t//-- Set the width at which to switch from spreads to single pages\n\tthis.renderer.setMinSpreadWidth(this.settings.minSpreadWidth);\n\tthis.renderer.setGap(this.settings.gap);\n\t//-- Pass through the renderer events\n\tthis.listenToRenderer(this.renderer);\n\n\tthis.defer_opened = new RSVP.defer();\n\tthis.opened = this.defer_opened.promise;\n\n\tthis.store = false; //-- False if not using storage;\n\n\t//-- Determine storage method\n\t//-- Override options: none | ram | websqldatabase | indexeddb | filesystem\n\tif(this.settings.storage !== false){\n\t\t// this.storage = new fileStorage.storage(this.settings.storage);\n\t\tthis.fromStorage(true);\n\t}\n\n\t// BookUrl is optional, but if present start loading process\n\tif(typeof this.settings.bookPath === 'string' || this.settings.bookPath instanceof ArrayBuffer) {\n\t\tthis.open(this.settings.bookPath, this.settings.reload);\n\t}\n\n\twindow.addEventListener(\"beforeunload\", this.unload.bind(this), false);\n\n\t//-- Listen for these promises:\n\t//-- book.opened.then()\n\t//-- book.rendered.then()\n};\n\n//-- Check bookUrl and start parsing book Assets or load them from storage\nEPUBJS.Book.prototype.open = function(bookPath, forceReload){\n\tvar book = this,\n\t\t\tepubpackage,\n\t\t\topened = new RSVP.defer();\n\n\tthis.settings.bookPath = bookPath;\n\n\tif(this.settings.contained || this.isContained(bookPath)){\n\n\t\tthis.settings.contained = this.contained = true;\n\n\t\tthis.bookUrl = '';\n\n\t\tepubpackage = this.unarchive(bookPath).\n\t\t\tthen(function(){\n\t\t\t\treturn book.loadPackage();\n\t\t\t});\n\n\t}\telse {\n\t\t//-- Get a absolute URL from the book path\n\t\tthis.bookUrl = this.urlFrom(bookPath);\n\n\t\tepubpackage = this.loadPackage();\n\t}\n\n\tif(this.settings.restore && !forceReload && localStorage){\n\t\t//-- Will load previous package json, or re-unpack if error\n\t\tepubpackage.then(function(packageXml) {\n\t\t\tvar identifier = book.packageIdentifier(packageXml);\n\t\t\tvar restored = book.restore(identifier);\n\n\t\t\tif(!restored) {\n\t\t\t\tbook.unpack(packageXml);\n\t\t\t}\n\t\t\topened.resolve();\n\t\t\tbook.defer_opened.resolve();\n\t\t});\n\n\t}else{\n\n\t\t//-- Get package information from epub opf\n\t\tepubpackage.then(function(packageXml) {\n\t\t\tbook.unpack(packageXml);\n\t\t\topened.resolve();\n\t\t\tbook.defer_opened.resolve();\n\t\t});\n\t}\n\n\tthis._registerReplacements(this.renderer);\n\n\treturn opened.promise;\n\n};\n\nEPUBJS.Book.prototype.loadPackage = function(_containerPath){\n\tvar book = this,\n\t\t\tparse = new EPUBJS.Parser(),\n\t\t\tcontainerPath = _containerPath || \"META-INF/container.xml\",\n\t\t\tcontainerXml,\n\t\t\tpackageXml;\n\n\tif(!this.settings.packageUrl) { //-- provide the packageUrl to skip this step\n\t\tpackageXml = book.loadXml(book.bookUrl + containerPath).\n\t\t\tthen(function(containerXml){\n\t\t\t\treturn parse.container(containerXml); // Container has path to content\n\t\t\t}).\n\t\t\tthen(function(paths){\n\t\t\t\tbook.settings.contentsPath = book.bookUrl + paths.basePath;\n\t\t\t\tbook.settings.packageUrl = book.bookUrl + paths.packagePath;\n\t\t\t\tbook.settings.encoding = paths.encoding;\n\t\t\t\treturn book.loadXml(book.settings.packageUrl); // Containes manifest, spine and metadata\n\t\t\t});\n\t} else {\n\t\tpackageXml = book.loadXml(book.settings.packageUrl);\n\t}\n\n\tpackageXml.catch(function(error) {\n\t\t// handle errors in either of the two requests\n\t\tconsole.error(\"Could not load book at: \"+ containerPath);\n\t\tbook.trigger(\"book:loadFailed\", containerPath);\n\t});\n\treturn packageXml;\n};\n\nEPUBJS.Book.prototype.packageIdentifier = function(packageXml){\n\tvar book = this,\n\t\t\tparse = new EPUBJS.Parser();\n\n\treturn parse.identifier(packageXml);\n};\n\nEPUBJS.Book.prototype.unpack = function(packageXml){\n\tvar book = this,\n\t\t\tparse = new EPUBJS.Parser();\n\n\tbook.contents = parse.packageContents(packageXml, book.settings.contentsPath); // Extract info from contents\n\n\tbook.manifest = book.contents.manifest;\n\tbook.spine = book.contents.spine;\n\tbook.spineIndexByURL = book.contents.spineIndexByURL;\n\tbook.metadata = book.contents.metadata;\n\tif(!book.settings.bookKey) {\n\t\tbook.settings.bookKey = book.generateBookKey(book.metadata.identifier);\n\t}\n\n\t//-- Set Globbal Layout setting based on metadata\n\tbook.globalLayoutProperties = book.parseLayoutProperties(book.metadata);\n\n\tif(book.contents.coverPath) {\n\t\tbook.cover = book.contents.cover = book.settings.contentsPath + book.contents.coverPath;\n\t}\n\n\tbook.spineNodeIndex = book.contents.spineNodeIndex;\n\n\tbook.ready.manifest.resolve(book.contents.manifest);\n\tbook.ready.spine.resolve(book.contents.spine);\n\tbook.ready.metadata.resolve(book.contents.metadata);\n\tbook.ready.cover.resolve(book.contents.cover);\n\n\tbook.locations = new EPUBJS.Locations(book.spine, book.store, book.settings.withCredentials);\n\n\t//-- Load the TOC, optional; either the EPUB3 XHTML Navigation file or the EPUB2 NCX file\n\tif(book.contents.navPath) {\n\t\tbook.settings.navUrl = book.settings.contentsPath + book.contents.navPath;\n\n\t\tbook.loadXml(book.settings.navUrl).\n\t\t\tthen(function(navHtml){\n\t\t\t\treturn parse.nav(navHtml, book.spineIndexByURL, book.spine); // Grab Table of Contents\n\t\t\t}).then(function(toc){\n\t\t\t\tbook.toc = book.contents.toc = toc;\n\t\t\t\tbook.ready.toc.resolve(book.contents.toc);\n\t\t\t}, function(error) {\n\t\t\t\tbook.ready.toc.resolve(false);\n\t\t\t});\n\n\t\t// Load the optional pageList\n\t\tbook.loadXml(book.settings.navUrl).\n\t\t\tthen(function(navHtml){\n\t\t\t\treturn parse.pageList(navHtml, book.spineIndexByURL, book.spine);\n\t\t\t}).then(function(pageList){\n\t\t\t\tvar epubcfi = new EPUBJS.EpubCFI();\n\t\t\t\tvar wait = 0; // need to generate a cfi\n\n\t\t\t\t// No pageList found\n\t\t\t\tif(pageList.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tbook.pageList = book.contents.pageList = pageList;\n\n\t\t\t\t// Replace HREFs with CFI\n\t\t\t\tbook.pageList.forEach(function(pg){\n\t\t\t\t\tif(!pg.cfi) {\n\t\t\t\t\t\twait += 1;\n\t\t\t\t\t\tepubcfi.generateCfiFromHref(pg.href, book).then(function(cfi){\n\t\t\t\t\t\t\tpg.cfi = cfi;\n\t\t\t\t\t\t\tpg.packageUrl = book.settings.packageUrl;\n\n\t\t\t\t\t\t\twait -= 1;\n\t\t\t\t\t\t\tif(wait === 0) {\n\t\t\t\t\t\t\t\tbook.pagination.process(book.pageList);\n\t\t\t\t\t\t\t\tbook.ready.pageList.resolve(book.pageList);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif(!wait) {\n\t\t\t\t\tbook.pagination.process(book.pageList);\n\t\t\t\t\tbook.ready.pageList.resolve(book.pageList);\n\t\t\t\t}\n\n\t\t\t}, function(error) {\n\t\t\t\tbook.ready.pageList.resolve([]);\n\t\t\t});\n\t} else if(book.contents.tocPath) {\n\t\tbook.settings.tocUrl = book.settings.contentsPath + book.contents.tocPath;\n\n\t\tbook.loadXml(book.settings.tocUrl).\n\t\t\tthen(function(tocXml){\n\t\t\t\t\treturn parse.toc(tocXml, book.spineIndexByURL, book.spine); // Grab Table of Contents\n\t\t\t}, function(err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}).then(function(toc){\n\t\t\t\tbook.toc = book.contents.toc = toc;\n\t\t\t\tbook.ready.toc.resolve(book.contents.toc);\n\t\t\t}, function(error) {\n\t\t\t\tbook.ready.toc.resolve(false);\n\t\t\t});\n\n\t} else {\n\t\tbook.ready.toc.resolve(false);\n\t}\n\n};\n\nEPUBJS.Book.prototype.createHiddenRender = function(renderer, _width, _height) {\n\tvar box = this.element.getBoundingClientRect();\n\tvar width = _width || this.settings.width || box.width;\n\tvar height = _height || this.settings.height || box.height;\n\tvar hiddenContainer;\n\tvar hiddenEl;\n\trenderer.setMinSpreadWidth(this.settings.minSpreadWidth);\n\trenderer.setGap(this.settings.gap);\n\n\tthis._registerReplacements(renderer);\n\tif(this.settings.forceSingle) {\n\t\trenderer.forceSingle(true);\n\t}\n\n\thiddenContainer = document.createElement(\"div\");\n\thiddenContainer.style.visibility = \"hidden\";\n\thiddenContainer.style.overflow = \"hidden\";\n\thiddenContainer.style.width = \"0\";\n\thiddenContainer.style.height = \"0\";\n\tthis.element.appendChild(hiddenContainer);\n\n\thiddenEl = document.createElement(\"div\");\n\thiddenEl.style.visibility = \"hidden\";\n\thiddenEl.style.overflow = \"hidden\";\n\thiddenEl.style.width = width + \"px\";//\"0\";\n\thiddenEl.style.height = height +\"px\"; //\"0\";\n\thiddenContainer.appendChild(hiddenEl);\n\n\trenderer.initialize(hiddenEl, this.settings.width, this.settings.height);\n\treturn hiddenContainer;\n};\n\n// Generates the pageList array by loading every chapter and paging through them\nEPUBJS.Book.prototype.generatePageList = function(width, height, flag){\n\tvar pageList = [];\n\tvar pager = new EPUBJS.Renderer(this.settings.render_method, false); //hidden\n\tvar hiddenContainer = this.createHiddenRender(pager, width, height);\n\tvar deferred = new RSVP.defer();\n\tvar spinePos = -1;\n\tvar spineLength = this.spine.length;\n\tvar totalPages = 0;\n\tvar currentPage = 0;\n\tvar nextChapter = function(deferred){\n\t\tvar chapter;\n\t\tvar next = spinePos + 1;\n\t\tvar done = deferred || new RSVP.defer();\n\t\tvar loaded;\n\t\tif(next >= spineLength) {\n\t\t\tdone.resolve();\n\t\t} else {\n            if (flag && flag.cancelled) {\n                pager.remove();\n                this.element.removeChild(hiddenContainer);\n                done.reject(new Error(\"User cancelled\"));\n                return;\n            }\n\n\t\t\tspinePos = next;\n\t\t\tchapter = new EPUBJS.Chapter(this.spine[spinePos], this.store);\n\t\t\tpager.displayChapter(chapter, this.globalLayoutProperties).then(function(chap){\n\t\t\t\tpager.pageMap.forEach(function(item){\n\t\t\t\t\tcurrentPage += 1;\n\t\t\t\t\tpageList.push({\n\t\t\t\t\t\t\"cfi\" : item.start,\n\t\t\t\t\t\t\"page\" : currentPage\n\t\t\t\t\t});\n\n\t\t\t\t});\n\n\t\t\t\tif(pager.pageMap.length % 2 > 0 &&\n\t\t\t\t\t pager.spreads) {\n\t\t\t\t\tcurrentPage += 1; // Handle Spreads\n\t\t\t\t\tpageList.push({\n\t\t\t\t\t\t\"cfi\" : pager.pageMap[pager.pageMap.length - 1].end,\n\t\t\t\t\t\t\"page\" : currentPage\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Load up the next chapter\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tnextChapter(done);\n\t\t\t\t}, 1);\n\t\t\t});\n\t\t}\n\t\treturn done.promise;\n\t}.bind(this);\n\n\tvar finished = nextChapter().then(function(){\n\t\tpager.remove();\n\t\tthis.element.removeChild(hiddenContainer);\n\t\tdeferred.resolve(pageList);\n\t}.bind(this), function(reason) {\n        deferred.reject(reason);\n    });\n\n\treturn deferred.promise;\n};\n\n// Render out entire book and generate the pagination\n// Width and Height are optional and will default to the current dimensions\nEPUBJS.Book.prototype.generatePagination = function(width, height, flag) {\n\tvar book = this;\n\tvar defered = new RSVP.defer();\n\n\tthis.ready.spine.promise.then(function(){\n\t\tbook.generatePageList(width, height, flag).then(function(pageList){\n\t\t\tbook.pageList = book.contents.pageList = pageList;\n\t\t\tbook.pagination.process(pageList);\n\t\t\tbook.ready.pageList.resolve(book.pageList);\n\t\t\tdefered.resolve(book.pageList);\n\t\t}, function(reason) {\n            defered.reject(reason);\n\t\t});\n\t});\n\n\treturn defered.promise;\n};\n\n// Process the pagination from a JSON array containing the pagelist\nEPUBJS.Book.prototype.loadPagination = function(pagelistJSON) {\n\tvar pageList;\n\n\tif (typeof(pagelistJSON) === \"string\") {\n\t\tpageList = JSON.parse(pagelistJSON);\n\t} else {\n\t\tpageList = pagelistJSON;\n\t}\n\n\tif(pageList && pageList.length) {\n\t\tthis.pageList = pageList;\n\t\tthis.pagination.process(this.pageList);\n\t\tthis.ready.pageList.resolve(this.pageList);\n\t}\n\treturn this.pageList;\n};\n\nEPUBJS.Book.prototype.getPageList = function() {\n\treturn this.ready.pageList.promise;\n};\n\nEPUBJS.Book.prototype.getMetadata = function() {\n\treturn this.ready.metadata.promise;\n};\n\nEPUBJS.Book.prototype.getToc = function() {\n\treturn this.ready.toc.promise;\n};\n\n/* Private Helpers */\n\n//-- Listeners for browser events\nEPUBJS.Book.prototype.networkListeners = function(){\n\tvar book = this;\n\twindow.addEventListener(\"offline\", function(e) {\n\t\tbook.online = false;\n\t\tif (book.settings.storage) {\n\t\t\tbook.fromStorage(true);\n\t\t}\n\t\tbook.trigger(\"book:offline\");\n\t}, false);\n\n\twindow.addEventListener(\"online\", function(e) {\n\t\tbook.online = true;\n\t\tif (book.settings.storage) {\n\t\t\tbook.fromStorage(false);\n\t\t}\n\t\tbook.trigger(\"book:online\");\n\t}, false);\n\n};\n\n// Listen to all events the renderer triggers and pass them as book events\nEPUBJS.Book.prototype.listenToRenderer = function(renderer){\n\tvar book = this;\n\trenderer.Events.forEach(function(eventName){\n\t\trenderer.on(eventName, function(e){\n\t\t\tbook.trigger(eventName, e);\n\t\t});\n\t});\n\n\trenderer.on(\"renderer:visibleRangeChanged\", function(range) {\n\t\tvar startPage, endPage, percent;\n\t\tvar pageRange = [];\n\n\t\tif(this.pageList.length > 0) {\n\t\t\tstartPage = this.pagination.pageFromCfi(range.start);\n\t\t\tpercent = this.pagination.percentageFromPage(startPage);\n\t\t\tpageRange.push(startPage);\n\n\t\t\tif(range.end) {\n\t\t\t\tendPage = this.pagination.pageFromCfi(range.end);\n\t\t\t\t//if(startPage != endPage) {\n\t\t\t\t\tpageRange.push(endPage);\n\t\t\t\t//}\n\t\t\t}\n\t\t\tthis.trigger(\"book:pageChanged\", {\n\t\t\t\t\"anchorPage\": startPage,\n\t\t\t\t\"percentage\": percent,\n\t\t\t\t\"pageRange\" : pageRange\n\t\t\t});\n\n\t\t\t// TODO: Add event for first and last page.\n\t\t\t// (though last is going to be hard, since it could be several reflowed pages long)\n\t\t}\n\t}.bind(this));\n\n\trenderer.on(\"render:loaded\", this.loadChange.bind(this));\n};\n\n// Listens for load events from the Renderer and checks against the current chapter\n// Prevents the Render from loading a different chapter when back button is pressed\nEPUBJS.Book.prototype.loadChange = function(url){\n\tvar uri = EPUBJS.core.uri(url);\n\tvar chapterUri = EPUBJS.core.uri(this.currentChapter.absolute);\n\tvar spinePos, chapter;\n\n\tif(uri.path != chapterUri.path){\n\t\tconsole.warn(\"Miss Match\", uri.path, this.currentChapter.absolute);\n\t\t// this.goto(uri.filename);\n\n\t\t// Set the current chapter to what is being displayed\n\t\tspinePos = this.spineIndexByURL[uri.filename];\n\t\tchapter = new EPUBJS.Chapter(this.spine[spinePos], this.store);\n\t\tthis.currentChapter = chapter;\n\n\t\t// setup the renderer with the displayed chapter\n\t\tthis.renderer.currentChapter = chapter;\n\t\tthis.renderer.afterLoad(this.renderer.render.docEl);\n\t\tthis.renderer.beforeDisplay(function () {\n\t\t\tthis.renderer.afterDisplay();\n\t\t}.bind(this));\n\n\t} else if(!this._rendering) {\n\t\tthis.renderer.reformat();\n\t}\n};\n\nEPUBJS.Book.prototype.unlistenToRenderer = function(renderer){\n\trenderer.Events.forEach(function(eventName){\n\t\trenderer.off(eventName);\n\t});\n};\n\n//-- Returns the cover\nEPUBJS.Book.prototype.coverUrl = function(){\n\tvar retrieved = this.ready.cover.promise\n\t\t.then(function(url) {\n\t\t\tif(this.settings.fromStorage) {\n\t\t\t\treturn this.store.getUrl(this.contents.cover);\n\t\t\t} else if(this.settings.contained) {\n\t\t\t\treturn this.zip.getUrl(this.contents.cover);\n\t\t\t}else{\n\t\t\t\treturn this.contents.cover;\n\t\t\t}\n\t\t}.bind(this));\n\n\tretrieved.then(function(url) {\n\t\t\tthis.cover = url;\n\t\t}.bind(this));\n\n\treturn retrieved;\n};\n\n//-- Choose between a request from store or a request from network\nEPUBJS.Book.prototype.loadXml = function(url){\n\tif(this.settings.fromStorage) {\n\t\treturn this.store.getXml(url, this.settings.encoding);\n\t} else if(this.settings.contained) {\n\t\treturn this.zip.getXml(url, this.settings.encoding);\n\t}else{\n\t\treturn EPUBJS.core.request(url, 'xml', this.settings.withCredentials);\n\t}\n};\n\n//-- Turns a url into a absolute url\nEPUBJS.Book.prototype.urlFrom = function(bookPath){\n\tvar uri = EPUBJS.core.uri(bookPath),\n\t\tabsolute = uri.protocol,\n\t\tfromRoot = uri.path[0] == \"/\",\n\t\tlocation = window.location,\n\t\t//-- Get URL orgin, try for native or combine\n\t\torigin = location.origin || location.protocol + \"//\" + location.host,\n\t\tbaseTag = document.getElementsByTagName('base'),\n\t\tbase;\n\n\n\t//-- Check is Base tag is set\n\n\tif(baseTag.length) {\n\t\tbase = baseTag[0].href;\n\t}\n\n\t//-- 1. Check if url is absolute\n\tif(uri.protocol){\n\t\treturn uri.origin + uri.path;\n\t}\n\n\t//-- 2. Check if url starts with /, add base url\n\tif(!absolute && fromRoot){\n\t\treturn (base || origin) + uri.path;\n\t}\n\n\t//-- 3. Or find full path to url and add that\n\tif(!absolute && !fromRoot){\n\t\treturn EPUBJS.core.resolveUrl(base || location.pathname, uri.path);\n\t}\n\n};\n\n\nEPUBJS.Book.prototype.unarchive = function(bookPath){\n\tvar book = this,\n\t\tunarchived;\n\n\t//-- Must use storage\n\t// if(this.settings.storage == false ){\n\t\t// this.settings.storage = true;\n\t\t// this.storage = new fileStorage.storage();\n\t// }\n\n\tthis.zip = new EPUBJS.Unarchiver();\n\tthis.store = this.zip; // Use zip storaged in ram\n\treturn this.zip.open(bookPath);\n};\n\n//-- Checks if url has a .epub or .zip extension, or is ArrayBuffer (of zip/epub)\nEPUBJS.Book.prototype.isContained = function(bookUrl){\n\tif (bookUrl instanceof ArrayBuffer) {\n\t\treturn true;\n\t}\n\tvar uri = EPUBJS.core.uri(bookUrl);\n\n\tif(uri.extension && (uri.extension == \"epub\" || uri.extension == \"zip\")){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n//-- Checks if the book can be retrieved from localStorage\nEPUBJS.Book.prototype.isSaved = function(bookKey) {\n\tvar storedSettings;\n\n\tif(!localStorage) {\n\t\treturn false;\n\t}\n\n\tstoredSettings = localStorage.getItem(bookKey);\n\n\tif( !localStorage ||\n\t\tstoredSettings === null) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n};\n\n// Generates the Book Key using the identifer in the manifest or other string provided\nEPUBJS.Book.prototype.generateBookKey = function(identifier){\n\treturn \"epubjs:\" + EPUBJS.VERSION + \":\" + window.location.host + \":\" + identifier;\n};\n\nEPUBJS.Book.prototype.saveContents = function(){\n\tif(!localStorage) {\n\t\treturn false;\n\t}\n\tlocalStorage.setItem(this.settings.bookKey, JSON.stringify(this.contents));\n};\n\nEPUBJS.Book.prototype.removeSavedContents = function() {\n\tif(!localStorage) {\n\t\treturn false;\n\t}\n\tlocalStorage.removeItem(this.settings.bookKey);\n};\n\n\n\n//-- Takes a string or a element\nEPUBJS.Book.prototype.renderTo = function(elem){\n\tvar book = this,\n\t\trendered;\n\n\tif(EPUBJS.core.isElement(elem)) {\n\t\tthis.element = elem;\n\t} else if (typeof elem == \"string\") {\n\t\tthis.element = EPUBJS.core.getEl(elem);\n\t} else {\n\t\tconsole.error(\"Not an Element\");\n\t\treturn;\n\t}\n\n\trendered = this.opened.\n\t\t\t\tthen(function(){\n\t\t\t\t\t// book.render = new EPUBJS.Renderer[this.settings.renderer](book);\n\t\t\t\t\tbook.renderer.initialize(book.element, book.settings.width, book.settings.height);\n\n\t\t\t\t\tif(book.metadata.direction) {\n\t\t\t\t\t\tbook.renderer.setDirection(book.metadata.direction);\n\t\t\t\t\t}\n\n\t\t\t\t\tbook._rendered();\n\t\t\t\t\treturn book.startDisplay();\n\t\t\t\t});\n\n\t// rendered.then(null, function(error) { console.error(error); });\n\n\treturn rendered;\n};\n\nEPUBJS.Book.prototype.startDisplay = function(){\n\tvar display;\n\n\tif(this.settings.goto) {\n\t\tdisplay = this.goto(this.settings.goto);\n\t}else if(this.settings.previousLocationCfi) {\n\t\tdisplay = this.gotoCfi(this.settings.previousLocationCfi);\n\t}else{\n\t\tdisplay = this.displayChapter(this.spinePos, this.settings.displayLastPage);\n\t}\n\n\treturn display;\n};\n\nEPUBJS.Book.prototype.restore = function(identifier){\n\n\tvar book = this,\n\t\t\tfetch = ['manifest', 'spine', 'metadata', 'cover', 'toc', 'spineNodeIndex', 'spineIndexByURL', 'globalLayoutProperties'],\n\t\t\treject = false,\n\t\t\tbookKey = this.generateBookKey(identifier),\n\t\t\tfromStore = localStorage.getItem(bookKey),\n\t\t\tlen = fetch.length,\n\t\t\ti;\n\n\tif(this.settings.clearSaved) reject = true;\n\n\tif(!reject && fromStore != 'undefined' && fromStore !== null){\n\t\tbook.contents = JSON.parse(fromStore);\n\n\t\tfor(i = 0; i < len; i++) {\n\t\t\tvar item = fetch[i];\n\n\t\t\tif(!book.contents[item]) {\n\t\t\t\treject = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbook[item] = book.contents[item];\n\t\t}\n\t}\n\n\tif(reject || !fromStore || !this.contents || !this.settings.contentsPath){\n\t\treturn false;\n\t}else{\n\t\tthis.settings.bookKey = bookKey;\n\t\tthis.ready.manifest.resolve(this.manifest);\n\t\tthis.ready.spine.resolve(this.spine);\n\t\tthis.ready.metadata.resolve(this.metadata);\n\t\tthis.ready.cover.resolve(this.cover);\n\t\tthis.ready.toc.resolve(this.toc);\n\t\treturn true;\n\t}\n\n};\n\nEPUBJS.Book.prototype.displayChapter = function(chap, end, deferred){\n\tvar book = this,\n\t\trender,\n\t\tcfi,\n\t\tpos,\n\t\tstore,\n\t\tdefer = deferred || new RSVP.defer();\n\n\tvar chapter;\n\n\tif(!this.isRendered) {\n\t\tthis._q.enqueue(\"displayChapter\", arguments);\n\t\t// Reject for now. TODO: pass promise to queue\n\t\tdefer.reject({\n\t\t\t\tmessage : \"Rendering\",\n\t\t\t\tstack : new Error().stack\n\t\t\t});\n\t\treturn defer.promise;\n\t}\n\n\n\tif(this._rendering || this.renderer._moving) {\n\t\t// Pass along the current defer\n\t\tthis._displayQ.enqueue(\"displayChapter\", [chap, end, defer]);\n\t\treturn defer.promise;\n\t}\n\n\tif(EPUBJS.core.isNumber(chap)){\n\t\tpos = chap;\n\t}else{\n\t\tcfi = new EPUBJS.EpubCFI(chap);\n\t\tpos = cfi.spinePos;\n\t}\n\n\tif(pos < 0 || pos >= this.spine.length){\n\t\tconsole.warn(\"Not A Valid Location\");\n\t\tpos = 0;\n\t\tend = false;\n\t\tcfi = false;\n\t}\n\n\t//-- Create a new chapter\n\tchapter = new EPUBJS.Chapter(this.spine[pos], this.store);\n\n\tthis._rendering = true;\n\n\tif(this._needsAssetReplacement()) {\n\n\t\tchapter.registerHook(\"beforeChapterRender\", [\n\t\t\tEPUBJS.replace.head,\n\t\t\tEPUBJS.replace.resources,\n\t\t\tEPUBJS.replace.svg\n\t\t], true);\n\n\t}\n\n\tbook.currentChapter = chapter;\n\n\trender = book.renderer.displayChapter(chapter, this.globalLayoutProperties);\n\tif(cfi) {\n\t\tbook.renderer.gotoCfi(cfi);\n\t} else if(end) {\n\t\tbook.renderer.lastPage();\n\t}\n\t//-- Success, Clear render queue\n\trender.then(function(rendered){\n\t\t// var inwait;\n\t\t//-- Set the book's spine position\n\t\tbook.spinePos = pos;\n\n\t\tdefer.resolve(book.renderer);\n\n\t\tif(book.settings.fromStorage === false &&\n\t\t\tbook.settings.contained === false) {\n\t\t\tbook.preloadNextChapter();\n\t\t}\n\n\t\tbook._rendering = false;\n\t\tbook._displayQ.dequeue();\n\t\tif(book._displayQ.length() === 0) {\n\t\t\tbook._gotoQ.dequeue();\n\t\t}\n\n\t}, function(error) {\n\t\t// handle errors in either of the two requests\n\t\tconsole.error(\"Could not load Chapter: \"+ chapter.absolute, error);\n\t\tbook.trigger(\"book:chapterLoadFailed\", chapter.absolute);\n\t\tbook._rendering = false;\n\t\tdefer.reject(error);\n\t});\n\n\treturn defer.promise;\n};\n\nEPUBJS.Book.prototype.nextPage = function(defer){\n    var defer = defer || new RSVP.defer();\n\n\tif (!this.isRendered) {\n        this._q.enqueue(\"nextPage\", [defer]);\n        return defer.promise;\n    }\n\n\tvar next = this.renderer.nextPage();\n\tif (!next){\n\t\treturn this.nextChapter(defer);\n\t}\n\n    defer.resolve(true);\n    return defer.promise;\n};\n\nEPUBJS.Book.prototype.prevPage = function(defer) {\n    var defer = defer || new RSVP.defer();\n\n\tif (!this.isRendered) {\n        this._q.enqueue(\"prevPage\", [defer]);\n        return defer.promise;\n    }\n\n\tvar prev = this.renderer.prevPage();\n\tif (!prev){\n\t\treturn this.prevChapter(defer);\n\t}\n\n    defer.resolve(true);\n    return defer.promise;\n};\n\nEPUBJS.Book.prototype.nextChapter = function(defer) {\n    var defer = defer || new RSVP.defer();\n\n    if (this.spinePos < this.spine.length - 1) {\n\t\tvar next = this.spinePos + 1;\n\t\t// Skip non linear chapters\n\t\twhile (this.spine[next] && this.spine[next].linear && this.spine[next].linear == 'no') {\n\t\t\tnext++;\n\t\t}\n\t\tif (next < this.spine.length) {\n\t\t\treturn this.displayChapter(next, false, defer);\n\t\t}\n\t}\n\n    this.trigger(\"book:atEnd\");\n    defer.resolve(true);\n    return defer.promise;\n};\n\nEPUBJS.Book.prototype.prevChapter = function(defer) {\n    var defer = defer || new RSVP.defer();\n\n    if (this.spinePos > 0) {\n\t\tvar prev = this.spinePos - 1;\n\t\twhile (this.spine[prev] && this.spine[prev].linear && this.spine[prev].linear == 'no') {\n\t\t\tprev--;\n\t\t}\n\t\tif (prev >= 0) {\n\t\t\treturn this.displayChapter(prev, true, defer);\n\t\t}\n    }\n\n    this.trigger(\"book:atStart\");\n    defer.resolve(true);\n    return defer.promise;\n};\n\nEPUBJS.Book.prototype.getCurrentLocationCfi = function() {\n\tif(!this.isRendered) return false;\n\treturn this.renderer.currentLocationCfi;\n};\n\nEPUBJS.Book.prototype.goto = function(target){\n\n\tif(target.indexOf(\"epubcfi(\") === 0) {\n\t\treturn this.gotoCfi(target);\n\t} else if(target.indexOf(\"%\") === target.length-1) {\n\t\treturn this.gotoPercentage(parseInt(target.substring(0, target.length-1))/100);\n\t} else if(typeof target === \"number\" || isNaN(target) === false){\n\t\treturn this.gotoPage(target);\n\t} else {\n\t\treturn this.gotoHref(target);\n\t}\n\n};\n\nEPUBJS.Book.prototype.gotoCfi = function(cfiString, defer){\n\tvar cfi,\n\t\t\tspinePos,\n\t\t\tspineItem,\n\t\t\trendered,\n\t\t\tpromise,\n\t\t\trender,\n\t\t\tdeferred = defer || new RSVP.defer();\n\n\tif(!this.isRendered) {\n\t\tconsole.warn(\"Not yet Rendered\");\n\t\tthis.settings.previousLocationCfi = cfiString;\n\t\treturn false;\n\t}\n\n\t// Currently going to a chapter\n\tif(this._moving || this._rendering) {\n\t\tconsole.warn(\"Renderer is moving\");\n\t\tthis._gotoQ.enqueue(\"gotoCfi\", [cfiString, deferred]);\n\t\treturn false;\n\t}\n\n\tcfi = new EPUBJS.EpubCFI(cfiString);\n\tspinePos = cfi.spinePos;\n\n\tif(spinePos == -1) {\n\t\treturn false;\n\t}\n\n\tspineItem = this.spine[spinePos];\n\tpromise = deferred.promise;\n\tthis._moving = true;\n\t//-- If same chapter only stay on current chapter\n\tif(this.currentChapter && this.spinePos === spinePos){\n\t\tthis.renderer.gotoCfi(cfi);\n\t\tthis._moving = false;\n\t\tdeferred.resolve(this.renderer.currentLocationCfi);\n\t} else {\n\n\t\tif(!spineItem || spinePos == -1) {\n\t\t\tspinePos = 0;\n\t\t\tspineItem = this.spine[spinePos];\n\t\t}\n\n\t\trender = this.displayChapter(cfiString);\n\n\t\trender.then(function(rendered){\n\t\t\tthis._moving = false;\n\t\t\tdeferred.resolve(rendered.currentLocationCfi);\n\t\t}.bind(this), function() {\n\t\t\tthis._moving = false;\n        }.bind(this));\n\n\t}\n\n\tpromise.then(function(){\n\t\tthis._gotoQ.dequeue();\n\t}.bind(this));\n\n\treturn promise;\n};\n\nEPUBJS.Book.prototype.gotoHref = function(url, defer){\n\tvar split, chapter, section, relativeURL, spinePos;\n\tvar deferred = defer || new RSVP.defer();\n\n\tif(!this.isRendered) {\n\t\tthis.settings.goto = url;\n\t\treturn false;\n\t}\n\n\t// Currently going to a chapter\n\tif(this._moving || this._rendering) {\n\t\tthis._gotoQ.enqueue(\"gotoHref\", [url, deferred]);\n\t\treturn false;\n\t}\n\n\tsplit = url.split(\"#\");\n\tchapter = split[0];\n\tsection = split[1] || false;\n\tif (chapter.search(\"://\") == -1) {\n\t\trelativeURL = chapter.replace(EPUBJS.core.uri(this.settings.contentsPath).path, '');\n\t} else {\n\t\trelativeURL = chapter.replace(this.settings.contentsPath, '');\n\t}\n\tspinePos = this.spineIndexByURL[relativeURL];\n\n\t//-- If link fragment only stay on current chapter\n\tif(!chapter){\n\t\tspinePos = this.currentChapter ? this.currentChapter.spinePos : 0;\n\t}\n\n\t//-- Check that URL is present in the index, or stop\n\tif(typeof(spinePos) != \"number\") return false;\n\n\tif(!this.currentChapter || spinePos != this.currentChapter.spinePos){\n\t\t//-- Load new chapter if different than current\n\t\treturn this.displayChapter(spinePos).then(function(){\n\t\t\t\tif(section){\n\t\t\t\t\tthis.renderer.section(section);\n\t\t\t\t}\n\t\t\t\tdeferred.resolve(this.renderer.currentLocationCfi);\n\t\t\t}.bind(this));\n\t}else{\n\t\t//--  Goto section\n\t\tif(section) {\n\t\t\tthis.renderer.section(section);\n\t\t} else {\n\t\t\t// Or jump to the start\n\t\t\tthis.renderer.firstPage();\n\t\t}\n\t\tdeferred.resolve(this.renderer.currentLocationCfi);\n\t}\n\n\tdeferred.promise.then(function(){\n\t\tthis._gotoQ.dequeue();\n\t}.bind(this));\n\n\treturn deferred.promise;\n};\n\nEPUBJS.Book.prototype.gotoPage = function(pg){\n\tvar cfi = this.pagination.cfiFromPage(pg);\n\treturn this.gotoCfi(cfi);\n};\n\nEPUBJS.Book.prototype.gotoPercentage = function(percent){\n\tvar pg = this.pagination.pageFromPercentage(percent);\n\treturn this.gotoPage(pg);\n};\n\nEPUBJS.Book.prototype.preloadNextChapter = function() {\n\tvar next;\n\tvar chap = this.spinePos + 1;\n\n\tif(chap >= this.spine.length){\n\t\treturn false;\n\t}\n\n\tnext = new EPUBJS.Chapter(this.spine[chap]);\n\tif(next) {\n\t\tEPUBJS.core.request(next.absolute);\n\t}\n};\n\nEPUBJS.Book.prototype.storeOffline = function() {\n\tvar book = this,\n\t\tassets = EPUBJS.core.values(this.manifest);\n\n\t//-- Creates a queue of all items to load\n\treturn this.store.put(assets).\n\t\t\tthen(function(){\n\t\t\t\tbook.settings.stored = true;\n\t\t\t\tbook.trigger(\"book:stored\");\n\t\t\t});\n};\n\nEPUBJS.Book.prototype.availableOffline = function() {\n\treturn this.settings.stored > 0 ? true : false;\n};\n\nEPUBJS.Book.prototype.toStorage = function () {\n\tvar key = this.settings.bookKey;\n\tthis.store.isStored(key).then(function(stored) {\n\n\t\tif (stored === true) {\n\t\t\tthis.settings.stored = true;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.storeOffline()\n\t\t\t.then(function() {\n\t\t\t\tthis.store.token(key, true);\n\t\t\t}.bind(this));\n\n\t}.bind(this));\n\n};\nEPUBJS.Book.prototype.fromStorage = function(stored) {\n\tvar hooks = [\n\t\tEPUBJS.replace.head,\n\t\tEPUBJS.replace.resources,\n\t\tEPUBJS.replace.svg\n\t];\n\n\tif(this.contained || this.settings.contained) return;\n\n\t//-- If there is network connection, store the books contents\n\tif(this.online){\n\t\tthis.opened.then(this.toStorage.bind(this));\n\t}\n\n\tif(this.store && this.settings.fromStorage && stored === false){\n\t\tthis.settings.fromStorage = false;\n\t\tthis.store.off(\"offline\");\n\t\t// this.renderer.removeHook(\"beforeChapterRender\", hooks, true);\n\t\tthis.store = false;\n\t}else if(!this.settings.fromStorage){\n\n\t\tthis.store = new EPUBJS.Storage(this.settings.credentials);\n\t\tthis.store.on(\"offline\", function (offline) {\n\t\t\tif (!offline) {\n\t\t\t\t// Online\n\t\t\t\tthis.offline = false;\n\t\t\t\tthis.settings.fromStorage = false;\n\t\t\t\t// this.renderer.removeHook(\"beforeChapterRender\", hooks, true);\n\t\t\t\tthis.trigger(\"book:online\");\n\t\t\t} else {\n\t\t\t\t// Offline\n\t\t\t\tthis.offline = true;\n\t\t\t\tthis.settings.fromStorage = true;\n\t\t\t\t// this.renderer.registerHook(\"beforeChapterRender\", hooks, true);\n\t\t\t\tthis.trigger(\"book:offline\");\n\t\t\t}\n\t\t}.bind(this));\n\n\t}\n\n};\n\nEPUBJS.Book.prototype.setStyle = function(style, val, prefixed) {\n\tvar noreflow = [\"color\", \"background\", \"background-color\"];\n\n\tif(!this.isRendered) return this._q.enqueue(\"setStyle\", arguments);\n\n\tthis.settings.styles[style] = val;\n\n\tthis.renderer.setStyle(style, val, prefixed);\n\n\tif(noreflow.indexOf(style) === -1) {\n\t\t// clearTimeout(this.reformatTimeout);\n\t\t// this.reformatTimeout = setTimeout(function(){\n\t\tthis.renderer.reformat();\n\t\t// }.bind(this), 10);\n\t}\n};\n\nEPUBJS.Book.prototype.removeStyle = function(style) {\n\tif(!this.isRendered) return this._q.enqueue(\"removeStyle\", arguments);\n\tthis.renderer.removeStyle(style);\n\tthis.renderer.reformat();\n\tdelete this.settings.styles[style];\n};\n\nEPUBJS.Book.prototype.addHeadTag = function(tag, attrs) {\n\tif(!this.isRendered) return this._q.enqueue(\"addHeadTag\", arguments);\n\tthis.settings.headTags[tag] = attrs;\n};\n\nEPUBJS.Book.prototype.useSpreads = function(use) {\n\tconsole.warn(\"useSpreads is deprecated, use forceSingle or set a layoutOveride instead\");\n\tif(use === false) {\n\t\tthis.forceSingle(true);\n\t} else {\n\t\tthis.forceSingle(false);\n\t}\n};\n\nEPUBJS.Book.prototype.forceSingle = function(_use) {\n\tvar force = typeof _use === \"undefined\" ? true : _use;\n\n\tthis.renderer.forceSingle(force);\n\tthis.settings.forceSingle = force;\n\tif(this.isRendered) {\n\t\tthis.renderer.reformat();\n\t}\n};\n\nEPUBJS.Book.prototype.setMinSpreadWidth = function(width) {\n\tthis.settings.minSpreadWidth = width;\n\tif(this.isRendered) {\n\t\tthis.renderer.setMinSpreadWidth(this.settings.minSpreadWidth);\n\t\tthis.renderer.reformat();\n\t}\n};\n\nEPUBJS.Book.prototype.setGap = function(gap) {\n\tthis.settings.gap = gap;\n\tif(this.isRendered) {\n\t\tthis.renderer.setGap(this.settings.gap);\n\t\tthis.renderer.reformat();\n\t}\n};\n\nEPUBJS.Book.prototype.chapter = function(path) {\n\tvar spinePos = this.spineIndexByURL[path];\n\tvar spineItem;\n\tvar chapter;\n\n\tif(spinePos){\n\t\tspineItem = this.spine[spinePos];\n\t\tchapter = new EPUBJS.Chapter(spineItem, this.store, this.settings.withCredentials);\n\t\tchapter.load();\n\t}\n\treturn chapter;\n};\n\nEPUBJS.Book.prototype.unload = function(){\n\n\tif(this.settings.restore && localStorage) {\n\t\tthis.saveContents();\n\t}\n\n\tthis.unlistenToRenderer(this.renderer);\n\n\tthis.trigger(\"book:unload\");\n};\n\nEPUBJS.Book.prototype.destroy = function() {\n\n\twindow.removeEventListener(\"beforeunload\", this.unload);\n\n\tif(this.currentChapter) this.currentChapter.unload();\n\n\tthis.unload();\n\n\tif(this.renderer) this.renderer.remove();\n\n};\n\nEPUBJS.Book.prototype._ready = function() {\n\n\tthis.trigger(\"book:ready\");\n\n};\n\nEPUBJS.Book.prototype._rendered = function(err) {\n\tvar book = this;\n\n\tthis.isRendered = true;\n\tthis.trigger(\"book:rendered\");\n\n\tthis._q.flush();\n};\n\n\nEPUBJS.Book.prototype.applyStyles = function(renderer, callback){\n\t// if(!this.isRendered) return this._q.enqueue(\"applyStyles\", arguments);\n\trenderer.applyStyles(this.settings.styles);\n\tcallback();\n};\n\nEPUBJS.Book.prototype.applyHeadTags = function(renderer, callback){\n\t// if(!this.isRendered) return this._q.enqueue(\"applyHeadTags\", arguments);\n\trenderer.applyHeadTags(this.settings.headTags);\n\tcallback();\n};\n\nEPUBJS.Book.prototype._registerReplacements = function(renderer){\n\trenderer.registerHook(\"beforeChapterDisplay\", this.applyStyles.bind(this, renderer), true);\n\trenderer.registerHook(\"beforeChapterDisplay\", this.applyHeadTags.bind(this, renderer), true);\n\trenderer.registerHook(\"beforeChapterDisplay\", EPUBJS.replace.hrefs.bind(this), true);\n};\n\nEPUBJS.Book.prototype._needsAssetReplacement = function(){\n\tif(this.settings.fromStorage) {\n\n\t\t//-- Filesystem api links are relative, so no need to replace them\n\t\t// if(this.storage.getStorageType() == \"filesystem\") {\n\t\t// \treturn false;\n\t\t// }\n\n\t\treturn true;\n\n\t} else if(this.settings.contained) {\n\n\t\treturn true;\n\n\t} else {\n\n\t\treturn false;\n\n\t}\n};\n\n\n//-- http://www.idpf.org/epub/fxl/\nEPUBJS.Book.prototype.parseLayoutProperties = function(metadata){\n\tvar layout = (this.settings.layoutOveride && this.settings.layoutOveride.layout) || metadata.layout || \"reflowable\";\n\tvar spread = (this.settings.layoutOveride && this.settings.layoutOveride.spread) || metadata.spread || \"auto\";\n\tvar orientation = (this.settings.layoutOveride && this.settings.layoutOveride.orientation) || metadata.orientation || \"auto\";\n\treturn {\n\t\tlayout : layout,\n\t\tspread : spread,\n\t\torientation : orientation\n\t};\n};\n\n//-- Enable binding events to book\nRSVP.EventTarget.mixin(EPUBJS.Book.prototype);\n\n//-- Handle RSVP Errors\nRSVP.on('error', function(event) {\n\tconsole.error(event);\n});\n\n// RSVP.configure('instrument', true); //-- true | will logging out all RSVP rejections\n// RSVP.on('created', listener);\n// RSVP.on('chained', listener);\n// RSVP.on('fulfilled', listener);\n// RSVP.on('rejected', function(event){\n// \tconsole.error(event.detail.message, event.detail.stack);\n// });\n\nEPUBJS.Chapter = function(spineObject, store, credentials){\n\tthis.href = spineObject.href;\n\tthis.absolute = spineObject.url;\n\tthis.id = spineObject.id;\n\tthis.spinePos = spineObject.index;\n\tthis.cfiBase = spineObject.cfiBase;\n\tthis.properties = spineObject.properties;\n\tthis.manifestProperties = spineObject.manifestProperties;\n\tthis.linear = spineObject.linear;\n\tthis.pages = 1;\n\tthis.store = store;\n\tthis.credentials = credentials;\n\tthis.epubcfi = new EPUBJS.EpubCFI();\n\tthis.deferred = new RSVP.defer();\n\tthis.loaded = this.deferred.promise;\n\n\tEPUBJS.Hooks.mixin(this);\n\t//-- Get pre-registered hooks for events\n\tthis.getHooks(\"beforeChapterRender\");\n\n\t// Cached for replacement urls from storage\n\tthis.caches = {};\n};\n\n\nEPUBJS.Chapter.prototype.load = function(_store, _credentials){\n\tvar store = _store || this.store;\n\tvar credentials = _credentials || this.credentials;\n\tvar promise;\n\t// if(this.store && (!this.book.online || this.book.contained))\n\tif(store){\n\t\tpromise = store.getXml(this.absolute);\n\t}else{\n\t\tpromise = EPUBJS.core.request(this.absolute, false, credentials);\n\t}\n\n\tpromise.then(function(xml){\n        try {\n            this.setDocument(xml);\n            this.deferred.resolve(this);\n        } catch (error) {\n            this.deferred.reject({\n                message : this.absolute + \" -> \" + error.message,\n                stack : new Error().stack\n            });\n        }\n\t}.bind(this));\n\n\treturn promise;\n};\n\nEPUBJS.Chapter.prototype.render = function(_store){\n\n\treturn this.load().then(function(doc){\n\n\t\tvar head = doc.querySelector('head');\n\t\tvar base = doc.createElement(\"base\");\n\n\t\tbase.setAttribute(\"href\", this.absolute);\n\t\thead.insertBefore(base, head.firstChild);\n\n\t\tthis.contents = doc;\n\n\t\treturn new RSVP.Promise(function (resolve, reject) {\n\t\t\tthis.triggerHooks(\"beforeChapterRender\", function () {\n\t\t\t\tresolve(doc);\n\t\t\t}.bind(this), this);\n\t\t}.bind(this));\n\n\t}.bind(this))\n\t.then(function(doc) {\n\t\tvar serializer = new XMLSerializer();\n\t\tvar contents = serializer.serializeToString(doc);\n\t\treturn contents;\n\t}.bind(this));\n};\n\nEPUBJS.Chapter.prototype.url = function(_store){\n\tvar deferred = new RSVP.defer();\n\tvar store = _store || this.store;\n\tvar loaded;\n\tvar chapter = this;\n\tvar url;\n\n\tif(store){\n\t\tif(!this.tempUrl) {\n\t\t\tstore.getUrl(this.absolute).then(function(url){\n\t\t\t\tchapter.tempUrl = url;\n\t\t\t\tdeferred.resolve(url);\n\t\t\t});\n\t\t} else {\n\t\t\turl = this.tempUrl;\n\t\t\tdeferred.resolve(url);\n\t\t}\n\t}else{\n\t\turl = this.absolute;\n\t\tdeferred.resolve(url);\n\t}\n\n\treturn deferred.promise;\n};\n\nEPUBJS.Chapter.prototype.setPages = function(num){\n\tthis.pages = num;\n};\n\nEPUBJS.Chapter.prototype.getPages = function(num){\n\treturn this.pages;\n};\n\nEPUBJS.Chapter.prototype.getID = function(){\n\treturn this.ID;\n};\n\nEPUBJS.Chapter.prototype.unload = function(store){\n\tthis.document = null;\n\tif(this.tempUrl && store) {\n\t\tstore.revokeUrl(this.tempUrl);\n\t\tthis.tempUrl = false;\n\t}\n};\n\nEPUBJS.Chapter.prototype.setDocument = function(_document){\n\t// var uri = _document.namespaceURI;\n\t// var doctype = _document.doctype;\n\t//\n\t// // Creates an empty document\n\t// this.document = _document.implementation.createDocument(\n\t// \t\turi,\n\t// \t\tnull,\n\t// \t\tnull\n\t// );\n\t// this.contents = this.document.importNode(\n\t// \t\t_document.documentElement, //node to import\n\t// \t\ttrue                         //clone its descendants\n\t// );\n\t//\n\t// this.document.appendChild(this.contents);\n\tthis.document = _document;\n\tthis.contents = _document.documentElement;\n\n\t// Fix to apply wgxpath to new document in IE\n\tif(!this.document.evaluate && document.evaluate) {\n\t\tthis.document.evaluate = document.evaluate;\n\t}\n\n\t// this.deferred.resolve(this.contents);\n};\n\nEPUBJS.Chapter.prototype.cfiFromRange = function(_range) {\n\tvar range;\n\tvar startXpath, endXpath;\n\tvar startContainer, endContainer;\n\tvar cleanTextContent, cleanEndTextContent;\n\n\t// Check for Contents\n\tif(!this.document) return;\n\n\tif(typeof document.evaluate != 'undefined') {\n\n\t\tstartXpath = EPUBJS.core.getElementXPath(_range.startContainer);\n\t\t// console.log(startContainer)\n\t\tendXpath = EPUBJS.core.getElementXPath(_range.endContainer);\n\n\t\tstartContainer = this.document.evaluate(startXpath, this.document, EPUBJS.core.nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\n\t\tif(!_range.collapsed) {\n\t\t\tendContainer = this.document.evaluate(endXpath, this.document, EPUBJS.core.nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\t\t}\n\n\t\trange = this.document.createRange();\n\t\t// Find Exact Range in original document\n\t\tif(startContainer) {\n\t\t\ttry {\n\t\t\t\trange.setStart(startContainer, _range.startOffset);\n\t\t\t\tif(!_range.collapsed && endContainer) {\n\t\t\t\t\trange.setEnd(endContainer, _range.endOffset);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"missed\");\n\t\t\t\tstartContainer = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// Fuzzy Match\n\t\tif(!startContainer) {\n\t\t\tconsole.log(\"not found, try fuzzy match\");\n\t\t\tcleanStartTextContent = EPUBJS.core.cleanStringForXpath(_range.startContainer.textContent);\n\t\t\tstartXpath = \"//text()[contains(.,\" + cleanStartTextContent + \")]\";\n\n\t\t\tstartContainer = this.document.evaluate(startXpath, this.document, EPUBJS.core.nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\n\t\t\tif(startContainer){\n\t\t\t\t// console.log(\"Found with Fuzzy\");\n\t\t\t\trange.setStart(startContainer, _range.startOffset);\n\n\t\t\t\tif(!_range.collapsed) {\n\t\t\t\t\tcleanEndTextContent = EPUBJS.core.cleanStringForXpath(_range.endContainer.textContent);\n\t\t\t\t\tendXpath = \"//text()[contains(.,\" + cleanEndTextContent + \")]\";\n\t\t\t\t\tendContainer = this.document.evaluate(endXpath, this.document, EPUBJS.core.nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\t\t\t\t\tif(endContainer) {\n\t\t\t\t\t\trange.setEnd(endContainer, _range.endOffset);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t} else {\n\t\trange = _range; // Just evaluate the current documents range\n\t}\n\n\t// Generate the Cfi\n\treturn this.epubcfi.generateCfiFromRange(range, this.cfiBase);\n};\n\nEPUBJS.Chapter.prototype.find = function(_query){\n\tvar chapter = this;\n\tvar matches = [];\n\tvar query = _query.toLowerCase();\n\t//var xpath = this.document.evaluate(\".//text()[contains(translate(., '\"+query.toUpperCase()+\"', '\"+query+\"'),'\"+query+\"')]\", this.document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\n\tvar find = function(node){\n\t\t// Search String\n\t\tvar text = node.textContent.toLowerCase();\n\t\tvar range = chapter.document.createRange();\n\t\tvar cfi;\n\t\tvar pos;\n\t\tvar last = -1;\n\t\tvar excerpt;\n\t\tvar limit = 150;\n\n\t\twhile (pos != -1) {\n\t\t\tpos = text.indexOf(query, last + 1);\n\n\t\t\tif(pos != -1) {\n\t\t\t\t// If Found, Create Range\n\t\t\t\trange = chapter.document.createRange();\n\t\t\t\trange.setStart(node, pos);\n\t\t\t\trange.setEnd(node, pos + query.length);\n\n\t\t\t\t//Generate CFI\n\t\t\t\tcfi = chapter.cfiFromRange(range);\n\n\t\t\t\t// Generate Excerpt\n\t\t\t\tif(node.textContent.length < limit) {\n\t\t\t\t\texcerpt = node.textContent;\n\t\t\t\t} else {\n\t\t\t\t\texcerpt = node.textContent.substring(pos-limit/2,pos+limit/2);\n\t\t\t\t\texcerpt = \"...\" + excerpt + \"...\";\n\t\t\t\t}\n\n\t\t\t\t//Add CFI to list\n\t\t\t\tmatches.push({\n\t\t\t\t\tcfi: cfi,\n\t\t\t\t\texcerpt: excerpt\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlast = pos;\n\t\t}\n\n\t};\n\n\t// Grab text nodes\n\n\t/*\n\tfor ( var i=0 ; i < xpath.snapshotLength; i++ ) {\n\t\tfind(xpath.snapshotItem(i));\n\t}\n\t*/\n\n\tthis.textSprint(this.document, function(node){\n\t\tfind(node);\n\t});\n\n\n\t// Return List of CFIs\n\treturn matches;\n};\n\n\nEPUBJS.Chapter.prototype.textSprint = function(root, func) {\n\tvar treeWalker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, {\n\t\t\tacceptNode: function (node) {\n\t\t\t\t\tif (node.data && ! /^\\s*$/.test(node.data) ) {\n\t\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t\t}\n\t\t\t}\n\t}, false);\n\tvar node;\n\twhile ((node = treeWalker.nextNode())) {\n\t\tfunc(node);\n\t}\n\n};\n\nEPUBJS.Chapter.prototype.replace = function(query, func, finished, progress){\n\tvar items = this.contents.querySelectorAll(query),\n\t\tresources = Array.prototype.slice.call(items),\n\t\tcount = resources.length;\n\n\n\tif(count === 0) {\n\t\tfinished(false);\n\t\treturn;\n\t}\n\tresources.forEach(function(item){\n\t\tvar called = false;\n\t\tvar after = function(result, full){\n\t\t\tif(called === false) {\n\t\t\t\tcount--;\n\t\t\t\tif(progress) progress(result, full, count);\n\t\t\t\tif(count <= 0 && finished) finished(true);\n\t\t\t\tcalled = true;\n\t\t\t}\n\t\t};\n\n\t\tfunc(item, after);\n\n\t}.bind(this));\n\n};\n\nEPUBJS.Chapter.prototype.replaceWithStored = function(query, attr, func, callback) {\n\tvar _oldUrls,\n\t\t\t_newUrls = {},\n\t\t\t_store = this.store,\n\t\t\t_cache = this.caches[query],\n\t\t\t_uri = EPUBJS.core.uri(this.absolute),\n\t\t\t_chapterBase = _uri.base,\n\t\t\t_attr = attr,\n\t\t\t_wait = 5,\n\t\t\tprogress = function(url, full, count) {\n\t\t\t\t_newUrls[full] = url;\n\t\t\t},\n\t\t\tfinished = function(notempty) {\n\t\t\t\tif(callback) callback();\n\t\t\t\tEPUBJS.core.values(_oldUrls).forEach(function(url){\n\t\t\t\t\t_store.revokeUrl(url);\n\t\t\t\t});\n\n\t\t\t\t_cache = _newUrls;\n\t\t\t};\n\n\tif(!_store) return;\n\n\tif(!_cache) _cache = {};\n\t_oldUrls = EPUBJS.core.clone(_cache);\n\n\tthis.replace(query, function(link, done){\n\t\tvar src = link.getAttribute(_attr),\n\t\t\t\tfull = EPUBJS.core.resolveUrl(_chapterBase, src);\n\n\t\tvar replaceUrl = function(url) {\n\t\t\t\tvar timeout;\n\t\t\t\tlink.onload = function(){\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tdone(url, full);\n\t\t\t\t};\n\n\t\t\t\t/*\n\t\t\t\tlink.onerror = function(e){\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tdone(url, full);\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t};\n\t\t\t\t*/\n\n\t\t\t\tif(query == \"svg image\") {\n\t\t\t\t\t//-- SVG needs this to trigger a load event\n\t\t\t\t\tlink.setAttribute(\"externalResourcesRequired\", \"true\");\n\t\t\t\t}\n\n\t\t\t\tif(query == \"link[href]\" && link.getAttribute(\"rel\") !== \"stylesheet\") {\n\t\t\t\t\t//-- Only Stylesheet links seem to have a load events, just continue others\n\t\t\t\t\tdone(url, full);\n\t\t\t\t} else {\n\t\t\t\t\ttimeout = setTimeout(function(){\n\t\t\t\t\t\tdone(url, full);\n\t\t\t\t\t}, _wait);\n\t\t\t\t}\n\n\t\t\t\tif (url) {\n\t\t\t\t\tlink.setAttribute(_attr, url);\n\t\t\t\t}\n\n\t\t\t};\n\n\t\tif(full in _oldUrls){\n\t\t\treplaceUrl(_oldUrls[full]);\n\t\t\t_newUrls[full] = _oldUrls[full];\n\t\t\tdelete _oldUrls[full];\n\t\t}else{\n\t\t\tfunc(_store, full, replaceUrl, link);\n\t\t}\n\n\t}, finished, progress);\n};\n\nvar EPUBJS = EPUBJS || {};\nEPUBJS.core = {};\n\n//-- Get a element for an id\nEPUBJS.core.getEl = function(elem) {\n\treturn document.getElementById(elem);\n};\n\n//-- Get all elements for a class\nEPUBJS.core.getEls = function(classes) {\n\treturn document.getElementsByClassName(classes);\n};\n\nEPUBJS.core.request = function(url, type, withCredentials) {\n\tvar supportsURL = window.URL;\n\tvar BLOB_RESPONSE = supportsURL ? \"blob\" : \"arraybuffer\";\n\tvar deferred = new RSVP.defer();\n\tvar xhr = new XMLHttpRequest();\n\tvar uri;\n\n\t//-- Check from PDF.js:\n\t//   https://github.com/mozilla/pdf.js/blob/master/web/compatibility.js\n\tvar xhrPrototype = XMLHttpRequest.prototype;\n\n\tvar handler = function() {\n\t\tvar r;\n\n\t\tif (this.readyState != this.DONE) return;\n\n\t\tif ((this.status === 200 || this.status === 0) && this.response) { // Android & Firefox reporting 0 for local & blob urls\n\t\t\tif (type == 'xml'){\n                // If this.responseXML wasn't set, try to parse using a DOMParser from text\n                if(!this.responseXML) {\n                    r = new DOMParser().parseFromString(this.response, \"application/xml\");\n                } else {\n                    r = this.responseXML;\n                }\n\t\t\t} else if (type == 'xhtml') {\n                if (!this.responseXML){\n                    r = new DOMParser().parseFromString(this.response, \"application/xhtml+xml\");\n                } else {\n                    r = this.responseXML;\n                }\n\t\t\t} else if (type == 'html') {\n\t\t\t\tif (!this.responseXML){\n                    r = new DOMParser().parseFromString(this.response, \"text/html\");\n                } else {\n                    r = this.responseXML;\n                }\n\t\t\t} else if (type == 'json') {\n\t\t\t\tr = JSON.parse(this.response);\n\t\t\t} else if (type == 'blob') {\n\t\t\t\tif (supportsURL) {\n\t\t\t\t\tr = this.response;\n\t\t\t\t} else {\n\t\t\t\t\t//-- Safari doesn't support responseType blob, so create a blob from arraybuffer\n\t\t\t\t\tr = new Blob([this.response]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tr = this.response;\n\t\t\t}\n\n\t\t\tdeferred.resolve(r);\n\t\t} else {\n\t\t\tdeferred.reject({\n\t\t\t\tmessage : this.response,\n\t\t\t\tstack : new Error().stack\n\t\t\t});\n\t\t}\n\t};\n\n\tif (!('overrideMimeType' in xhrPrototype)) {\n\t\t// IE10 might have response, but not overrideMimeType\n\t\tObject.defineProperty(xhrPrototype, 'overrideMimeType', {\n\t\t\tvalue: function xmlHttpRequestOverrideMimeType(mimeType) {}\n\t\t});\n\t}\n\n\txhr.onreadystatechange = handler;\n\txhr.open(\"GET\", url, true);\n\n\tif(withCredentials) {\n\t\txhr.withCredentials = true;\n\t}\n\n\t// If type isn't set, determine it from the file extension\n\tif(!type) {\n\t\turi = EPUBJS.core.uri(url);\n\t\ttype = uri.extension;\n\t\ttype = {\n\t\t\t'htm': 'html'\n\t\t}[type] || type;\n\t}\n\n\tif(type == 'blob'){\n\t\txhr.responseType = BLOB_RESPONSE;\n\t}\n\n\tif(type == \"json\") {\n\t\txhr.setRequestHeader(\"Accept\", \"application/json\");\n\t}\n\n\tif(type == 'xml') {\n\t\txhr.responseType = \"document\";\n\t\txhr.overrideMimeType('text/xml'); // for OPF parsing\n\t}\n\n\tif(type == 'xhtml') {\n\t\txhr.responseType = \"document\";\n\t}\n\n\tif(type == 'html') {\n\t\txhr.responseType = \"document\";\n \t}\n\n\tif(type == \"binary\") {\n\t\txhr.responseType = \"arraybuffer\";\n\t}\n\n\txhr.send();\n\n\treturn deferred.promise;\n};\n\nEPUBJS.core.toArray = function(obj) {\n\tvar arr = [];\n\n\tfor (var member in obj) {\n\t\tvar newitm;\n\t\tif ( obj.hasOwnProperty(member) ) {\n\t\t\tnewitm = obj[member];\n\t\t\tnewitm.ident = member;\n\t\t\tarr.push(newitm);\n\t\t}\n\t}\n\n\treturn arr;\n};\n\n//-- Parse the different parts of a url, returning a object\nEPUBJS.core.uri = function(url){\n\tvar uri = {\n\t\t\t\tprotocol : '',\n\t\t\t\thost : '',\n\t\t\t\tpath : '',\n\t\t\t\torigin : '',\n\t\t\t\tdirectory : '',\n\t\t\t\tbase : '',\n\t\t\t\tfilename : '',\n\t\t\t\textension : '',\n\t\t\t\tfragment : '',\n\t\t\t\thref : url\n\t\t\t},\n\t\t\tblob = url.indexOf('blob:'),\n\t\t\tdoubleSlash = url.indexOf('://'),\n\t\t\tsearch = url.indexOf('?'),\n\t\t\tfragment = url.indexOf(\"#\"),\n\t\t\twithoutProtocol,\n\t\t\tdot,\n\t\t\tfirstSlash;\n\n\tif(blob === 0) {\n\t\turi.protocol = \"blob\";\n\t\turi.base = url.indexOf(0, fragment);\n\t\treturn uri;\n\t}\n\n\tif(fragment != -1) {\n\t\turi.fragment = url.slice(fragment + 1);\n\t\turl = url.slice(0, fragment);\n\t}\n\n\tif(search != -1) {\n\t\turi.search = url.slice(search + 1);\n\t\turl = url.slice(0, search);\n\t\thref = url;\n\t}\n\n\tif(doubleSlash != -1) {\n\t\turi.protocol = url.slice(0, doubleSlash);\n\t\twithoutProtocol = url.slice(doubleSlash+3);\n\t\tfirstSlash = withoutProtocol.indexOf('/');\n\n\t\tif(firstSlash === -1) {\n\t\t\turi.host = uri.path;\n\t\t\turi.path = \"\";\n\t\t} else {\n\t\t\turi.host = withoutProtocol.slice(0, firstSlash);\n\t\t\turi.path = withoutProtocol.slice(firstSlash);\n\t\t}\n\n\n\t\turi.origin = uri.protocol + \"://\" + uri.host;\n\n\t\turi.directory = EPUBJS.core.folder(uri.path);\n\n\t\turi.base = uri.origin + uri.directory;\n\t\t// return origin;\n\t} else {\n\t\turi.path = url;\n\t\turi.directory = EPUBJS.core.folder(url);\n\t\turi.base = uri.directory;\n\t}\n\n\t//-- Filename\n\turi.filename = url.replace(uri.base, '');\n\tdot = uri.filename.lastIndexOf('.');\n\tif(dot != -1) {\n\t\turi.extension = uri.filename.slice(dot+1);\n\t}\n\treturn uri;\n};\n\n//-- Parse out the folder, will return everything before the last slash\n\nEPUBJS.core.folder = function(url){\n\n\tvar lastSlash = url.lastIndexOf('/');\n\n\tif(lastSlash == -1) var folder = '';\n\n\tfolder = url.slice(0, lastSlash + 1);\n\n\treturn folder;\n\n};\n\n//-- https://github.com/ebidel/filer.js/blob/master/src/filer.js#L128\nEPUBJS.core.dataURLToBlob = function(dataURL) {\n\tvar BASE64_MARKER = ';base64,',\n\t\tparts, contentType, raw, rawLength, uInt8Array;\n\n\tif (dataURL.indexOf(BASE64_MARKER) == -1) {\n\t\tparts = dataURL.split(',');\n\t\tcontentType = parts[0].split(':')[1];\n\t\traw = parts[1];\n\n\t\treturn new Blob([raw], {type: contentType});\n\t}\n\n\tparts = dataURL.split(BASE64_MARKER);\n\tcontentType = parts[0].split(':')[1];\n\traw = window.atob(parts[1]);\n\trawLength = raw.length;\n\n\tuInt8Array = new Uint8Array(rawLength);\n\n\tfor (var i = 0; i < rawLength; ++i) {\n\t\tuInt8Array[i] = raw.charCodeAt(i);\n\t}\n\n\treturn new Blob([uInt8Array], {type: contentType});\n};\n\n//-- Load scripts async: http://stackoverflow.com/questions/7718935/load-scripts-asynchronously\nEPUBJS.core.addScript = function(src, callback, target) {\n\tvar s, r;\n\tr = false;\n\ts = document.createElement('script');\n\ts.type = 'text/javascript';\n\ts.async = false;\n\ts.src = src;\n\ts.onload = s.onreadystatechange = function() {\n\t\tif ( !r && (!this.readyState || this.readyState == 'complete') ) {\n\t\t\tr = true;\n\t\t\tif(callback) callback();\n\t\t}\n\t};\n\ttarget = target || document.body;\n\ttarget.appendChild(s);\n};\n\nEPUBJS.core.addScripts = function(srcArr, callback, target) {\n\tvar total = srcArr.length,\n\t\tcurr = 0,\n\t\tcb = function(){\n\t\t\tcurr++;\n\t\t\tif(total == curr){\n\t\t\t\tif(callback) callback();\n\t\t\t}else{\n\t\t\t\tEPUBJS.core.addScript(srcArr[curr], cb, target);\n\t\t\t}\n\t\t};\n\n\tEPUBJS.core.addScript(srcArr[curr], cb, target);\n};\n\nEPUBJS.core.addCss = function(src, callback, target) {\n\tvar s, r;\n\tr = false;\n\ts = document.createElement('link');\n\ts.type = 'text/css';\n\ts.rel = \"stylesheet\";\n\ts.href = src;\n\ts.onload = s.onreadystatechange = function() {\n\t\tif ( !r && (!this.readyState || this.readyState == 'complete') ) {\n\t\t\tr = true;\n\t\t\tif(callback) callback();\n\t\t}\n\t};\n\ttarget = target || document.body;\n\ttarget.appendChild(s);\n};\n\nEPUBJS.core.prefixed = function(unprefixed) {\n\tvar vendors = [\"Webkit\", \"Moz\", \"O\", \"ms\" ],\n\t\tprefixes = ['-Webkit-', '-moz-', '-o-', '-ms-'],\n\t\tupper = unprefixed[0].toUpperCase() + unprefixed.slice(1),\n\t\tlength = vendors.length;\n\n\tif (typeof(document.documentElement.style[unprefixed]) != 'undefined') {\n\t\treturn unprefixed;\n\t}\n\n\tfor ( var i=0; i < length; i++ ) {\n\t\tif (typeof(document.documentElement.style[vendors[i] + upper]) != 'undefined') {\n\t\t\treturn vendors[i] + upper;\n\t\t}\n\t}\n\n\treturn unprefixed;\n};\n\nEPUBJS.core.resolveUrl = function(base, path) {\n\tvar url,\n\t\tsegments = [],\n\t\turi = EPUBJS.core.uri(path),\n\t\tfolders = base.split(\"/\"),\n\t\tpaths;\n\n\tif(uri.host) {\n\t\treturn path;\n\t}\n\n\tfolders.pop();\n\n\tpaths = path.split(\"/\");\n\tpaths.forEach(function(p){\n\t\tif(p === \"..\"){\n\t\t\tfolders.pop();\n\t\t}else{\n\t\t\tsegments.push(p);\n\t\t}\n\t});\n\n\turl = folders.concat(segments);\n\n\treturn url.join(\"/\");\n};\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\nEPUBJS.core.uuid = function() {\n\tvar d = new Date().getTime();\n\tvar uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\t\tvar r = (d + Math.random()*16)%16 | 0;\n\t\t\td = Math.floor(d/16);\n\t\t\treturn (c=='x' ? r : (r&0x7|0x8)).toString(16);\n\t});\n\treturn uuid;\n};\n\n// Fast quicksort insert for sorted array -- based on:\n// http://stackoverflow.com/questions/1344500/efficient-way-to-insert-a-number-into-a-sorted-array-of-numbers\nEPUBJS.core.insert = function(item, array, compareFunction) {\n\tvar location = EPUBJS.core.locationOf(item, array, compareFunction);\n\tarray.splice(location, 0, item);\n\n\treturn location;\n};\n\nEPUBJS.core.locationOf = function(item, array, compareFunction, _start, _end) {\n\tvar start = _start || 0;\n\tvar end = _end || array.length;\n\tvar pivot = parseInt(start + (end - start) / 2);\n\tvar compared;\n\tif(!compareFunction){\n\t\tcompareFunction = function(a, b) {\n\t\t\tif(a > b) return 1;\n\t\t\tif(a < b) return -1;\n\t\t\tif(a = b) return 0;\n\t\t};\n\t}\n\tif(end-start <= 0) {\n\t\treturn pivot;\n\t}\n\n\tcompared = compareFunction(array[pivot], item);\n\tif(end-start === 1) {\n\t\treturn compared > 0 ? pivot : pivot + 1;\n\t}\n\n\tif(compared === 0) {\n\t\treturn pivot;\n\t}\n\tif(compared === -1) {\n\t\treturn EPUBJS.core.locationOf(item, array, compareFunction, pivot, end);\n\t} else{\n\t\treturn EPUBJS.core.locationOf(item, array, compareFunction, start, pivot);\n\t}\n};\n\nEPUBJS.core.indexOfSorted = function(item, array, compareFunction, _start, _end) {\n\tvar start = _start || 0;\n\tvar end = _end || array.length;\n\tvar pivot = parseInt(start + (end - start) / 2);\n\tvar compared;\n\tif(!compareFunction){\n\t\tcompareFunction = function(a, b) {\n\t\t\tif(a > b) return 1;\n\t\t\tif(a < b) return -1;\n\t\t\tif(a = b) return 0;\n\t\t};\n\t}\n\tif(end-start <= 0) {\n\t\treturn -1; // Not found\n\t}\n\n\tcompared = compareFunction(array[pivot], item);\n\tif(end-start === 1) {\n\t\treturn compared === 0 ? pivot : -1;\n\t}\n\tif(compared === 0) {\n\t\treturn pivot; // Found\n\t}\n\tif(compared === -1) {\n\t\treturn EPUBJS.core.indexOfSorted(item, array, compareFunction, pivot, end);\n\t} else{\n\t\treturn EPUBJS.core.indexOfSorted(item, array, compareFunction, start, pivot);\n\t}\n};\n\n\nEPUBJS.core.queue = function(_scope){\n\tvar _q = [];\n\tvar scope = _scope;\n\t// Add an item to the queue\n\tvar enqueue = function(funcName, args, context) {\n\t\t_q.push({\n\t\t\t\"funcName\" : funcName,\n\t\t\t\"args\"     : args,\n\t\t\t\"context\"  : context\n\t\t});\n\t\treturn _q;\n\t};\n\t// Run one item\n\tvar dequeue = function(){\n\t\tvar inwait;\n\t\tif(_q.length) {\n\t\t\tinwait = _q.shift();\n\t\t\t// Defer to any current tasks\n\t\t\t// setTimeout(function(){\n\t\t\tscope[inwait.funcName].apply(inwait.context || scope, inwait.args);\n\t\t\t// }, 0);\n\t\t}\n\t};\n\n\t// Run All\n\tvar flush = function(){\n\t\twhile(_q.length) {\n\t\t\tdequeue();\n\t\t}\n\t};\n\t// Clear all items in wait\n\tvar clear = function(){\n\t\t_q = [];\n\t};\n\n\tvar length = function(){\n\t\treturn _q.length;\n\t};\n\n\treturn {\n\t\t\"enqueue\" : enqueue,\n\t\t\"dequeue\" : dequeue,\n\t\t\"flush\" : flush,\n\t\t\"clear\" : clear,\n\t\t\"length\" : length\n\t};\n};\n\n// From: https://code.google.com/p/fbug/source/browse/branches/firebug1.10/content/firebug/lib/xpath.js\n/**\n * Gets an XPath for an element which describes its hierarchical location.\n */\nEPUBJS.core.getElementXPath = function(element) {\n\tif (element && element.id) {\n\t\treturn '//*[@id=\"' + element.id + '\"]';\n\t} else {\n\t\treturn EPUBJS.core.getElementTreeXPath(element);\n\t}\n};\n\nEPUBJS.core.getElementTreeXPath = function(element) {\n\tvar paths = [];\n\tvar \tisXhtml = (element.ownerDocument.documentElement.getAttribute('xmlns') === \"http://www.w3.org/1999/xhtml\");\n\tvar index, nodeName, tagName, pathIndex;\n\n\tif(element.nodeType === Node.TEXT_NODE){\n\t\t// index = Array.prototype.indexOf.call(element.parentNode.childNodes, element) + 1;\n\t\tindex = EPUBJS.core.indexOfTextNode(element) + 1;\n\n\t\tpaths.push(\"text()[\"+index+\"]\");\n\t\telement = element.parentNode;\n\t}\n\n\t// Use nodeName (instead of localName) so namespace prefix is included (if any).\n\tfor (; element && element.nodeType == 1; element = element.parentNode)\n\t{\n\t\tindex = 0;\n\t\tfor (var sibling = element.previousSibling; sibling; sibling = sibling.previousSibling)\n\t\t{\n\t\t\t// Ignore document type declaration.\n\t\t\tif (sibling.nodeType == Node.DOCUMENT_TYPE_NODE) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (sibling.nodeName == element.nodeName) {\n\t\t\t\t++index;\n\t\t\t}\n\t\t}\n\t\tnodeName = element.nodeName.toLowerCase();\n\t\ttagName = (isXhtml ? \"xhtml:\" + nodeName : nodeName);\n\t\tpathIndex = (index ? \"[\" + (index+1) + \"]\" : \"\");\n\t\tpaths.splice(0, 0, tagName + pathIndex);\n\t}\n\n\treturn paths.length ? \"./\" + paths.join(\"/\") : null;\n};\n\nEPUBJS.core.nsResolver = function(prefix) {\n\tvar ns = {\n\t\t'xhtml' : 'http://www.w3.org/1999/xhtml',\n\t\t'epub': 'http://www.idpf.org/2007/ops'\n\t};\n\treturn ns[prefix] || null;\n};\n\n//https://stackoverflow.com/questions/13482352/xquery-looking-for-text-with-single-quote/13483496#13483496\nEPUBJS.core.cleanStringForXpath = function(str)  {\n\t\tvar parts = str.match(/[^'\"]+|['\"]/g);\n\t\tparts = parts.map(function(part){\n\t\t\t\tif (part === \"'\")  {\n\t\t\t\t\t\treturn '\\\"\\'\\\"'; // output \"'\"\n\t\t\t\t}\n\n\t\t\t\tif (part === '\"') {\n\t\t\t\t\t\treturn \"\\'\\\"\\'\"; // output '\"'\n\t\t\t\t}\n\t\t\t\treturn \"\\'\" + part + \"\\'\";\n\t\t});\n\t\treturn \"concat(\\'\\',\" + parts.join(\",\") + \")\";\n};\n\nEPUBJS.core.indexOfTextNode = function(textNode){\n\tvar parent = textNode.parentNode;\n\tvar children = parent.childNodes;\n\tvar sib;\n\tvar index = -1;\n\tfor (var i = 0; i < children.length; i++) {\n\t\tsib = children[i];\n\t\tif(sib.nodeType === Node.TEXT_NODE){\n\t\t\tindex++;\n\t\t}\n\t\tif(sib == textNode) break;\n\t}\n\n\treturn index;\n};\n\n// Underscore\nEPUBJS.core.defaults = function(obj) {\n  for (var i = 1, length = arguments.length; i < length; i++) {\n    var source = arguments[i];\n    for (var prop in source) {\n      if (obj[prop] === void 0) obj[prop] = source[prop];\n    }\n  }\n  return obj;\n};\n\nEPUBJS.core.extend = function(target) {\n    var sources = [].slice.call(arguments, 1);\n    sources.forEach(function (source) {\n      if(!source) return;\n      Object.getOwnPropertyNames(source).forEach(function(propName) {\n        Object.defineProperty(target, propName, Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n    return target;\n};\n\nEPUBJS.core.clone = function(obj) {\n  return EPUBJS.core.isArray(obj) ? obj.slice() : EPUBJS.core.extend({}, obj);\n};\n\nEPUBJS.core.isElement = function(obj) {\n    return !!(obj && obj.nodeType == 1);\n};\n\nEPUBJS.core.isNumber = function(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nEPUBJS.core.isString = function(str) {\n  return (typeof str === 'string' || str instanceof String);\n};\n\nEPUBJS.core.isArray = Array.isArray || function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n// Lodash\nEPUBJS.core.values = function(object) {\n\tvar index = -1;\n\tvar props, length, result;\n\n\tif(!object) return [];\n\n  props = Object.keys(object);\n  length = props.length;\n  result = Array(length);\n\n  while (++index < length) {\n    result[index] = object[props[index]];\n  }\n  return result;\n};\n\nEPUBJS.EpubCFI = function(cfiStr){\n  if(cfiStr) return this.parse(cfiStr);\n};\n\nEPUBJS.EpubCFI.prototype.generateChapterComponent = function(_spineNodeIndex, _pos, id) {\n  var pos = parseInt(_pos),\n    spineNodeIndex = _spineNodeIndex + 1,\n    cfi = '/'+spineNodeIndex+'/';\n\n  cfi += (pos + 1) * 2;\n\n  if(id) cfi += \"[\" + id + \"]\";\n\n  //cfi += \"!\";\n\n  return cfi;\n};\n\nEPUBJS.EpubCFI.prototype.generatePathComponent = function(steps) {\n  var parts = [];\n\n  steps.forEach(function(part){\n    var segment = '';\n    segment += (part.index + 1) * 2;\n\n    if(part.id) {\n      segment += \"[\" + part.id + \"]\";\n    }\n\n    parts.push(segment);\n  });\n\n  return parts.join('/');\n};\n\nEPUBJS.EpubCFI.prototype.generateCfiFromElement = function(element, chapter) {\n  var steps = this.pathTo(element);\n  var path = this.generatePathComponent(steps);\n  if(!path.length) {\n    // Start of Chapter\n    return \"epubcfi(\" + chapter + \"!/4/)\";\n  } else {\n    // First Text Node\n    return \"epubcfi(\" + chapter + \"!\" + path + \"/1:0)\";\n  }\n};\n\nEPUBJS.EpubCFI.prototype.pathTo = function(node) {\n  var stack = [],\n      children;\n\n  while(node && node.parentNode !== null && node.parentNode.nodeType != 9) {\n    children = node.parentNode.children;\n\n    stack.unshift({\n      'id' : node.id,\n      // 'classList' : node.classList,\n      'tagName' : node.tagName,\n      'index' : children ? Array.prototype.indexOf.call(children, node) : 0\n    });\n\n    node = node.parentNode;\n  }\n\n  return stack;\n};\n\nEPUBJS.EpubCFI.prototype.getChapterComponent = function(cfiStr) {\n\n  var splitStr = cfiStr.split(\"!\");\n\n  return splitStr[0];\n};\n\nEPUBJS.EpubCFI.prototype.getPathComponent = function(cfiStr) {\n\n  var splitStr = cfiStr.split(\"!\");\n  var pathComponent = splitStr[1] ? splitStr[1].split(\":\") : '';\n\n  return pathComponent[0];\n};\n\nEPUBJS.EpubCFI.prototype.getCharecterOffsetComponent = // backwards-compat\nEPUBJS.EpubCFI.prototype.getCharacterOffsetComponent = function(cfiStr) {\n  var splitStr = cfiStr.split(\":\");\n  return splitStr[1] || '';\n};\n\n\nEPUBJS.EpubCFI.prototype.parse = function(cfiStr) {\n  var cfi = {},\n    chapSegment,\n    chapterComponent,\n    pathComponent,\n    characterOffsetComponent,\n    assertion,\n    chapId,\n    path,\n    end,\n    endInt,\n    text,\n    parseStep = function(part){\n      var type, index, has_brackets, id;\n\n      type = \"element\";\n      index = parseInt(part) / 2 - 1;\n      has_brackets = part.match(/\\[(.*)\\]/);\n      if(has_brackets && has_brackets[1]){\n        id = has_brackets[1];\n      }\n\n      return {\n        \"type\" : type,\n        'index' : index,\n        'id' : id || false\n      };\n    };\n\n  if(typeof cfiStr !== \"string\") {\n    return {spinePos: -1};\n  }\n\n  cfi.str = cfiStr;\n\n  if(cfiStr.indexOf(\"epubcfi(\") === 0 && cfiStr[cfiStr.length-1] === \")\") {\n    // Remove intial epubcfi( and ending )\n    cfiStr = cfiStr.slice(8, cfiStr.length-1);\n  }\n\n  chapterComponent = this.getChapterComponent(cfiStr);\n  pathComponent = this.getPathComponent(cfiStr) || '';\n  characterOffsetComponent = this.getCharacterOffsetComponent(cfiStr);\n  // Make sure this is a valid cfi or return\n  if(!chapterComponent) {\n    return {spinePos: -1};\n  }\n\n  // Chapter segment is always the second one\n  chapSegment = chapterComponent.split(\"/\")[2] || '';\n  if(!chapSegment) return {spinePos:-1};\n\n  cfi.spinePos = (parseInt(chapSegment) / 2 - 1 ) || 0;\n\n  chapId = chapSegment.match(/\\[(.*)\\]/);\n\n  cfi.spineId = chapId ? chapId[1] : false;\n\n  if(pathComponent.indexOf(',') != -1) {\n    // Handle ranges -- not supported yet\n    console.warn(\"CFI Ranges are not supported\");\n  }\n\n  path = pathComponent.split('/');\n  end = path.pop();\n\n  cfi.steps = [];\n\n  path.forEach(function(part){\n    var step;\n\n    if(part) {\n      step = parseStep(part);\n      cfi.steps.push(step);\n    }\n  });\n\n  //-- Check if END is a text node or element\n  endInt = parseInt(end);\n  if(!isNaN(endInt)) {\n\n    if(endInt % 2 === 0) { // Even = is an element\n      cfi.steps.push(parseStep(end));\n    } else {\n      cfi.steps.push({\n        \"type\" : \"text\",\n        'index' : (endInt - 1 ) / 2\n      });\n    }\n\n  }\n\n  assertion = characterOffsetComponent.match(/\\[(.*)\\]/);\n  if(assertion && assertion[1]){\n    cfi.characterOffset = parseInt(characterOffsetComponent.split('[')[0]);\n    // We arent handling these assertions yet\n    cfi.textLocationAssertion = assertion[1];\n  } else {\n    cfi.characterOffset = parseInt(characterOffsetComponent);\n  }\n\n  return cfi;\n};\n\nEPUBJS.EpubCFI.prototype.addMarker = function(cfi, _doc, _marker) {\n  var doc = _doc || document;\n  var marker = _marker || this.createMarker(doc);\n  var parent;\n  var lastStep;\n  var text;\n  var split;\n\n  if(typeof cfi === 'string') {\n    cfi = this.parse(cfi);\n  }\n  // Get the terminal step\n  lastStep = cfi.steps[cfi.steps.length-1];\n\n  // check spinePos\n  if(cfi.spinePos === -1) {\n    // Not a valid CFI\n    return false;\n  }\n\n  // Find the CFI elements parent\n  parent = this.findParent(cfi, doc);\n\n  if(!parent) {\n    // CFI didn't return an element\n    // Maybe it isnt in the current chapter?\n    return false;\n  }\n\n  if(lastStep && lastStep.type === \"text\") {\n    text = parent.childNodes[lastStep.index];\n    if(cfi.characterOffset){\n      split = text.splitText(cfi.characterOffset);\n      marker.classList.add(\"EPUBJS-CFI-SPLIT\");\n      parent.insertBefore(marker, split);\n    } else {\n      parent.insertBefore(marker, text);\n    }\n  } else {\n    parent.insertBefore(marker, parent.firstChild);\n  }\n\n  return marker;\n};\n\nEPUBJS.EpubCFI.prototype.createMarker = function(_doc) {\n  var doc = _doc || document;\n  var element = doc.createElement('span');\n  element.id = \"EPUBJS-CFI-MARKER:\"+ EPUBJS.core.uuid();\n  element.classList.add(\"EPUBJS-CFI-MARKER\");\n\n  return element;\n};\n\nEPUBJS.EpubCFI.prototype.removeMarker = function(marker, _doc) {\n  var doc = _doc || document;\n  // var id = marker.id;\n\n  // Cleanup textnodes if they were split\n  if(marker.classList.contains(\"EPUBJS-CFI-SPLIT\")){\n    nextSib = marker.nextSibling;\n    prevSib = marker.previousSibling;\n    if(nextSib &&\n        prevSib &&\n        nextSib.nodeType === 3 &&\n        prevSib.nodeType === 3){\n\n      prevSib.textContent += nextSib.textContent;\n      marker.parentNode.removeChild(nextSib);\n    }\n    marker.parentNode.removeChild(marker);\n  } else if(marker.classList.contains(\"EPUBJS-CFI-MARKER\")) {\n    // Remove only elements added as markers\n    marker.parentNode.removeChild(marker);\n  }\n\n};\n\nEPUBJS.EpubCFI.prototype.findParent = function(cfi, _doc) {\n  var doc = _doc || document,\n      element = doc.getElementsByTagName('html')[0],\n      children = Array.prototype.slice.call(element.children),\n      num, index, part, sections,\n      text, textBegin, textEnd;\n\n  if(typeof cfi === 'string') {\n    cfi = this.parse(cfi);\n  }\n\n  sections = cfi.steps.slice(0); // Clone steps array\n  if(!sections.length) {\n    return doc.getElementsByTagName('body')[0];\n  }\n\n  while(sections && sections.length > 0) {\n    part = sections.shift();\n    // Find textNodes Parent\n    if(part.type === \"text\") {\n      text = element.childNodes[part.index];\n      element = text.parentNode || element;\n    // Find element by id if present\n    } else if(part.id){\n      element = doc.getElementById(part.id);\n    // Find element in parent\n    }else{\n      element = children[part.index];\n    }\n    // Element can't be found\n    if(!element || typeof element === \"undefined\") {\n      console.error(\"No Element For\", part, cfi.str);\n      return false;\n    }\n    // Get current element children and continue through steps\n    children = Array.prototype.slice.call(element.children);\n  }\n\n  return element;\n};\n\nEPUBJS.EpubCFI.prototype.compare = function(cfiOne, cfiTwo) {\n  if(typeof cfiOne === 'string') {\n    cfiOne = new EPUBJS.EpubCFI(cfiOne);\n  }\n  if(typeof cfiTwo === 'string') {\n    cfiTwo = new EPUBJS.EpubCFI(cfiTwo);\n  }\n  // Compare Spine Positions\n  if(cfiOne.spinePos > cfiTwo.spinePos) {\n    return 1;\n  }\n  if(cfiOne.spinePos < cfiTwo.spinePos) {\n    return -1;\n  }\n\n\n  // Compare Each Step in the First item\n  for (var i = 0; i < cfiOne.steps.length; i++) {\n    if(!cfiTwo.steps[i]) {\n      return 1;\n    }\n    if(cfiOne.steps[i].index > cfiTwo.steps[i].index) {\n      return 1;\n    }\n    if(cfiOne.steps[i].index < cfiTwo.steps[i].index) {\n      return -1;\n    }\n    // Otherwise continue checking\n  }\n\n  // All steps in First present in Second\n  if(cfiOne.steps.length < cfiTwo.steps.length) {\n    return -1;\n  }\n\n  // Compare the character offset of the text node\n  if(cfiOne.characterOffset > cfiTwo.characterOffset) {\n    return 1;\n  }\n  if(cfiOne.characterOffset < cfiTwo.characterOffset) {\n    return -1;\n  }\n\n  // CFI's are equal\n  return 0;\n};\n\nEPUBJS.EpubCFI.prototype.generateCfiFromHref = function(href, book) {\n  var uri = EPUBJS.core.uri(href);\n  var path = uri.path;\n  var fragment = uri.fragment;\n  var spinePos = book.spineIndexByURL[path];\n  var loaded;\n  var deferred = new RSVP.defer();\n  var epubcfi = new EPUBJS.EpubCFI();\n  var spineItem;\n\n  if(typeof spinePos !== \"undefined\"){\n    spineItem = book.spine[spinePos];\n    loaded = book.loadXml(spineItem.url);\n    loaded.then(function(doc){\n      var element = doc.getElementById(fragment);\n      var cfi;\n      cfi = epubcfi.generateCfiFromElement(element, spineItem.cfiBase);\n      deferred.resolve(cfi);\n    });\n  }\n\n  return deferred.promise;\n};\n\nEPUBJS.EpubCFI.prototype.generateCfiFromTextNode = function(anchor, offset, base) {\n  var parent = anchor.parentNode;\n  var steps = this.pathTo(parent);\n  var path = this.generatePathComponent(steps);\n  var index = 1 + (2 * Array.prototype.indexOf.call(parent.childNodes, anchor));\n  return \"epubcfi(\" + base + \"!\" + path + \"/\"+index+\":\"+(offset || 0)+\")\";\n};\n\nEPUBJS.EpubCFI.prototype.generateCfiFromRangeAnchor = function(range, base) {\n  var anchor = range.anchorNode;\n  var offset = range.anchorOffset;\n  return this.generateCfiFromTextNode(anchor, offset, base);\n};\n\nEPUBJS.EpubCFI.prototype.generateCfiFromRange = function(range, base) {\n  var start, startElement, startSteps, startPath, startOffset, startIndex;\n  var end, endElement, endSteps, endPath, endOffset, endIndex;\n\n  start = range.startContainer;\n\n  if(start.nodeType === 3) { // text node\n    startElement = start.parentNode;\n    //startIndex = 1 + (2 * Array.prototype.indexOf.call(startElement.childNodes, start));\n    startIndex = 1 + (2 * EPUBJS.core.indexOfTextNode(start));\n    startSteps = this.pathTo(startElement);\n  } else if(range.collapsed) {\n    return this.generateCfiFromElement(start, base); // single element\n  } else {\n    startSteps = this.pathTo(start);\n  }\n\n  startPath = this.generatePathComponent(startSteps);\n  startOffset = range.startOffset;\n\n  if(!range.collapsed) {\n    end = range.endContainer;\n\n    if(end.nodeType === 3) { // text node\n      endElement = end.parentNode;\n      // endIndex = 1 + (2 * Array.prototype.indexOf.call(endElement.childNodes, end));\n      endIndex = 1 + (2 * EPUBJS.core.indexOfTextNode(end));\n\n      endSteps = this.pathTo(endElement);\n    } else {\n      endSteps = this.pathTo(end);\n    }\n\n    endPath = this.generatePathComponent(endSteps);\n    endOffset = range.endOffset;\n\n    // Remove steps present in startPath\n    endPath = endPath.replace(startPath, '');\n\n    if (endPath.length) {\n      endPath = endPath + \"/\";\n    }\n\n    return \"epubcfi(\" + base + \"!\" + startPath + \"/\" + startIndex + \":\" + startOffset + \",\" + endPath + endIndex + \":\" + endOffset + \")\";\n\n  } else {\n    return \"epubcfi(\" + base + \"!\" + startPath + \"/\"+ startIndex +\":\"+ startOffset +\")\";\n  }\n};\n\nEPUBJS.EpubCFI.prototype.generateXpathFromSteps = function(steps) {\n  var xpath = [\".\", \"*\"];\n\n  steps.forEach(function(step){\n    var position = step.index + 1;\n\n    if(step.id){\n      xpath.push(\"*[position()=\" + position + \" and @id='\" + step.id + \"']\");\n    } else if(step.type === \"text\") {\n      xpath.push(\"text()[\" + position + \"]\");\n    } else {\n      xpath.push(\"*[\" + position + \"]\");\n    }\n  });\n\n  return xpath.join(\"/\");\n};\n\nEPUBJS.EpubCFI.prototype.generateQueryFromSteps = function(steps) {\n  var query = [\"html\"];\n\n  steps.forEach(function(step){\n    var position = step.index + 1;\n\n    if(step.id){\n      query.push(\"#\" + step.id);\n    } else if(step.type === \"text\") {\n      // unsupported in querySelector\n      // query.push(\"text()[\" + position + \"]\");\n    } else {\n      query.push(\"*:nth-child(\" + position + \")\");\n    }\n  });\n\n  return query.join(\">\");\n};\n\n\nEPUBJS.EpubCFI.prototype.generateRangeFromCfi = function(cfi, _doc) {\n  var doc = _doc || document;\n  var range = doc.createRange();\n  var lastStep;\n  var xpath;\n  var startContainer;\n  var textLength;\n  var query;\n  var startContainerParent;\n\n  if(typeof cfi === 'string') {\n    cfi = this.parse(cfi);\n  }\n\n  // check spinePos\n  if(cfi.spinePos === -1) {\n    // Not a valid CFI\n    return false;\n  }\n\n  // Get the terminal step\n  lastStep = cfi.steps[cfi.steps.length-1];\n\n  if(typeof document.evaluate != 'undefined') {\n    xpath = this.generateXpathFromSteps(cfi.steps);\n    startContainer = doc.evaluate(xpath, doc, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n  } else {\n      // Get the query string\n      query = this.generateQueryFromSteps(cfi.steps);\n      // Find the containing element\n      startContainerParent = doc.querySelector(query);\n      // Find the text node within that element\n      if(startContainerParent && lastStep.type == \"text\") {\n        startContainer = startContainerParent.childNodes[lastStep.index];\n      }\n  }\n\n  if(!startContainer) {\n    return null;\n  }\n\n  if(startContainer && cfi.characterOffset >= 0) {\n    textLength = startContainer.length;\n\n    if(cfi.characterOffset < textLength) {\n      range.setStart(startContainer, cfi.characterOffset);\n      range.setEnd(startContainer, textLength );\n    } else {\n      console.debug(\"offset greater than length:\", cfi.characterOffset, textLength);\n      range.setStart(startContainer, textLength - 1 );\n      range.setEnd(startContainer, textLength );\n    }\n  } else if(startContainer) {\n    range.selectNode(startContainer);\n  }\n  // doc.defaultView.getSelection().addRange(range);\n  return range;\n};\n\nEPUBJS.EpubCFI.prototype.isCfiString = function(target) {\n  if(typeof target === \"string\" &&\n    target.indexOf(\"epubcfi(\") === 0) {\n      return true;\n  }\n\n  return false;\n};\n\nEPUBJS.Events = function(obj, el){\n\t\n\tthis.events = {};\n\t\n\tif(!el){\n\t\tthis.el = document.createElement('div');\n\t}else{\n\t\tthis.el = el;\n\t}\n\t\n\tobj.createEvent = this.createEvent;\n\tobj.tell = this.tell;\n\tobj.listen = this.listen;\n\tobj.deafen = this.deafen;\n\tobj.listenUntil = this.listenUntil;\n\t\n\treturn this;\n};\n\nEPUBJS.Events.prototype.createEvent = function(evt){\n\tvar e = new CustomEvent(evt);\n\tthis.events[evt] = e;\n\treturn e;\n};\n\nEPUBJS.Events.prototype.tell = function(evt, msg){\n\tvar e;\n\n\tif(!this.events[evt]){\n\t\tconsole.warn(\"No event:\", evt, \"defined yet, creating.\");\n\t\te = this.createEvent(evt);\n\t}else{\n\t\te = this.events[evt];\n\t}\n\n\tif(msg) e.msg = msg;\n\tthis.el.dispatchEvent(e);\n\n};\n\nEPUBJS.Events.prototype.listen = function(evt, func, bindto){\n\tif(!this.events[evt]){\n\t\tconsole.warn(\"No event:\", evt, \"defined yet, creating.\");\n\t\tthis.createEvent(evt);\n\t\treturn;\n\t}\n\n\tif(bindto){\n\t\tthis.el.addEventListener(evt, func.bind(bindto), false);\n\t}else{\n\t\tthis.el.addEventListener(evt, func, false);\n\t}\n\n};\n\nEPUBJS.Events.prototype.deafen = function(evt, func){\n\tthis.el.removeEventListener(evt, func, false);\n};\n\nEPUBJS.Events.prototype.listenUntil = function(OnEvt, OffEvt, func, bindto){\n\tthis.listen(OnEvt, func, bindto);\n\t\n\tfunction unlisten(){\n\t\tthis.deafen(OnEvt, func);\n\t\tthis.deafen(OffEvt, unlisten);\n\t}\n\t\n\tthis.listen(OffEvt, unlisten, this);\n};\nEPUBJS.hooks = {};\nEPUBJS.Hooks = (function(){\n\tfunction hooks(){}\n\n\t//-- Get pre-registered hooks\n\thooks.prototype.getHooks = function(){\n\t\tvar plugs;\n\t\tthis.hooks = {};\n\t\tArray.prototype.slice.call(arguments).forEach(function(arg){\n\t\t\tthis.hooks[arg] = [];\n\t\t}, this);\n\n\t\tfor (var plugType in this.hooks) {\n\t\t\tplugs = EPUBJS.core.values(EPUBJS.hooks[plugType]);\n\n\t\t\tplugs.forEach(function(hook){\n\t\t\t\tthis.registerHook(plugType, hook);\n\t\t\t}, this);\n\t\t}\n\t};\n\n\t//-- Hooks allow for injecting async functions that must all complete before continuing\n\t//   Functions must have a callback as their first argument.\n\thooks.prototype.registerHook = function(type, toAdd, toFront){\n\n\t\tif(typeof(this.hooks[type]) != \"undefined\"){\n\n\t\t\tif(typeof(toAdd) === \"function\"){\n\t\t\t\tif(toFront) {\n\t\t\t\t\tthis.hooks[type].unshift(toAdd);\n\t\t\t\t}else{\n\t\t\t\t\tthis.hooks[type].push(toAdd);\n\t\t\t\t}\n\t\t\t}else if(Array.isArray(toAdd)){\n\t\t\t\ttoAdd.forEach(function(hook){\n\t\t\t\t\tif(toFront) {\n\t\t\t\t\t\tthis.hooks[type].unshift(hook);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.hooks[type].push(hook);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}\n\t\t}else{\n\t\t\t//-- Allows for undefined hooks\n\t\t\tthis.hooks[type] = [toAdd];\n\n\t\t\tif(typeof(toAdd) === \"function\"){\n\t\t\t\tthis.hooks[type] = [toAdd];\n\t\t\t}else if(Array.isArray(toAdd)){\n\t\t\t\tthis.hooks[type] = [];\n\t\t\t\ttoAdd.forEach(function(hook){\n\t\t\t\t\tthis.hooks[type].push(hook);\n\t\t\t\t}, this);\n\t\t\t}\n\n\t\t}\n\t};\n\n\thooks.prototype.removeHook = function(type, toRemove){\n\t\tvar index;\n\n\t\tif(typeof(this.hooks[type]) != \"undefined\"){\n\n\t\t\tif(typeof(toRemove) === \"function\"){\n\t\t\t\tindex = this.hooks[type].indexOf(toRemove);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tthis.hooks[type].splice(index, 1);\n\t\t\t\t}\n\t\t\t}else if(Array.isArray(toRemove)){\n\t\t\t\ttoRemove.forEach(function(hook){\n\t\t\t\t\tindex = this.hooks[type].indexOf(hook);\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tthis.hooks[type].splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}\n\t\t}\n\t};\n\n\thooks.prototype.triggerHooks = function(type, callback, passed){\n\t\tvar hooks, count;\n\n\t\tif(typeof(this.hooks[type]) == \"undefined\") return false;\n\n\t\thooks = this.hooks[type];\n\n\t\tcount = hooks.length;\n\t\tif(count === 0 && callback) {\n\t\t\tcallback();\n\t\t}\n\n\t\tfunction countdown(){\n\t\t\tcount--;\n\t\t\tif(count <= 0 && callback) callback();\n\t\t}\n\n\t\thooks.forEach(function(hook){\n\t\t\thook(countdown, passed);\n\t\t});\n\t};\n\n\treturn {\n\t\tregister: function(name) {\n\t\t\tif(EPUBJS.hooks[name] === undefined) { EPUBJS.hooks[name] = {}; }\n\t\t\tif(typeof EPUBJS.hooks[name] !== 'object') { throw \"Already registered: \"+name; }\n\t\t\treturn EPUBJS.hooks[name];\n\t\t},\n\t\tmixin: function(object) {\n\t\t\tfor (var prop in hooks.prototype) {\n\t\t\t\tobject[prop] = hooks.prototype[prop];\n\t\t\t}\n\t\t}\n\t};\n})();\n\nEPUBJS.Layout = EPUBJS.Layout || {};\n\n// EPUB2 documents won't provide us with \"rendition:layout\", so this is used to\n// duck type the documents instead.\nEPUBJS.Layout.isFixedLayout = function (documentElement) {\n\tvar viewport = documentElement.querySelector(\"[name=viewport]\");\n\tif (!viewport || !viewport.hasAttribute(\"content\")) {\n\t\treturn false;\n\t}\n\tvar content = viewport.getAttribute(\"content\");\n\treturn /,/.test(content);\n};\n\nEPUBJS.Layout.Reflowable = function(){\n\tthis.documentElement = null;\n\tthis.spreadWidth = null;\n};\n\nEPUBJS.Layout.Reflowable.prototype.format = function(documentElement, _width, _height, _gap){\n\t// Get the prefixed CSS commands\n\tvar columnAxis = EPUBJS.core.prefixed('columnAxis');\n\tvar columnGap = EPUBJS.core.prefixed('columnGap');\n\tvar columnWidth = EPUBJS.core.prefixed('columnWidth');\n\tvar columnFill = EPUBJS.core.prefixed('columnFill');\n\n\t//-- Check the width and create even width columns\n\tvar width = Math.floor(_width);\n\t// var width = (fullWidth % 2 === 0) ? fullWidth : fullWidth - 0; // Not needed for single\n\tvar section = Math.floor(width / 8);\n\tvar gap = (_gap >= 0) ? _gap : ((section % 2 === 0) ? section : section - 1);\n\tthis.documentElement = documentElement;\n\t//-- Single Page\n\tthis.spreadWidth = (width + gap);\n\n\n\tdocumentElement.style.overflow = \"hidden\";\n\n\t// Must be set to the new calculated width or the columns will be off\n\tdocumentElement.style.width = width + \"px\";\n\n\t//-- Adjust height\n\tdocumentElement.style.height = _height + \"px\";\n\n\t//-- Add columns\n\tdocumentElement.style[columnAxis] = \"horizontal\";\n\tdocumentElement.style[columnFill] = \"auto\";\n\tdocumentElement.style[columnWidth] = width+\"px\";\n\tdocumentElement.style[columnGap] = gap+\"px\";\n\tthis.colWidth = width;\n\tthis.gap = gap;\n\n\treturn {\n\t\tpageWidth : this.spreadWidth,\n\t\tpageHeight : _height\n\t};\n};\n\nEPUBJS.Layout.Reflowable.prototype.calculatePages = function() {\n\tvar totalWidth, displayedPages;\n\tthis.documentElement.style.width = \"auto\"; //-- reset width for calculations\n\ttotalWidth = this.documentElement.scrollWidth;\n\tdisplayedPages = Math.ceil(totalWidth / this.spreadWidth);\n\n\treturn {\n\t\tdisplayedPages : displayedPages,\n\t\tpageCount : displayedPages\n\t};\n};\n\nEPUBJS.Layout.ReflowableSpreads = function(){\n\tthis.documentElement = null;\n\tthis.spreadWidth = null;\n};\n\nEPUBJS.Layout.ReflowableSpreads.prototype.format = function(documentElement, _width, _height, _gap){\n\tvar columnAxis = EPUBJS.core.prefixed('columnAxis');\n\tvar columnGap = EPUBJS.core.prefixed('columnGap');\n\tvar columnWidth = EPUBJS.core.prefixed('columnWidth');\n\tvar columnFill = EPUBJS.core.prefixed('columnFill');\n\n\tvar divisor = 2,\n\t\t\tcutoff = 800;\n\n\t//-- Check the width and create even width columns\n\tvar fullWidth = Math.floor(_width);\n\tvar width = (fullWidth % 2 === 0) ? fullWidth : fullWidth - 1;\n\n\tvar section = Math.floor(width / 8);\n\tvar gap = (_gap >= 0) ? _gap : ((section % 2 === 0) ? section : section - 1);\n\n\t//-- Double Page\n\tvar colWidth = Math.floor((width - gap) / divisor);\n\n\tthis.documentElement = documentElement;\n\tthis.spreadWidth = (colWidth + gap) * divisor;\n\n\n\tdocumentElement.style.overflow = \"hidden\";\n\n\t// Must be set to the new calculated width or the columns will be off\n\tdocumentElement.style.width = width + \"px\";\n\n\t//-- Adjust height\n\tdocumentElement.style.height = _height + \"px\";\n\n\t//-- Add columns\n\tdocumentElement.style[columnAxis] = \"horizontal\";\n\tdocumentElement.style[columnFill] = \"auto\";\n\tdocumentElement.style[columnGap] = gap+\"px\";\n\tdocumentElement.style[columnWidth] = colWidth+\"px\";\n\n\tthis.colWidth = colWidth;\n\tthis.gap = gap;\n\treturn {\n\t\tpageWidth : this.spreadWidth,\n\t\tpageHeight : _height\n\t};\n};\n\nEPUBJS.Layout.ReflowableSpreads.prototype.calculatePages = function() {\n\tvar totalWidth = this.documentElement.scrollWidth;\n\tvar displayedPages = Math.ceil(totalWidth / this.spreadWidth);\n\n\t//-- Add a page to the width of the document to account an for odd number of pages\n\tthis.documentElement.style.width = ((displayedPages * this.spreadWidth) - this.gap) + \"px\";\n\n\treturn {\n\t\tdisplayedPages : displayedPages,\n\t\tpageCount : displayedPages * 2\n\t};\n};\n\nEPUBJS.Layout.Fixed = function(){\n\tthis.documentElement = null;\n};\n\nEPUBJS.Layout.Fixed.prototype.format = function(documentElement, _width, _height, _gap){\n\tvar columnWidth = EPUBJS.core.prefixed('columnWidth');\n\tvar transform = EPUBJS.core.prefixed('transform');\n\tvar transformOrigin = EPUBJS.core.prefixed('transformOrigin');\n\tvar viewport = documentElement.querySelector(\"[name=viewport]\");\n\tvar content;\n\tvar contents;\n\tvar width, height;\n\tthis.documentElement = documentElement;\n\t/**\n\t* check for the viewport size\n\t* <meta name=\"viewport\" content=\"width=1024,height=697\" />\n\t*/\n\tif(viewport && viewport.hasAttribute(\"content\")) {\n\t\tcontent = viewport.getAttribute(\"content\");\n\t\tcontents = content.split(',');\n\t\tif(contents[0]){\n\t\t\twidth = contents[0].replace(\"width=\", '');\n\t\t}\n\t\tif(contents[1]){\n\t\t\theight = contents[1].replace(\"height=\", '');\n\t\t}\n\t}\n\n\t//-- Scale fixed documents so their contents don't overflow, and\n\t// vertically and horizontally center the contents\n\tvar widthScale = _width / width;\n\tvar heightScale = _height / height;\n\tvar scale = widthScale < heightScale ? widthScale : heightScale;\n\tdocumentElement.style.position = \"absolute\";\n\tdocumentElement.style.top = \"50%\";\n\tdocumentElement.style.left = \"50%\";\n\tdocumentElement.style[transform] = \"scale(\" + scale + \") translate(-50%, -50%)\";\n\tdocumentElement.style[transformOrigin] = \"0px 0px 0px\";\n\n\t//-- Adjust width and height\n\tdocumentElement.style.width =  width + \"px\" || \"auto\";\n\tdocumentElement.style.height =  height + \"px\" || \"auto\";\n\n\t//-- Remove columns\n\tdocumentElement.style[columnWidth] = \"auto\";\n\n\t//-- Scroll\n\tdocumentElement.style.overflow = \"auto\";\n\n\tthis.colWidth = width;\n\tthis.gap = 0;\n\n\treturn {\n\t\tpageWidth : width,\n\t\tpageHeight : height\n\t};\n\n};\n\nEPUBJS.Layout.Fixed.prototype.calculatePages = function(){\n\treturn {\n\t\tdisplayedPages : 1,\n\t\tpageCount : 1\n\t};\n};\n\nEPUBJS.Locations = function(spine, store, credentials) {\n  this.spine = spine;\n  this.store = store;\n  this.credentials = credentials;\n\n  this.epubcfi = new EPUBJS.EpubCFI();\n\n  this._locations = [];\n  this.total = 0;\n\n  this.break = 150;\n\n  this._current = 0;\n\n};\n\nEPUBJS.Locations.prototype.generate = function(chars) {\n\tvar deferred = new RSVP.defer();\n\tvar spinePos = -1;\n\tvar spineLength = this.spine.length;\n  var finished;\n\tvar nextChapter = function(deferred){\n\t\tvar chapter;\n\t\tvar next = spinePos + 1;\n\t\tvar done = deferred || new RSVP.defer();\n\t\tvar loaded;\n\t\tif(next >= spineLength) {\n\t\t\tdone.resolve();\n\t\t} else {\n\t\t\tspinePos = next;\n\t\t\tchapter = new EPUBJS.Chapter(this.spine[spinePos], this.store, this.credentials);\n\n      this.process(chapter).then(function() {\n        // Load up the next chapter\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tnextChapter(done);\n\t\t\t\t}, 1);\n\n      });\n\t\t}\n\t\treturn done.promise;\n\t}.bind(this);\n\n  if(typeof chars === 'number') {\n    this.break = chars;\n  }\n\n\tfinished = nextChapter().then(function(){\n    this.total = this._locations.length-1;\n\n    if (this._currentCfi) {\n      this.currentLocation = this._currentCfi;\n    }\n\t\tdeferred.resolve(this._locations);\n\t}.bind(this));\n\n\treturn deferred.promise;\n};\n\nEPUBJS.Locations.prototype.process = function(chapter) {\n  return chapter.load()\n    .then(function(_doc) {\n\n      var range;\n      var doc = _doc;\n      var contents = doc.documentElement.querySelector(\"body\");\n      var counter = 0;\n      var prev;\n      var cfi;\n\n      this.sprint(contents, function(node) {\n        var len = node.length;\n        var dist;\n        var pos = 0;\n\n        // Start range\n        if (counter === 0) {\n          range = doc.createRange();\n          range.setStart(node, 0);\n        }\n\n        dist = this.break - counter;\n\n        // Node is smaller than a break\n        if(dist > len){\n          counter += len;\n          pos = len;\n        }\n\n        while (pos < len) {\n          counter = this.break;\n          pos += this.break;\n\n          // Gone over\n          if(pos >= len){\n            // Continue counter for next node\n            counter = len - (pos - this.break);\n\n          // At End\n          } else {\n            // End the previous range\n            range.setEnd(node, pos);\n            cfi = chapter.cfiFromRange(range);\n            this._locations.push(cfi);\n            counter = 0;\n\n            // Start new range\n            pos += 1;\n            range = doc.createRange();\n            range.setStart(node, pos);\n          }\n\n        }\n\n        prev = node;\n\n      }.bind(this));\n\n      // Close remaining\n      if (range) {\n        range.setEnd(prev, prev.length);\n        cfi = chapter.cfiFromRange(range);\n        this._locations.push(cfi);\n        counter = 0;\n      }\n\n    }.bind(this));\n\n};\n\nEPUBJS.Locations.prototype.sprint = function(root, func) {\n  var node;\n\tvar treeWalker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, null, false);\n\n\twhile ((node = treeWalker.nextNode())) {\n\t\tfunc(node);\n\t}\n\n};\n\nEPUBJS.Locations.prototype.locationFromCfi = function(cfi){\n  // Check if the location has not been set yet\n\tif(this._locations.length === 0) {\n\t\treturn -1;\n\t}\n\n  return EPUBJS.core.locationOf(cfi, this._locations, this.epubcfi.compare);\n};\n\nEPUBJS.Locations.prototype.percentageFromCfi = function(cfi) {\n  // Find closest cfi\n  var loc = this.locationFromCfi(cfi);\n  // Get percentage in total\n  return this.percentageFromLocation(loc);\n};\n\nEPUBJS.Locations.prototype.percentageFromLocation = function(loc) {\n  if (!loc || !this.total) {\n    return 0;\n  }\n  return (loc / this.total);\n};\n\nEPUBJS.Locations.prototype.cfiFromLocation = function(loc){\n\tvar cfi = -1;\n\t// check that pg is an int\n\tif(typeof loc != \"number\"){\n\t\tloc = parseInt(loc);\n\t}\n\n\tif(loc >= 0 && loc < this._locations.length) {\n\t\tcfi = this._locations[loc];\n\t}\n\n\treturn cfi;\n};\n\nEPUBJS.Locations.prototype.cfiFromPercentage = function(value){\n  var percentage = (value > 1) ? value / 100 : value; // Normalize value to 0-1\n\tvar loc = Math.ceil(this.total * percentage);\n\n\treturn this.cfiFromLocation(loc);\n};\n\nEPUBJS.Locations.prototype.load = function(locations){\n\tthis._locations = JSON.parse(locations);\n  this.total = this._locations.length-1;\n  return this._locations;\n};\n\nEPUBJS.Locations.prototype.save = function(json){\n\treturn JSON.stringify(this._locations);\n};\n\nEPUBJS.Locations.prototype.getCurrent = function(json){\n\treturn this._current;\n};\n\nEPUBJS.Locations.prototype.setCurrent = function(curr){\n  var loc;\n\n  if(typeof curr == \"string\"){\n    this._currentCfi = curr;\n  } else if (typeof curr == \"number\") {\n    this._current = curr;\n  } else {\n    return;\n  }\n\n  if(this._locations.length === 0) {\n    return;\n\t}\n\n  if(typeof curr == \"string\"){\n    loc = this.locationFromCfi(curr);\n    this._current = loc;\n  } else {\n    loc = curr;\n  }\n\n  this.trigger(\"changed\", {\n    percentage: this.percentageFromLocation(loc)\n  });\n};\n\nObject.defineProperty(EPUBJS.Locations.prototype, 'currentLocation', {\n  get: function () {\n    return this._current;\n  },\n  set: function (curr) {\n    this.setCurrent(curr);\n  }\n});\n\nRSVP.EventTarget.mixin(EPUBJS.Locations.prototype);\n\nEPUBJS.Pagination = function(pageList) {\n\tthis.pages = [];\n\tthis.locations = [];\n\tthis.epubcfi = new EPUBJS.EpubCFI();\n\tif(pageList && pageList.length) {\n\t\tthis.process(pageList);\n\t}\n};\n\nEPUBJS.Pagination.prototype.process = function(pageList){\n\tpageList.forEach(function(item){\n\t\tthis.pages.push(item.page);\n\t\tthis.locations.push(item.cfi);\n\t}, this);\n\t\n\tthis.pageList = pageList;\n\tthis.firstPage = parseInt(this.pages[0]);\n\tthis.lastPage = parseInt(this.pages[this.pages.length-1]);\n\tthis.totalPages = this.lastPage - this.firstPage;\n};\n\nEPUBJS.Pagination.prototype.pageFromCfi = function(cfi){\n\tvar pg = -1;\n\t\n\t// Check if the pageList has not been set yet\n\tif(this.locations.length === 0) {\n\t\treturn -1;\n\t}\n\t\n\t// TODO: check if CFI is valid?\n\n\t// check if the cfi is in the location list\n\t// var index = this.locations.indexOf(cfi);\n\tvar index = EPUBJS.core.indexOfSorted(cfi, this.locations, this.epubcfi.compare);\n\tif(index != -1) {\n\t\tpg = this.pages[index];\n\t} else {\n\t\t// Otherwise add it to the list of locations\n\t\t// Insert it in the correct position in the locations page\n\t\t//index = EPUBJS.core.insert(cfi, this.locations, this.epubcfi.compare);\n\t\tindex = EPUBJS.core.locationOf(cfi, this.locations, this.epubcfi.compare);\n\t\t// Get the page at the location just before the new one, or return the first\n\t\tpg = index-1 >= 0 ? this.pages[index-1] : this.pages[0];\n\t\tif(pg !== undefined) {\n\t\t\t// Add the new page in so that the locations and page array match up\n\t\t\t//this.pages.splice(index, 0, pg);\n\t\t} else {\n\t\t\tpg = -1;\n\t\t}\n\n\t}\n\treturn pg;\n};\n\nEPUBJS.Pagination.prototype.cfiFromPage = function(pg){\n\tvar cfi = -1;\n\t// check that pg is an int\n\tif(typeof pg != \"number\"){\n\t\tpg = parseInt(pg);\n\t}\n\n\t// check if the cfi is in the page list\n\t// Pages could be unsorted.\n\tvar index = this.pages.indexOf(pg);\n\tif(index != -1) {\n\t\tcfi = this.locations[index];\n\t}\n\t// TODO: handle pages not in the list\n\treturn cfi;\n};\n\nEPUBJS.Pagination.prototype.pageFromPercentage = function(percent){\n\tvar pg = Math.round(this.totalPages * percent);\n\treturn pg;\n};\n\n// Returns a value between 0 - 1 corresponding to the location of a page\nEPUBJS.Pagination.prototype.percentageFromPage = function(pg){\n\tvar percentage = (pg - this.firstPage) / this.totalPages;\n\treturn Math.round(percentage * 1000) / 1000;\n};\n\n// Returns a value between 0 - 1 corresponding to the location of a cfi\nEPUBJS.Pagination.prototype.percentageFromCfi = function(cfi){\n\tvar pg = this.pageFromCfi(cfi);\n\tvar percentage = this.percentageFromPage(pg);\n\treturn percentage;\n};\nEPUBJS.Parser = function(baseUrl){\n\tthis.baseUrl = baseUrl || '';\n};\n\nEPUBJS.Parser.prototype.container = function(containerXml){\n\t\t//-- <rootfile full-path=\"OPS/package.opf\" media-type=\"application/oebps-package+xml\"/>\n\t\tvar rootfile, fullpath, folder, encoding;\n\n\t\tif(!containerXml) {\n\t\t\tconsole.error(\"Container File Not Found\");\n\t\t\treturn;\n\t\t}\n\n\t\trootfile = containerXml.querySelector(\"rootfile\");\n\n\t\tif(!rootfile) {\n\t\t\tconsole.error(\"No RootFile Found\");\n\t\t\treturn;\n\t\t}\n\n\t\tfullpath = rootfile.getAttribute('full-path');\n\t\tfolder = EPUBJS.core.uri(fullpath).directory;\n\t\tencoding = containerXml.xmlEncoding;\n\n\t\t//-- Now that we have the path we can parse the contents\n\t\treturn {\n\t\t\t'packagePath' : fullpath,\n\t\t\t'basePath' : folder,\n\t\t\t'encoding' : encoding\n\t\t};\n};\n\nEPUBJS.Parser.prototype.identifier = function(packageXml){\n\tvar metadataNode;\n\n\tif(!packageXml) {\n\t\tconsole.error(\"Package File Not Found\");\n\t\treturn;\n\t}\n\n\tmetadataNode = packageXml.querySelector(\"metadata\");\n\n\tif(!metadataNode) {\n\t\tconsole.error(\"No Metadata Found\");\n\t\treturn;\n\t}\n\n\treturn this.getElementText(metadataNode, \"identifier\");\n};\n\nEPUBJS.Parser.prototype.packageContents = function(packageXml, baseUrl){\n\tvar parse = this;\n\tvar metadataNode, manifestNode, spineNode;\n\tvar manifest, navPath, tocPath, coverPath;\n\tvar spineNodeIndex;\n\tvar spine;\n\tvar spineIndexByURL;\n\tvar metadata;\n\n\tif(baseUrl) this.baseUrl = baseUrl;\n\n\tif(!packageXml) {\n\t\tconsole.error(\"Package File Not Found\");\n\t\treturn;\n\t}\n\n\tmetadataNode = packageXml.querySelector(\"metadata\");\n\tif(!metadataNode) {\n\t\tconsole.error(\"No Metadata Found\");\n\t\treturn;\n\t}\n\n\tmanifestNode = packageXml.querySelector(\"manifest\");\n\tif(!manifestNode) {\n\t\tconsole.error(\"No Manifest Found\");\n\t\treturn;\n\t}\n\n\tspineNode = packageXml.querySelector(\"spine\");\n\tif(!spineNode) {\n\t\tconsole.error(\"No Spine Found\");\n\t\treturn;\n\t}\n\n\tmanifest = parse.manifest(manifestNode);\n\tnavPath = parse.findNavPath(manifestNode);\n\ttocPath = parse.findTocPath(manifestNode, spineNode);\n\tcoverPath = parse.findCoverPath(packageXml);\n\n\tspineNodeIndex = Array.prototype.indexOf.call(spineNode.parentNode.childNodes, spineNode);\n\n\tspine = parse.spine(spineNode, manifest);\n\n\tspineIndexByURL = {};\n\tspine.forEach(function(item){\n\t\tspineIndexByURL[item.href] = item.index;\n\t});\n\n\tmetadata = parse.metadata(metadataNode);\n\n\tmetadata.direction = spineNode.getAttribute(\"page-progression-direction\");\n\n\treturn {\n\t\t'metadata' : metadata,\n\t\t'spine'    : spine,\n\t\t'manifest' : manifest,\n\t\t'navPath'  : navPath,\n\t\t'tocPath'  : tocPath,\n\t\t'coverPath': coverPath,\n\t\t'spineNodeIndex' : spineNodeIndex,\n\t\t'spineIndexByURL' : spineIndexByURL\n\t};\n};\n\n//-- Find TOC NAV\nEPUBJS.Parser.prototype.findNavPath = function(manifestNode){\n\t// Find item with property 'nav'\n\t// Should catch nav irregardless of order\n  var node = manifestNode.querySelector(\"item[properties$='nav'], item[properties^='nav '], item[properties*=' nav ']\");\n  return node ? node.getAttribute('href') : false;\n};\n\n//-- Find TOC NCX: media-type=\"application/x-dtbncx+xml\" href=\"toc.ncx\"\nEPUBJS.Parser.prototype.findTocPath = function(manifestNode, spineNode){\n\tvar node = manifestNode.querySelector(\"item[media-type='application/x-dtbncx+xml']\");\n\tvar tocId;\n\n\t// If we can't find the toc by media-type then try to look for id of the item in the spine attributes as\n\t// according to http://www.idpf.org/epub/20/spec/OPF_2.0.1_draft.htm#Section2.4.1.2,\n\t// \"The item that describes the NCX must be referenced by the spine toc attribute.\"\n\tif (!node) {\n\t\ttocId = spineNode.getAttribute(\"toc\");\n\t\tif(tocId) {\n\t\t\tnode = manifestNode.querySelector(\"item[id='\" + tocId + \"']\");\n\t\t}\n\t}\n\n\treturn node ? node.getAttribute('href') : false;\n};\n\n//-- Expanded to match Readium web components\nEPUBJS.Parser.prototype.metadata = function(xml){\n\tvar metadata = {},\n\t\t\tp = this;\n\n\tmetadata.bookTitle = p.getElementText(xml, 'title');\n\tmetadata.creator = p.getElementText(xml, 'creator');\n\tmetadata.description = p.getElementText(xml, 'description');\n\n\tmetadata.pubdate = p.getElementText(xml, 'date');\n\n\tmetadata.publisher = p.getElementText(xml, 'publisher');\n\n\tmetadata.identifier = p.getElementText(xml, \"identifier\");\n\tmetadata.language = p.getElementText(xml, \"language\");\n\tmetadata.rights = p.getElementText(xml, \"rights\");\n\n\tmetadata.modified_date = p.querySelectorText(xml, \"meta[property='dcterms:modified']\");\n\tmetadata.layout = p.querySelectorText(xml, \"meta[property='rendition:layout']\");\n\tmetadata.orientation = p.querySelectorText(xml, \"meta[property='rendition:orientation']\");\n\tmetadata.spread = p.querySelectorText(xml, \"meta[property='rendition:spread']\");\n\n\treturn metadata;\n};\n\n//-- Find Cover: <item properties=\"cover-image\" id=\"ci\" href=\"cover.svg\" media-type=\"image/svg+xml\" />\n//-- Fallback for Epub 2.0\nEPUBJS.Parser.prototype.findCoverPath = function(packageXml){\n\n\tvar epubVersion = packageXml.querySelector('package').getAttribute('version');\n\tif (epubVersion === '2.0') {\n\t\tvar metaCover = packageXml.querySelector('meta[name=\"cover\"]');\n\t\tif (metaCover) {\n\t\t\tvar coverId = metaCover.getAttribute('content');\n\t\t\tvar cover = packageXml.querySelector(\"item[id='\" + coverId + \"']\");\n\t\t\treturn cover ? cover.getAttribute('href') : false;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse {\n\t\tvar node = packageXml.querySelector(\"item[properties='cover-image']\");\n\t\treturn node ? node.getAttribute('href') : false;\n\t}\n};\n\nEPUBJS.Parser.prototype.getElementText = function(xml, tag){\n\tvar found = xml.getElementsByTagNameNS(\"http://purl.org/dc/elements/1.1/\", tag),\n\t\tel;\n\n\tif(!found || found.length === 0) return '';\n\n\tel = found[0];\n\n\tif(el.childNodes.length){\n\t\treturn el.childNodes[0].nodeValue;\n\t}\n\n\treturn '';\n\n};\n\nEPUBJS.Parser.prototype.querySelectorText = function(xml, q){\n\tvar el = xml.querySelector(q);\n\n\tif(el && el.childNodes.length){\n\t\treturn el.childNodes[0].nodeValue;\n\t}\n\n\treturn '';\n};\n\nEPUBJS.Parser.prototype.manifest = function(manifestXml){\n\tvar baseUrl = this.baseUrl,\n\t\t\tmanifest = {};\n\n\t//-- Turn items into an array\n\tvar selected = manifestXml.querySelectorAll(\"item\"),\n\t\titems = Array.prototype.slice.call(selected);\n\n\t//-- Create an object with the id as key\n\titems.forEach(function(item){\n\t\tvar id = item.getAttribute('id'),\n\t\t\t\thref = item.getAttribute('href') || '',\n\t\t\t\ttype = item.getAttribute('media-type') || '',\n\t\t\t\tproperties = item.getAttribute('properties') || '';\n\n\t\tmanifest[id] = {\n\t\t\t'href' : href,\n\t\t\t'url' : baseUrl + href, //-- Absolute URL for loading with a web worker\n\t\t\t'type' : type,\n      'properties' : properties\n\t\t};\n\n\t});\n\n\treturn manifest;\n\n};\n\nEPUBJS.Parser.prototype.spine = function(spineXml, manifest){\n\tvar spine = [];\n\n\tvar selected = spineXml.getElementsByTagName(\"itemref\"),\n\t\t\titems = Array.prototype.slice.call(selected);\n\n\tvar spineNodeIndex = Array.prototype.indexOf.call(spineXml.parentNode.childNodes, spineXml);\n\n\tvar epubcfi = new EPUBJS.EpubCFI();\n\n\t//-- Add to array to mantain ordering and cross reference with manifest\n\titems.forEach(function(item, index){\n\t\tvar Id = item.getAttribute('idref');\n\t\tvar cfiBase = epubcfi.generateChapterComponent(spineNodeIndex, index, Id);\n\t\tvar props = item.getAttribute('properties') || '';\n\t\tvar propArray = props.length ? props.split(' ') : [];\n\t\tvar manifestProps = manifest[Id].properties;\n\t\tvar manifestPropArray = manifestProps.length ? manifestProps.split(' ') : [];\n\t\tvar vert = {\n\t\t\t'id' : Id,\n\t\t\t'linear' : item.getAttribute('linear') || '',\n\t\t\t'properties' : propArray,\n\t\t\t'manifestProperties' : manifestPropArray,\n\t\t\t'href' : manifest[Id].href,\n\t\t\t'url' :  manifest[Id].url,\n\t\t\t'index' : index,\n\t\t\t'cfiBase' : cfiBase,\n\t\t\t'cfi' : \"epubcfi(\" + cfiBase + \")\"\n\t\t};\n\t\tspine.push(vert);\n\t});\n\n\treturn spine;\n};\n\nEPUBJS.Parser.prototype.querySelectorByType = function(html, element, type){\n\tvar query = html.querySelector(element+'[*|type=\"'+type+'\"]');\n\t// Handle IE not supporting namespaced epub:type in querySelector\n\tif(query === null || query.length === 0) {\n\t\tquery = html.querySelectorAll(element);\n\t\tfor (var i = 0; i < query.length; i++) {\n\t\t\tif(query[i].getAttributeNS(\"http://www.idpf.org/2007/ops\", \"type\") === type) {\n\t\t\t\treturn query[i];\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn query;\n\t}\n};\n\nEPUBJS.Parser.prototype.nav = function (navHtml, spineIndexByURL, bookSpine) {\n\tvar toc = this.querySelectorByType(navHtml, 'nav', 'toc');\n\treturn this.navItems(toc, spineIndexByURL, bookSpine);\n};\n\nEPUBJS.Parser.prototype.navItems = function (navNode, spineIndexByURL, bookSpine) {\n\tif (!navNode) return [];\n\n\tvar list = navNode.querySelector('ol');\n\tif (!list) return [];\n\n\tvar items = list.childNodes,\n\t\t\tresult = [];\n\n\tArray.prototype.forEach.call(items, function (item) {\n\t\tif (item.tagName !== 'li') return;\n\n\t\tvar content = item.querySelector('a, span'),\n\t\t\t\thref = content.getAttribute('href') || '',\n\t\t\t\tlabel = content.textContent || '',\n\t\t\t\tsplit = href.split('#'),\n\t\t\t\tbaseUrl = split[0],\n\t\t\t\tspinePos = spineIndexByURL[baseUrl],\n\t\t\t\tspineItem = bookSpine[spinePos],\n\t\t\t\tcfi = spineItem ? spineItem.cfi : '',\n\t\t\t\tsubitems = this.navItems(item, spineIndexByURL, bookSpine);\n\n\t\tresult.push({\n\t\t\thref: href,\n\t\t\tlabel: label,\n\t\t\tspinePos: spinePos,\n\t\t\tsubitems: subitems,\n\t\t\tcfi: cfi\n\t\t});\n\t}.bind(this));\n\n\treturn result;\n};\n\nEPUBJS.Parser.prototype.toc = function(tocXml, spineIndexByURL, bookSpine){\n\tvar navPoints = tocXml.querySelectorAll(\"navMap navPoint\");\n\tvar length = navPoints.length;\n\tvar i;\n\tvar toc = {};\n\tvar list = [];\n\tvar item, parent;\n\n\tif(!navPoints || length === 0) return list;\n\n\tfor (i = 0; i < length; ++i) {\n\t\titem = this.tocItem(navPoints[i], spineIndexByURL, bookSpine);\n\t\ttoc[item.id] = item;\n\t\tif(!item.parent) {\n\t\t\tlist.push(item);\n\t\t} else {\n\t\t\tparent = toc[item.parent];\n\t\t\tparent.subitems.push(item);\n\t\t}\n\t}\n\n\treturn list;\n};\n\nEPUBJS.Parser.prototype.tocItem = function(item, spineIndexByURL, bookSpine){\n\tvar id = item.getAttribute('id') || false,\n\t\t\tcontent = item.querySelector(\"content\"),\n\t\t\tsrc = content.getAttribute('src'),\n\t\t\tnavLabel = item.querySelector(\"navLabel\"),\n\t\t\ttext = navLabel.textContent ? navLabel.textContent : \"\",\n\t\t\tsplit = src.split(\"#\"),\n\t\t\tbaseUrl = split[0],\n\t\t\tspinePos = spineIndexByURL[baseUrl],\n\t\t\tspineItem = bookSpine[spinePos],\n\t\t\tsubitems = [],\n\t\t\tparentNode = item.parentNode,\n\t\t\tparent,\n\t\t\tcfi = spineItem ? spineItem.cfi : '';\n\n\tif(parentNode && parentNode.nodeName === \"navPoint\") {\n\t\tparent = parentNode.getAttribute('id');\n\t}\n\n\tif(!id) {\n\t\tif(spinePos) {\n\t\t\tspineItem = bookSpine[spinePos];\n\t\t\tid = spineItem.id;\n\t\t\tcfi = spineItem.cfi;\n\t\t} else {\n\t\t\tid = 'epubjs-autogen-toc-id-' + EPUBJS.core.uuid();\n\t\t\titem.setAttribute('id', id);\n\t\t}\n\t}\n\n\treturn {\n\t\t\"id\": id,\n\t\t\"href\": src,\n\t\t\"label\": text,\n\t\t\"spinePos\": spinePos,\n\t\t\"subitems\" : subitems,\n\t\t\"parent\" : parent,\n\t\t\"cfi\" : cfi\n\t};\n};\n\n\nEPUBJS.Parser.prototype.pageList = function(navHtml, spineIndexByURL, bookSpine){\n\tvar navElement = this.querySelectorByType(navHtml, \"nav\", \"page-list\");\n\tvar navItems = navElement ? navElement.querySelectorAll(\"ol li\") : [];\n\tvar length = navItems.length;\n\tvar i;\n\tvar toc = {};\n\tvar list = [];\n\tvar item;\n\n\tif(!navItems || length === 0) return list;\n\n\tfor (i = 0; i < length; ++i) {\n\t\titem = this.pageListItem(navItems[i], spineIndexByURL, bookSpine);\n\t\tlist.push(item);\n\t}\n\n\treturn list;\n};\n\nEPUBJS.Parser.prototype.pageListItem = function(item, spineIndexByURL, bookSpine){\n\tvar id = item.getAttribute('id') || false,\n\t\tcontent = item.querySelector(\"a\"),\n\t\thref = content.getAttribute('href') || '',\n\t\ttext = content.textContent || \"\",\n\t\tpage = parseInt(text),\n\t\tisCfi = href.indexOf(\"epubcfi\"),\n\t\tsplit,\n\t\tpackageUrl,\n\t\tcfi;\n\n\tif(isCfi != -1) {\n\t\tsplit = href.split(\"#\");\n\t\tpackageUrl = split[0];\n\t\tcfi = split.length > 1 ? split[1] : false;\n\t\treturn {\n\t\t\t\"cfi\" : cfi,\n\t\t\t\"href\" : href,\n\t\t\t\"packageUrl\" : packageUrl,\n\t\t\t\"page\" : page\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\t\"href\" : href,\n\t\t\t\"page\" : page\n\t\t};\n\t}\n};\n\nEPUBJS.Render.Iframe = function() {\n\tthis.iframe = null;\n\tthis.document = null;\n\tthis.window = null;\n\tthis.docEl = null;\n\tthis.bodyEl = null;\n\n\tthis.leftPos = 0;\n\tthis.pageWidth = 0;\n\tthis.id = EPUBJS.core.uuid();\n};\n\n//-- Build up any html needed\nEPUBJS.Render.Iframe.prototype.create = function(){\n\tthis.element = document.createElement('div');\n\tthis.element.id = \"epubjs-view:\" + this.id\n\n\tthis.isMobile = navigator.userAgent.match(/(iPad|iPhone|iPod|Mobile|Android)/g);\n\tthis.transform = EPUBJS.core.prefixed('transform');\n\n\treturn this.element;\n};\n\nEPUBJS.Render.Iframe.prototype.addIframe = function(){\n\tthis.iframe = document.createElement('iframe');\n\tthis.iframe.id = \"epubjs-iframe:\" + this.id;\n\tthis.iframe.scrolling = this.scrolling || \"no\";\n\tthis.iframe.seamless = \"seamless\";\n\t// Back up if seamless isn't supported\n\tthis.iframe.style.border = \"none\";\n\n\tthis.iframe.addEventListener(\"load\", this.loaded.bind(this), false);\n\n\tif (this._width || this._height) {\n\t\tthis.iframe.height = this._height;\n\t\tthis.iframe.width = this._width;\n\t}\n\treturn this.iframe;\n};\n\n/**\n* Sets the source of the iframe with the given URL string\n* Takes:  Document Contents String\n* Returns: promise with document element\n*/\nEPUBJS.Render.Iframe.prototype.load = function(contents, url){\n\tvar render = this,\n\t\t\tdeferred = new RSVP.defer();\n\n\tif(this.window) {\n\t\tthis.unload();\n\t}\n\n\tif (this.iframe) {\n\t\tthis.element.removeChild(this.iframe);\n\t}\n\n\tthis.iframe = this.addIframe();\n\tthis.element.appendChild(this.iframe);\n\n\n\tthis.iframe.onload = function(e) {\n\t\tvar title;\n\n\t\trender.document = render.iframe.contentDocument;\n\t\trender.docEl = render.document.documentElement;\n\t\trender.headEl = render.document.head;\n\t\trender.bodyEl = render.document.body || render.document.querySelector(\"body\");\n\t\trender.window = render.iframe.contentWindow;\n\n\t\trender.window.addEventListener(\"resize\", render.resized.bind(render), false);\n\n\t\t// Reset the scroll position\n\t\trender.leftPos = 0;\n\t\trender.setLeft(0);\n\n\t\t//-- Clear Margins\n\t\tif(render.bodyEl) {\n\t\t\trender.bodyEl.style.margin = \"0\";\n\t\t}\n\n\t\tdeferred.resolve(render.docEl);\n\t};\n\n\tthis.iframe.onerror = function(e) {\n\t\t//console.error(\"Error Loading Contents\", e);\n\t\tdeferred.reject({\n\t\t\t\tmessage : \"Error Loading Contents: \" + e,\n\t\t\t\tstack : new Error().stack\n\t\t\t});\n\t};\n\n\t// this.iframe.contentWindow.location.replace(url);\n\tthis.document = this.iframe.contentDocument;\n\n  if(!this.document) {\n    deferred.reject(new Error(\"No Document Available\"));\n    return deferred.promise;\n  }\n\n  this.iframe.contentDocument.open();\n  this.iframe.contentDocument.write(contents);\n  this.iframe.contentDocument.close();\n\n  return deferred.promise;\n};\n\n\nEPUBJS.Render.Iframe.prototype.loaded = function(v){\n\tvar url = this.iframe.contentWindow.location.href;\n\tvar baseEl, base;\n\n\tthis.document = this.iframe.contentDocument;\n\tthis.docEl = this.document.documentElement;\n\tthis.headEl = this.document.head;\n\tthis.bodyEl = this.document.body || this.document.querySelector(\"body\");\n\tthis.window = this.iframe.contentWindow;\n\tthis.window.focus();\n\n\tif(url != \"about:blank\"){\n\t\tbaseEl = this.iframe.contentDocument.querySelector(\"base\");\n\t\tbase = baseEl.getAttribute('href');\n\t\tthis.trigger(\"render:loaded\", base);\n\t}\n\n};\n\n// Resize the iframe to the given width and height\nEPUBJS.Render.Iframe.prototype.resize = function(width, height){\n\tvar iframeBox;\n\n\tif(!this.element) return;\n\n\tthis.element.style.height = height;\n\n\n\tif(!isNaN(width) && width % 2 !== 0){\n\t\twidth += 1; //-- Prevent cutting off edges of text in columns\n\t}\n\n\tthis.element.style.width = width;\n\n\tif (this.iframe) {\n\t\tthis.iframe.height = height;\n\t\tthis.iframe.width = width;\n\t}\n\n\t// Set the width for the iframe\n\tthis._height = height;\n\tthis._width = width;\n\n\t// Get the fractional height and width of the iframe\n\t// Default to orginal if bounding rect is 0\n\tthis.width = this.element.getBoundingClientRect().width || width;\n\tthis.height = this.element.getBoundingClientRect().height || height;\n\n};\n\n\nEPUBJS.Render.Iframe.prototype.resized = function(e){\n\t// Get the fractional height and width of the iframe\n\tthis.width = this.iframe.getBoundingClientRect().width;\n\tthis.height = this.iframe.getBoundingClientRect().height;\n};\n\nEPUBJS.Render.Iframe.prototype.totalWidth = function(){\n\treturn this.docEl.scrollWidth;\n};\n\nEPUBJS.Render.Iframe.prototype.totalHeight = function(){\n\treturn this.docEl.scrollHeight;\n};\n\nEPUBJS.Render.Iframe.prototype.setPageDimensions = function(pageWidth, pageHeight){\n\tthis.pageWidth = pageWidth;\n\tthis.pageHeight = pageHeight;\n\t//-- Add a page to the width of the document to account an for odd number of pages\n\t// this.docEl.style.width = this.docEl.scrollWidth + pageWidth + \"px\";\n};\n\nEPUBJS.Render.Iframe.prototype.setDirection = function(direction){\n\n\tthis.direction = direction;\n\n\t// Undo previous changes if needed\n\tif(this.docEl && this.docEl.dir == \"rtl\"){\n\t\tthis.docEl.dir = \"rtl\";\n\t\tif (this.layout !== \"pre-paginated\") {\n\t\t\tthis.docEl.style.position = \"static\";\n\t\t\tthis.docEl.style.right = \"auto\";\n\t\t}\n\t}\n\n};\n\nEPUBJS.Render.Iframe.prototype.setLeft = function(leftPos){\n\t// this.bodyEl.style.marginLeft = -leftPos + \"px\";\n\t// this.docEl.style.marginLeft = -leftPos + \"px\";\n\t// this.docEl.style[EPUBJS.Render.Iframe.transform] = 'translate('+ (-leftPos) + 'px, 0)';\n\n\tif (this.isMobile) {\n\t\tthis.docEl.style[this.transform] = 'translate('+ (-leftPos) + 'px, 0)';\n\t} else {\n\t\tthis.document.defaultView.scrollTo(leftPos, 0);\n\t}\n\n};\n\nEPUBJS.Render.Iframe.prototype.setLayout = function (layout) {\n\tthis.layout = layout;\n};\n\nEPUBJS.Render.Iframe.prototype.setStyle = function(style, val, prefixed){\n\tif(prefixed) {\n\t\tstyle = EPUBJS.core.prefixed(style);\n\t}\n\n\tif(this.bodyEl) this.bodyEl.style[style] = val;\n};\n\nEPUBJS.Render.Iframe.prototype.removeStyle = function(style){\n\n\tif(this.bodyEl) this.bodyEl.style[style] = '';\n\n};\n\nEPUBJS.Render.Iframe.prototype.addHeadTag = function(tag, attrs, _doc) {\n\tvar doc = _doc || this.document;\n\tvar tagEl = doc.createElement(tag);\n\tvar headEl = doc.head;\n\n\tfor(var attr in attrs) {\n\t\ttagEl.setAttribute(attr, attrs[attr]);\n\t}\n\n\tif(headEl) headEl.insertBefore(tagEl, headEl.firstChild);\n};\n\nEPUBJS.Render.Iframe.prototype.page = function(pg){\n\tthis.leftPos = this.pageWidth * (pg-1); //-- pages start at 1\n\n\t// Reverse for rtl langs\n\tif(this.direction === \"rtl\"){\n\t\tthis.leftPos = this.leftPos * -1;\n\t}\n\n\tthis.setLeft(this.leftPos);\n};\n\n//-- Show the page containing an Element\nEPUBJS.Render.Iframe.prototype.getPageNumberByElement = function(el){\n\tvar left, pg;\n\tif(!el) return;\n\n\tleft = this.leftPos + el.getBoundingClientRect().left; //-- Calculate left offset compaired to scrolled position\n\n\tpg = Math.floor(left / this.pageWidth) + 1; //-- pages start at 1\n\n\treturn pg;\n};\n\n//-- Show the page containing an Element\nEPUBJS.Render.Iframe.prototype.getPageNumberByRect = function(boundingClientRect){\n\tvar left, pg;\n\n\tleft = this.leftPos + boundingClientRect.left; //-- Calculate left offset compaired to scrolled position\n\tpg = Math.floor(left / this.pageWidth) + 1; //-- pages start at 1\n\n\treturn pg;\n};\n\n// Return the root element of the content\nEPUBJS.Render.Iframe.prototype.getBaseElement = function(){\n\treturn this.bodyEl;\n};\n\n// Return the document element\nEPUBJS.Render.Iframe.prototype.getDocumentElement = function(){\n\treturn this.docEl;\n};\n\n// Checks if an element is on the screen\nEPUBJS.Render.Iframe.prototype.isElementVisible = function(el){\n\tvar rect;\n\tvar left;\n\n\tif(el && typeof el.getBoundingClientRect === 'function'){\n\t\trect = el.getBoundingClientRect();\n\t\tleft = rect.left; //+ rect.width;\n\t\tif( rect.width !== 0 &&\n\t\t\t\trect.height !== 0 && // Element not visible\n\t\t\t\tleft >= 0 &&\n\t\t\t\tleft < this.pageWidth ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\n\nEPUBJS.Render.Iframe.prototype.scroll = function(bool){\n\tif(bool) {\n\t\t// this.iframe.scrolling = \"yes\";\n\t\tthis.scrolling = \"yes\";\n\t} else {\n\t\tthis.scrolling = \"no\";\n\t\t// this.iframe.scrolling = \"no\";\n\t}\n};\n\n// Cleanup event listeners\nEPUBJS.Render.Iframe.prototype.unload = function(){\n\tthis.window.removeEventListener(\"resize\", this.resized);\n\tthis.iframe.removeEventListener(\"load\", this.loaded);\n};\n\n//-- Enable binding events to Render\nRSVP.EventTarget.mixin(EPUBJS.Render.Iframe.prototype);\n\nEPUBJS.Renderer = function(renderMethod, hidden) {\n\t// Dom events to listen for\n\tthis.listenedEvents = [\"keydown\", \"keyup\", \"keypressed\", \"mouseup\", \"mousedown\", \"click\"];\n\tthis.upEvent = \"mouseup\";\n\tthis.downEvent = \"mousedown\";\n\tif('ontouchstart' in document.documentElement) {\n\t\tthis.listenedEvents.push(\"touchstart\", \"touchend\");\n\t\tthis.upEvent = \"touchend\";\n\t\tthis.downEvent = \"touchstart\";\n\t}\n\t/**\n\t* Setup a render method.\n\t* Options are: Iframe\n\t*/\n\tif(renderMethod && typeof(EPUBJS.Render[renderMethod]) != \"undefined\"){\n\t\tthis.render = new EPUBJS.Render[renderMethod]();\n\t} else {\n\t\tconsole.error(\"Not a Valid Rendering Method\");\n\t}\n\n\t// Listen for load events\n\tthis.render.on(\"render:loaded\", this.loaded.bind(this));\n\n\t// Cached for replacement urls from storage\n\tthis.caches = {};\n\n\t// Blank Cfi for Parsing\n\tthis.epubcfi = new EPUBJS.EpubCFI();\n\n\tthis.spreads = true;\n\tthis.isForcedSingle = false;\n\tthis.resized = this.onResized.bind(this);\n\n\tthis.layoutSettings = {};\n\n\tthis.hidden = hidden || false;\n\t//-- Adds Hook methods to the Book prototype\n\t//   Hooks will all return before triggering the callback.\n\tEPUBJS.Hooks.mixin(this);\n\t//-- Get pre-registered hooks for events\n\tthis.getHooks(\"beforeChapterDisplay\");\n\n\t//-- Queue up page changes if page map isn't ready\n\tthis._q = EPUBJS.core.queue(this);\n\n\tthis._moving = false;\n\n};\n\n//-- Renderer events for listening\nEPUBJS.Renderer.prototype.Events = [\n\t\"renderer:keydown\",\n\t\"renderer:keyup\",\n\t\"renderer:keypressed\",\n\t\"renderer:mouseup\",\n\t\"renderer:mousedown\",\n\t\"renderer:click\",\n\t\"renderer:touchstart\",\n\t\"renderer:touchend\",\n\t\"renderer:selected\",\n\t\"renderer:chapterUnload\",\n\t\"renderer:chapterUnloaded\",\n\t\"renderer:chapterDisplayed\",\n\t\"renderer:locationChanged\",\n\t\"renderer:visibleLocationChanged\",\n\t\"renderer:visibleRangeChanged\",\n\t\"renderer:resized\",\n\t\"renderer:spreads\",\n\t\"renderer:beforeResize\"\n];\n\n/**\n* Creates an element to render to.\n* Resizes to passed width and height or to the elements size\n*/\nEPUBJS.Renderer.prototype.initialize = function(element, width, height){\n\tthis.container = element;\n\tthis.element = this.render.create();\n\n\tthis.initWidth = width;\n\tthis.initHeight = height;\n\n\tthis.width = width || this.container.clientWidth;\n\tthis.height = height || this.container.clientHeight;\n\n\tthis.container.appendChild(this.element);\n\n\tif(width && height){\n\t\tthis.render.resize(this.width, this.height);\n\t} else {\n\t\tthis.render.resize('100%', '100%');\n\t}\n\n\tdocument.addEventListener(\"orientationchange\", this.onResized.bind(this));\n};\n\n/**\n* Display a chapter\n* Takes: chapter object, global layout settings\n* Returns: Promise with passed Renderer after pages has loaded\n*/\nEPUBJS.Renderer.prototype.displayChapter = function(chapter, globalLayout){\n\tvar store = false;\n\tif(this._moving) {\n\t\tconsole.warning(\"Rendering In Progress\");\n        var deferred = new RSVP.defer();\n        deferred.reject({\n            message : \"Rendering In Progress\",\n            stack : new Error().stack\n        });\n\t\treturn deferred.promise;\n\t}\n\tthis._moving = true;\n\t// Get the url string from the chapter (may be from storage)\n\treturn chapter.render().\n\t\tthen(function(contents) {\n\n\t\t\t// Unload the previous chapter listener\n\t\t\tif(this.currentChapter) {\n\t\t\t\tthis.trigger(\"renderer:chapterUnload\");\n\t\t\t\tthis.currentChapter.unload(); // Remove stored blobs\n\n\t\t\t\tif(this.render.window){\n\t\t\t\t\tthis.render.window.removeEventListener(\"resize\", this.resized);\n\t\t\t\t}\n\n\t\t\t\tthis.removeEventListeners();\n\t\t\t\tthis.removeSelectionListeners();\n\t\t\t\tthis.trigger(\"renderer:chapterUnloaded\");\n\t\t\t\tthis.contents = null;\n\t\t\t\tthis.doc = null;\n\t\t\t\tthis.pageMap = null;\n\t\t\t}\n\n\t\t\tthis.currentChapter = chapter;\n\n\t\t\tthis.chapterPos = 1;\n\n\t\t\tthis.currentChapterCfiBase = chapter.cfiBase;\n\n\t\t\tthis.layoutSettings = this.reconcileLayoutSettings(globalLayout, chapter.properties);\n\n\t\t\treturn this.load(contents, chapter.href);\n\n\t\t}.bind(this), function() {\n            this._moving = false;\n        }.bind(this));\n\n};\n\n/**\n* Loads a url (string) and renders it,\n* attaching event listeners and triggering hooks.\n* Returns: Promise with the rendered contents.\n*/\n\nEPUBJS.Renderer.prototype.load = function(contents, url){\n\tvar deferred = new RSVP.defer();\n\tvar loaded;\n\n\t// Switch to the required layout method for the settings\n\tthis.layoutMethod = this.determineLayout(this.layoutSettings);\n\tthis.layout = new EPUBJS.Layout[this.layoutMethod]();\n\n\tthis.visible(false);\n\n\tthis.render.load(contents, url).then(function(contents) {\n\n\t\t// Duck-type fixed layout books.\n\t\tif (EPUBJS.Layout.isFixedLayout(contents)) {\n\t\t\tthis.layoutSettings.layout = \"pre-paginated\";\n\t\t\tthis.layoutMethod = this.determineLayout(this.layoutSettings);\n\t\t\tthis.layout = new EPUBJS.Layout[this.layoutMethod]();\n\t\t}\n\t\tthis.render.setLayout(this.layoutSettings.layout);\n\n\t\t// HTML element must have direction set if RTL or columnns will\n\t\t// not be in the correct direction in Firefox\n\t\t// Firefox also need the html element to be position right\n\t\tif(this.render.direction == \"rtl\" && this.render.docEl.dir != \"rtl\"){\n\t\t\tthis.render.docEl.dir = \"rtl\";\n\t\t\tif (this.render.layout !== \"pre-paginated\") {\n\t\t\t\tthis.render.docEl.style.position = \"absolute\";\n\t\t\t\tthis.render.docEl.style.right = \"0\";\n\t\t\t}\n\t\t}\n\n\t\tthis.afterLoad(contents);\n\n\t\t//-- Trigger registered hooks before displaying\n\t\tthis.beforeDisplay(function(){\n\n\t\t\tthis.afterDisplay();\n\n\t\t\tthis.visible(true);\n\n\n\t\t\tdeferred.resolve(this); //-- why does this return the renderer?\n\n\t\t}.bind(this));\n\n\t}.bind(this));\n\n\treturn deferred.promise;\n};\n\nEPUBJS.Renderer.prototype.afterLoad = function(contents) {\n\tvar formated;\n\t// this.currentChapter.setDocument(this.render.document);\n\tthis.contents = contents;\n\tthis.doc = this.render.document;\n\n\t// Format the contents using the current layout method\n\tthis.formated = this.layout.format(contents, this.render.width, this.render.height, this.gap);\n\tthis.render.setPageDimensions(this.formated.pageWidth, this.formated.pageHeight);\n\n\t// window.addEventListener(\"orientationchange\", this.onResized.bind(this), false);\n\tif(!this.initWidth && !this.initHeight){\n\t\tthis.render.window.addEventListener(\"resize\", this.resized, false);\n\t}\n\n\tthis.addEventListeners();\n\tthis.addSelectionListeners();\n\n};\n\nEPUBJS.Renderer.prototype.afterDisplay = function(contents) {\n\n\tvar pages = this.layout.calculatePages();\n\tvar msg = this.currentChapter;\n\tvar queued = this._q.length();\n\tthis._moving = false;\n\n\tthis.updatePages(pages);\n\n\tthis.visibleRangeCfi = this.getVisibleRangeCfi();\n\tthis.currentLocationCfi = this.visibleRangeCfi.start;\n\n\tif(queued === 0) {\n\t\tthis.trigger(\"renderer:locationChanged\", this.currentLocationCfi);\n\t\tthis.trigger(\"renderer:visibleRangeChanged\", this.visibleRangeCfi);\n\t}\n\n\tmsg.cfi = this.currentLocationCfi; //TODO: why is this cfi passed to chapterDisplayed\n\tthis.trigger(\"renderer:chapterDisplayed\", msg);\n\n};\n\nEPUBJS.Renderer.prototype.loaded = function(url){\n\tthis.trigger(\"render:loaded\", url);\n\t// var uri = EPUBJS.core.uri(url);\n\t// var relative = uri.path.replace(book.bookUrl, '');\n\t// console.log(url, uri, relative);\n};\n\n/**\n* Reconciles the current chapters layout properies with\n* the global layout properities.\n* Takes: global layout settings object, chapter properties string\n* Returns: Object with layout properties\n*/\nEPUBJS.Renderer.prototype.reconcileLayoutSettings = function(global, chapter){\n\tvar settings = {};\n\n\t//-- Get the global defaults\n\tfor (var attr in global) {\n\t\tif (global.hasOwnProperty(attr)){\n\t\t\tsettings[attr] = global[attr];\n\t\t}\n\t}\n\t//-- Get the chapter's display type\n\tchapter.forEach(function(prop){\n\t\tvar rendition = prop.replace(\"rendition:\", '');\n\t\tvar split = rendition.indexOf(\"-\");\n\t\tvar property, value;\n\n\t\tif(split != -1){\n\t\t\tproperty = rendition.slice(0, split);\n\t\t\tvalue = rendition.slice(split+1);\n\n\t\t\tsettings[property] = value;\n\t\t}\n\t});\n return settings;\n};\n\n/**\n* Uses the settings to determine which Layout Method is needed\n* Triggers events based on the method choosen\n* Takes: Layout settings object\n* Returns: String of appropriate for EPUBJS.Layout function\n*/\nEPUBJS.Renderer.prototype.determineLayout = function(settings){\n\t// Default is layout: reflowable & spread: auto\n\tvar spreads = this.determineSpreads(this.minSpreadWidth);\n\tvar layoutMethod = spreads ? \"ReflowableSpreads\" : \"Reflowable\";\n\tvar scroll = false;\n\n\tif(settings.layout === \"pre-paginated\") {\n\t\tlayoutMethod = \"Fixed\";\n\t\tscroll = true;\n\t\tspreads = false;\n\t}\n\n\tif(settings.layout === \"reflowable\" && settings.spread === \"none\") {\n\t\tlayoutMethod = \"Reflowable\";\n\t\tscroll = false;\n\t\tspreads = false;\n\t}\n\n\tif(settings.layout === \"reflowable\" && settings.spread === \"both\") {\n\t\tlayoutMethod = \"ReflowableSpreads\";\n\t\tscroll = false;\n\t\tspreads = true;\n\t}\n\n\tthis.spreads = spreads;\n\tthis.render.scroll(scroll);\n\tthis.trigger(\"renderer:spreads\", spreads);\n\treturn layoutMethod;\n};\n\n// Shortcut to trigger the hook before displaying the chapter\nEPUBJS.Renderer.prototype.beforeDisplay = function(callback, renderer){\n\tthis.triggerHooks(\"beforeChapterDisplay\", callback, this);\n};\n\n// Update the renderer with the information passed by the layout\nEPUBJS.Renderer.prototype.updatePages = function(layout){\n\tthis.pageMap = this.mapPage();\n\t// this.displayedPages = layout.displayedPages;\n\n\tif (this.spreads) {\n\t\tthis.displayedPages = Math.ceil(this.pageMap.length / 2);\n\t} else {\n\t\tthis.displayedPages = this.pageMap.length;\n\t}\n\n\tthis.currentChapter.pages = this.pageMap.length;\n\n\tthis._q.flush();\n};\n\n// Apply the layout again and jump back to the previous cfi position\nEPUBJS.Renderer.prototype.reformat = function(){\n\tvar renderer = this;\n\tvar formated, pages;\n\tvar spreads;\n\n\tif(!this.contents) return;\n\n\tspreads = this.determineSpreads(this.minSpreadWidth);\n\n\t// Only re-layout if the spreads have switched\n\tif(spreads != this.spreads){\n\t\tthis.spreads = spreads;\n\t\tthis.layoutMethod = this.determineLayout(this.layoutSettings);\n\t\tthis.layout = new EPUBJS.Layout[this.layoutMethod]();\n\t}\n\n\t// Reset pages\n\tthis.chapterPos = 1;\n\n\tthis.render.page(this.chapterPos);\n\t// Give the css styles time to update\n\t// clearTimeout(this.timeoutTillCfi);\n\t// this.timeoutTillCfi = setTimeout(function(){\n\trenderer.formated = renderer.layout.format(renderer.render.docEl, renderer.render.width, renderer.render.height, renderer.gap);\n\trenderer.render.setPageDimensions(renderer.formated.pageWidth, renderer.formated.pageHeight);\n\n\tpages = renderer.layout.calculatePages();\n\trenderer.updatePages(pages);\n\n\t//-- Go to current page after formating\n\tif(renderer.currentLocationCfi){\n\t\trenderer.gotoCfi(renderer.currentLocationCfi);\n\t}\n\t\t// renderer.timeoutTillCfi = null;\n\n};\n\n// Hide and show the render's container .\nEPUBJS.Renderer.prototype.visible = function(bool){\n\tif(typeof(bool) === \"undefined\") {\n\t\treturn this.element.style.visibility;\n\t}\n\n\tif(bool === true && !this.hidden){\n\t\tthis.element.style.visibility = \"visible\";\n\t}else if(bool === false){\n\t\tthis.element.style.visibility = \"hidden\";\n\t}\n};\n\n// Remove the render element and clean up listeners\nEPUBJS.Renderer.prototype.remove = function() {\n\tif(this.render.window) {\n\t\tthis.render.unload();\n\t\tthis.render.window.removeEventListener(\"resize\", this.resized);\n\t\tthis.removeEventListeners();\n\t\tthis.removeSelectionListeners();\n\t}\n\t\n\t// clean container content \n\tthis.container.innerHtml = \"\";\n//\tthis.container.removeChild(this.element);\n};\n\n//-- STYLES\n\nEPUBJS.Renderer.prototype.applyStyles = function(styles) {\n\tfor (var style in styles) {\n\t\tthis.render.setStyle(style, styles[style]);\n\t}\n};\n\nEPUBJS.Renderer.prototype.setStyle = function(style, val, prefixed){\n\tthis.render.setStyle(style, val, prefixed);\n};\n\nEPUBJS.Renderer.prototype.removeStyle = function(style){\n\tthis.render.removeStyle(style);\n};\n\n//-- HEAD TAGS\nEPUBJS.Renderer.prototype.applyHeadTags = function(headTags) {\n\tfor ( var headTag in headTags ) {\n\t\tthis.render.addHeadTag(headTag, headTags[headTag]);\n\t}\n};\n\n//-- NAVIGATION\n\nEPUBJS.Renderer.prototype.page = function(pg){\n\tif(!this.pageMap) {\n\t\tconsole.warn(\"pageMap not set, queuing\");\n\t\tthis._q.enqueue(\"page\", arguments);\n\t\treturn true;\n\t}\n\n\tif(pg >= 1 && pg <= this.displayedPages){\n\t\tthis.chapterPos = pg;\n\n\t\tthis.render.page(pg);\n\t\tthis.visibleRangeCfi = this.getVisibleRangeCfi();\n\t\tthis.currentLocationCfi = this.visibleRangeCfi.start;\n\t\tthis.trigger(\"renderer:locationChanged\", this.currentLocationCfi);\n\t\tthis.trigger(\"renderer:visibleRangeChanged\", this.visibleRangeCfi);\n\n\t\treturn true;\n\t}\n\t//-- Return false if page is greater than the total\n\treturn false;\n};\n\n// Short cut to find next page's cfi starting at the last visible element\n/*\nEPUBJS.Renderer.prototype.nextPage = function(){\n\tvar pg = this.chapterPos + 1;\n\tif(pg <= this.displayedPages){\n\t\tthis.chapterPos = pg;\n\n\t\tthis.render.page(pg);\n\n\t\tthis.currentLocationCfi = this.getPageCfi(this.visibileEl);\n\t\tthis.trigger(\"renderer:locationChanged\", this.currentLocationCfi);\n\n\t\treturn true;\n\t}\n\t//-- Return false if page is greater than the total\n\treturn false;\n};\n*/\nEPUBJS.Renderer.prototype.nextPage = function(){\n\treturn this.page(this.chapterPos + 1);\n};\n\nEPUBJS.Renderer.prototype.prevPage = function(){\n\treturn this.page(this.chapterPos - 1);\n};\n\n//-- Show the page containing an Element\nEPUBJS.Renderer.prototype.pageByElement = function(el){\n\tvar pg;\n\tif(!el) return;\n\n\tpg = this.render.getPageNumberByElement(el);\n\tthis.page(pg);\n};\n\n// Jump to the last page of the chapter\nEPUBJS.Renderer.prototype.lastPage = function(){\n\tif(this._moving) {\n\t\treturn this._q.enqueue(\"lastPage\", arguments);\n\t}\n\n\tthis.page(this.displayedPages);\n};\n\n// Jump to the first page of the chapter\nEPUBJS.Renderer.prototype.firstPage = function(){\n\tif(this._moving) {\n\t\treturn this._q.enqueue(\"firstPage\", arguments);\n\t}\n\n\tthis.page(1);\n};\n\n//-- Find a section by fragement id\nEPUBJS.Renderer.prototype.section = function(fragment){\n\tvar el = this.doc.getElementById(fragment);\n\n\tif(el){\n\t\tthis.pageByElement(el);\n\t}\n\n};\n\nEPUBJS.Renderer.prototype.firstElementisTextNode = function(node) {\n\tvar children = node.childNodes;\n\tvar leng = children.length;\n\n\tif(leng &&\n\t\tchildren[0] && // First Child\n\t\tchildren[0].nodeType === 3 && // This is a textNodes\n\t\tchildren[0].textContent.trim().length) { // With non whitespace or return characters\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nEPUBJS.Renderer.prototype.isGoodNode = function(node) {\n\tvar embeddedElements = [\"audio\", \"canvas\", \"embed\", \"iframe\", \"img\", \"math\", \"object\", \"svg\", \"video\"];\n\tif (embeddedElements.indexOf(node.tagName.toLowerCase()) !== -1) {\n\t\t// Embedded elements usually do not have a text node as first element, but are also good nodes\n\t\treturn true;\n\t}\n\treturn this.firstElementisTextNode(node);\n};\n\n// Walk the node tree from a start element to next visible element\nEPUBJS.Renderer.prototype.walk = function(node, x, y) {\n\tvar r, children, leng,\n\t\tstartNode = node,\n\t\tprevNode,\n\t\tstack = [startNode];\n\n\tvar STOP = 10000, ITER=0;\n\n\twhile(!r && stack.length) {\n\t\tnode = stack.shift();\n\t\tif( this.containsPoint(node, x, y) && this.isGoodNode(node)) {\n\t\t\tr = node;\n\t\t}\n\n\t\tif(!r && node && node.childElementCount > 0){\n\t\t\tchildren = node.children;\n\t\t\tif (children && children.length) {\n\t\t\t\tleng = children.length ? children.length : 0;\n\t\t\t} else {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tfor (var i = leng-1; i >= 0; i--) {\n\t\t\t\tif(children[i] != prevNode) stack.unshift(children[i]);\n\t\t\t}\n\t\t}\n\n\t\tif(!r && stack.length === 0 && startNode && startNode.parentNode !== null){\n\t\t\tstack.push(startNode.parentNode);\n\t\t\tprevNode = startNode;\n\t\t\tstartNode = startNode.parentNode;\n\t\t}\n\n\n\t\tITER++;\n\t\tif(ITER > STOP) {\n\t\t\tconsole.error(\"ENDLESS LOOP\");\n\t\t\tbreak;\n\t\t}\n\n\t}\n\n\treturn r;\n};\n\n// Checks if an element is on the screen\nEPUBJS.Renderer.prototype.containsPoint = function(el, x, y){\n\tvar rect;\n\tvar left;\n\tif(el && typeof el.getBoundingClientRect === 'function'){\n\t\trect = el.getBoundingClientRect();\n\t\t// console.log(el, rect, x, y);\n\n\t\tif( rect.width !== 0 &&\n\t\t\t\trect.height !== 0 && // Element not visible\n\t\t\t\trect.left >= x &&\n\t\t\t\tx <= rect.left + rect.width) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nEPUBJS.Renderer.prototype.textSprint = function(root, func) {\n\tvar filterEmpty = function(node){\n\t\tif ( ! /^\\s*$/.test(node.data) ) {\n\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t} else {\n\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t}\n\t};\n\tvar treeWalker;\n\tvar node;\n\n\ttry {\n\t\ttreeWalker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, {\n\t\t\tacceptNode: filterEmpty\n\t\t}, false);\n\t\twhile ((node = treeWalker.nextNode())) {\n\t\t\tfunc(node);\n\t\t}\n\t} catch (e) {\n\t\t// IE doesn't accept the object, just wants a function\n\t\t// https://msdn.microsoft.com/en-us/library/ff974820(v=vs.85).aspx\n\t\ttreeWalker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, filterEmpty, false);\n\t\twhile ((node = treeWalker.nextNode())) {\n\t\t\tfunc(node);\n\t\t}\n\t}\n\n\n\n};\n\nEPUBJS.Renderer.prototype.sprint = function(root, func) {\n\tvar treeWalker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, null, false);\n\tvar node;\n\twhile ((node = treeWalker.nextNode())) {\n\t\tfunc(node);\n\t}\n\n};\n\nEPUBJS.Renderer.prototype.mapPage = function(){\n\tvar renderer = this;\n\tvar map = [];\n\tvar root = this.render.getBaseElement();\n\tvar page = 1;\n\tvar width = this.layout.colWidth + this.layout.gap;\n\tvar offset = this.formated.pageWidth * (this.chapterPos-1);\n\tvar limit = (width * page) - offset;// (width * page) - offset;\n\tvar elLimit = 0;\n\tvar prevRange;\n\tvar prevRanges;\n\tvar cfi;\n\tvar lastChildren = null;\n\tvar prevElement;\n\tvar startRange, endRange;\n\tvar startCfi, endCfi;\n\tvar check = function(node) {\n\t\tvar elPos;\n\t\tvar elRange;\n\t\tvar found;\n\t\tif (node.nodeType == Node.TEXT_NODE) {\n\n\t\t\telRange = document.createRange();\n\t\t\telRange.selectNodeContents(node);\n\t\t\telPos = elRange.getBoundingClientRect();\n\n\t\t\tif(!elPos || (elPos.width === 0 && elPos.height === 0)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//-- Element starts new Col\n\t\t\tif(elPos.left > elLimit) {\n\t\t\t\tfound = checkText(node);\n\t\t\t}\n\n\t\t\t//-- Element Spans new Col\n\t\t\tif(elPos.right > elLimit) {\n\t\t\t\tfound = checkText(node);\n\t\t\t}\n\n\t\t\tprevElement = node;\n\n\t\t\tif (found) {\n\t\t\t\tprevRange = null;\n\t\t\t}\n\t\t}\n\n\t};\n\tvar checkText = function(node){\n\t\tvar result;\n\t\tvar ranges = renderer.splitTextNodeIntoWordsRanges(node);\n\n\t\tranges.forEach(function(range){\n\t\t\tvar pos = range.getBoundingClientRect();\n\n\t\t\tif(!pos || (pos.width === 0 && pos.height === 0)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(pos.left + pos.width < limit) {\n\t\t\t\tif(!map[page-1]){\n\t\t\t\t\trange.collapse(true);\n\t\t\t\t\tcfi = renderer.currentChapter.cfiFromRange(range);\n\t\t\t\t\t// map[page-1].start = cfi;\n\t\t\t\t\tresult = map.push({ start: cfi, end: null });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Previous Range is null since we already found our last map pair\n\t\t\t\t// Use that last walked textNode\n\t\t\t\tif(!prevRange && prevElement) {\n\t\t\t\t\tprevRanges = renderer.splitTextNodeIntoWordsRanges(prevElement);\n\t\t\t\t\tprevRange = prevRanges[prevRanges.length-1];\n\t\t\t\t}\n\n\t\t\t\tif(prevRange && map.length){\n\t\t\t\t\tprevRange.collapse(false);\n\t\t\t\t\tcfi = renderer.currentChapter.cfiFromRange(prevRange);\n\t\t\t\t\tif (map[map.length-1]) {\n\t\t\t\t\t\tmap[map.length-1].end = cfi;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trange.collapse(true);\n\t\t\t\tcfi = renderer.currentChapter.cfiFromRange(range);\n\t\t\t\tresult = map.push({\n\t\t\t\t\t\tstart: cfi,\n\t\t\t\t\t\tend: null\n\t\t\t\t});\n\n\t\t\t\tpage += 1;\n\t\t\t\tlimit = (width * page) - offset;\n\t\t\t\telLimit = limit;\n\t\t\t}\n\n\t\t\tprevRange = range;\n\t\t});\n\n\t\treturn result;\n\t};\n\tvar docEl = this.render.getDocumentElement();\n\tvar dir = docEl.dir;\n\n\t// Set back to ltr before sprinting to get correct order\n\tif(dir == \"rtl\") {\n\t\tdocEl.dir = \"ltr\";\n\t\tif (this.layoutSettings.layout !== \"pre-paginated\") {\n\t\t\tdocEl.style.position = \"static\";\n\t\t}\n\t}\n\n\tthis.textSprint(root, check);\n\n\t// Reset back to previous RTL settings\n\tif(dir == \"rtl\") {\n\t\tdocEl.dir = dir;\n\t\tif (this.layoutSettings.layout !== \"pre-paginated\") {\n\t\t\tdocEl.style.left = \"auto\";\n\t\t\tdocEl.style.right = \"0\";\n\t\t}\n\t}\n\n\t// Check the remaining children that fit on this page\n\t// to ensure the end is correctly calculated\n\tif(!prevRange && prevElement) {\n\t\tprevRanges = renderer.splitTextNodeIntoWordsRanges(prevElement);\n\t\tprevRange = prevRanges[prevRanges.length-1];\n\t}\n\n\tif(prevRange){\n\t\tprevRange.collapse(false);\n\t\tcfi = renderer.currentChapter.cfiFromRange(prevRange);\n\t\tmap[map.length-1].end = cfi;\n\t}\n\n\t// Handle empty map\n\tif(!map.length) {\n\t\tstartRange = this.doc.createRange();\n\t\tstartRange.selectNodeContents(root);\n\t\tstartRange.collapse(true);\n\t\tstartCfi = renderer.currentChapter.cfiFromRange(startRange);\n\n\t\tendRange = this.doc.createRange();\n\t\tendRange.selectNodeContents(root);\n\t\tendRange.collapse(false);\n\t\tendCfi = renderer.currentChapter.cfiFromRange(endRange);\n\n\n\t\tmap.push({ start: startCfi, end: endCfi });\n\n\t}\n\n\t// clean up\n\tprevRange = null;\n\tprevRanges = undefined;\n\tstartRange = null;\n\tendRange = null;\n\troot = null;\n\n\treturn map;\n};\n\n\nEPUBJS.Renderer.prototype.indexOfBreakableChar = function (text, startPosition) {\n\tvar whiteCharacters = \"\\x2D\\x20\\t\\r\\n\\b\\f\";\n\t// '-' \\x2D\n\t// ' ' \\x20\n\n\tif (! startPosition) {\n\t\tstartPosition = 0;\n\t}\n\n\tfor (var i = startPosition; i < text.length; i++) {\n\t\tif (whiteCharacters.indexOf(text.charAt(i)) != -1) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n\n\nEPUBJS.Renderer.prototype.splitTextNodeIntoWordsRanges = function(node){\n\tvar ranges = [];\n\tvar text = node.textContent.trim();\n\tvar range;\n\tvar rect;\n\tvar list;\n\n\t// Usage of indexOf() function for space character as word delimiter\n\t// is not sufficient in case of other breakable characters like \\r\\n- etc\n\tvar pos = this.indexOfBreakableChar(text);\n\n\tif(pos === -1) {\n\t\trange = this.doc.createRange();\n\t\trange.selectNodeContents(node);\n\t\treturn [range];\n\t}\n\n\trange = this.doc.createRange();\n\trange.setStart(node, 0);\n\trange.setEnd(node, pos);\n\tranges.push(range);\n\n\t// there was a word miss in case of one letter words\n\trange = this.doc.createRange();\n\trange.setStart(node, pos+1);\n\n\twhile ( pos != -1 ) {\n\n\t\tpos = this.indexOfBreakableChar(text, pos + 1);\n\t\tif(pos > 0) {\n\n\t\t\tif(range) {\n\t\t\t\trange.setEnd(node, pos);\n\t\t\t\tranges.push(range);\n\t\t\t}\n\n\t\t\trange = this.doc.createRange();\n\t\t\trange.setStart(node, pos+1);\n\t\t}\n\t}\n\n\tif(range) {\n\t\trange.setEnd(node, text.length);\n\t\tranges.push(range);\n\t}\n\n\treturn ranges;\n};\n\nEPUBJS.Renderer.prototype.rangePosition = function(range){\n\tvar rect;\n\tvar list;\n\n\tlist = range.getClientRects();\n\n\tif(list.length) {\n\t\trect = list[0];\n\t\treturn rect;\n\t}\n\n\treturn null;\n};\n\n/*\n// Get the cfi of the current page\nEPUBJS.Renderer.prototype.getPageCfi = function(prevEl){\n\tvar range = this.doc.createRange();\n\tvar position;\n\t// TODO : this might need to take margin / padding into account?\n\tvar x = 1;//this.formated.pageWidth/2;\n\tvar y = 1;//;this.formated.pageHeight/2;\n\n\trange = this.getRange(x, y);\n\n\t// var test = this.doc.defaultView.getSelection();\n\t// var r = this.doc.createRange();\n\t// test.removeAllRanges();\n\t// r.setStart(range.startContainer, range.startOffset);\n\t// r.setEnd(range.startContainer, range.startOffset + 1);\n\t// test.addRange(r);\n\n\treturn this.currentChapter.cfiFromRange(range);\n};\n*/\n\n// Get the cfi of the current page\nEPUBJS.Renderer.prototype.getPageCfi = function(){\n\tvar pg = (this.chapterPos * 2)-1;\n\treturn this.pageMap[pg].start;\n};\n\nEPUBJS.Renderer.prototype.getRange = function(x, y, forceElement){\n\tvar range = this.doc.createRange();\n\tvar position;\n\tforceElement = true; // temp override\n\tif(typeof document.caretPositionFromPoint !== \"undefined\" && !forceElement){\n\t\tposition = this.doc.caretPositionFromPoint(x, y);\n\t\trange.setStart(position.offsetNode, position.offset);\n\t} else if(typeof document.caretRangeFromPoint !== \"undefined\" && !forceElement){\n\t\trange = this.doc.caretRangeFromPoint(x, y);\n\t} else {\n\t\tthis.visibileEl = this.findElementAfter(x, y);\n\t\trange.setStart(this.visibileEl, 1);\n\t}\n\n\t// var test = this.doc.defaultView.getSelection();\n\t// var r = this.doc.createRange();\n\t// test.removeAllRanges();\n\t// r.setStart(range.startContainer, range.startOffset);\n\t// r.setEnd(range.startContainer, range.startOffset + 1);\n\t// test.addRange(r);\n\treturn range;\n};\n\n/*\nEPUBJS.Renderer.prototype.getVisibleRangeCfi = function(prevEl){\n\tvar startX = 0;\n\tvar startY = 0;\n\tvar endX = this.width-1;\n\tvar endY = this.height-1;\n\tvar startRange = this.getRange(startX, startY);\n\tvar endRange = this.getRange(endX, endY); //fix if carret not avail\n\tvar startCfi = this.currentChapter.cfiFromRange(startRange);\n\tvar endCfi;\n\tif(endRange) {\n\t\tendCfi = this.currentChapter.cfiFromRange(endRange);\n\t}\n\n\treturn {\n\t\tstart: startCfi,\n\t\tend: endCfi || false\n\t};\n};\n*/\n\nEPUBJS.Renderer.prototype.pagesInCurrentChapter = function() {\n\tvar pgs;\n\tvar length;\n\n\tif(!this.pageMap) {\n\t\tconsole.warn(\"page map not loaded\");\n\t\treturn false;\n\t}\n\n\tlength = this.pageMap.length;\n\n\t// if(this.spreads){\n\t// \tpgs = Math.ceil(length / 2);\n\t// } else {\n\t// \tpgs = length;\n\t// }\n\n\treturn length;\n};\n\nEPUBJS.Renderer.prototype.currentRenderedPage = function(){\n\tvar pg;\n\n\tif(!this.pageMap) {\n\t\tconsole.warn(\"page map not loaded\");\n\t\treturn false;\n\t}\n\n\tif (this.spreads && this.pageMap.length > 1) {\n\t\tpg = (this.chapterPos*2) - 1;\n\t} else {\n\t\tpg = this.chapterPos;\n\t}\n\n\treturn pg;\n};\n\nEPUBJS.Renderer.prototype.getRenderedPagesLeft = function(){\n\tvar pg;\n\tvar lastPage;\n\tvar pagesLeft;\n\n\tif(!this.pageMap) {\n\t\tconsole.warn(\"page map not loaded\");\n\t\treturn false;\n\t}\n\n\tlastPage = this.pageMap.length;\n\n\tif (this.spreads) {\n\t\tpg = (this.chapterPos*2) - 1;\n\t} else {\n\t\tpg = this.chapterPos;\n\t}\n\n\tpagesLeft = lastPage - pg;\n\treturn pagesLeft;\n\n};\n\nEPUBJS.Renderer.prototype.getVisibleRangeCfi = function(){\n\tvar pg;\n\tvar startRange, endRange;\n\n\tif(!this.pageMap) {\n\t\tconsole.warn(\"page map not loaded\");\n\t\treturn false;\n\t}\n\n\tif (this.spreads) {\n\t\tpg = this.chapterPos*2;\n\t\tstartRange = this.pageMap[pg-2];\n\t\tendRange = startRange;\n\n\t\tif(this.pageMap.length > 1 && this.pageMap.length > pg-1) {\n\t\t\tendRange = this.pageMap[pg-1];\n\t\t}\n\t} else {\n\t\tpg = this.chapterPos;\n\t\tstartRange = this.pageMap[pg-1];\n\t\tendRange = startRange;\n\t}\n\n\tif(!startRange) {\n\t\tconsole.warn(\"page range miss:\", pg, this.pageMap);\n\t\tstartRange = this.pageMap[this.pageMap.length-1];\n\t\tendRange = startRange;\n\t}\n\n\treturn {\n\t\tstart: startRange.start,\n\t\tend: endRange.end\n\t};\n};\n\n// Goto a cfi position in the current chapter\nEPUBJS.Renderer.prototype.gotoCfi = function(cfi){\n\tvar pg;\n\tvar marker;\n\tvar range;\n\n\tif(this._moving){\n\t\treturn this._q.enqueue(\"gotoCfi\", arguments);\n\t}\n\n\tif(EPUBJS.core.isString(cfi)){\n\t\tcfi = this.epubcfi.parse(cfi);\n\t}\n\n\tif(typeof document.evaluate === 'undefined') {\n\t\tmarker = this.epubcfi.addMarker(cfi, this.doc);\n\t\tif(marker) {\n\t\t\tpg = this.render.getPageNumberByElement(marker);\n\t\t\t// Must Clean up Marker before going to page\n\t\t\tthis.epubcfi.removeMarker(marker, this.doc);\n\t\t\tthis.page(pg);\n\t\t}\n\t} else {\n\t\trange = this.epubcfi.generateRangeFromCfi(cfi, this.doc);\n\t\tif(range) {\n\t\t\t// jaroslaw.bielski@7bulls.com\n\t\t\t// It seems that sometimes getBoundingClientRect() returns null for first page CFI in chapter.\n\t\t\t// It is always reproductible if few consecutive chapters have only one page.\n\t\t\t// NOTE: This is only workaround and the issue needs an deeper investigation.\n\t\t\t// NOTE: Observed on Android 4.2.1 using WebView widget as HTML renderer (Asus TF300T).\n\t\t\tvar rect = range.getBoundingClientRect();\n\t\t\tif (rect) {\n\t\t\t\tpg = this.render.getPageNumberByRect(rect);\n\n\t\t\t} else {\n\t\t\t\t// Goto first page in chapter\n\t\t\t\tpg = 1;\n\t\t\t}\n\n\t\t\tthis.page(pg);\n\n\t\t\t// Reset the current location cfi to requested cfi\n\t\t\tthis.currentLocationCfi = cfi.str;\n\t\t} else {\n\t\t\t// Failed to find a range, go to first page\n\t\t\tthis.page(1);\n\t\t}\n\t}\n};\n\n//  Walk nodes until a visible element is found\nEPUBJS.Renderer.prototype.findFirstVisible = function(startEl){\n\tvar el = startEl || this.render.getBaseElement();\n\tvar\tfound;\n\t// kgolunski@7bulls.com\n\t// Looks like an old API usage\n\t// Set x and y as 0 to fullfill walk method API.\n\tfound = this.walk(el, 0, 0);\n\n\tif(found) {\n\t\treturn found;\n\t}else{\n\t\treturn startEl;\n\t}\n\n};\n// TODO: remove me - unsused\nEPUBJS.Renderer.prototype.findElementAfter = function(x, y, startEl){\n\tvar el = startEl || this.render.getBaseElement();\n\tvar\tfound;\n\tfound = this.walk(el, x, y);\n\tif(found) {\n\t\treturn found;\n\t}else{\n\t\treturn el;\n\t}\n\n};\n\n/*\nEPUBJS.Renderer.prototype.route = function(hash, callback){\n\tvar location = window.location.hash.replace('#/', '');\n\tif(this.useHash && location.length && location != this.prevLocation){\n\t\tthis.show(location, callback);\n\t\tthis.prevLocation = location;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nEPUBJS.Renderer.prototype.hideHashChanges = function(){\n\tthis.useHash = false;\n}\n\n*/\n\nEPUBJS.Renderer.prototype.resize = function(width, height, setSize){\n\tvar spreads;\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tif(setSize !== false) {\n\t\tthis.render.resize(this.width, this.height);\n\t}\n\n\n\n\tif(this.contents){\n\t\tthis.reformat();\n\t}\n\n\tthis.trigger(\"renderer:resized\", {\n\t\twidth: this.width,\n\t\theight: this.height\n\t});\n};\n\n//-- Listeners for events in the frame\n\nEPUBJS.Renderer.prototype.onResized = function(e) {\n\tthis.trigger('renderer:beforeResize');\n\t\n\tvar width = this.container.clientWidth;\n\tvar height = this.container.clientHeight;\n\n\tthis.resize(width, height, false);\n};\n\nEPUBJS.Renderer.prototype.addEventListeners = function(){\n\tif(!this.render.document) {\n\t\treturn;\n\t}\n\tthis.listenedEvents.forEach(function(eventName){\n\t\tthis.render.document.addEventListener(eventName, this.triggerEvent.bind(this), false);\n\t}, this);\n\n};\n\nEPUBJS.Renderer.prototype.removeEventListeners = function(){\n\tif(!this.render.document) {\n\t\treturn;\n\t}\n\tthis.listenedEvents.forEach(function(eventName){\n\t\tthis.render.document.removeEventListener(eventName, this.triggerEvent, false);\n\t}, this);\n\n};\n\n// Pass browser events\nEPUBJS.Renderer.prototype.triggerEvent = function(e){\n\tthis.trigger(\"renderer:\"+e.type, e);\n};\n\nEPUBJS.Renderer.prototype.addSelectionListeners = function(){\n\tthis.render.document.addEventListener(\"selectionchange\", this.onSelectionChange.bind(this), false);\n};\n\nEPUBJS.Renderer.prototype.removeSelectionListeners = function(){\n\tif(!this.render.document) {\n\t\treturn;\n\t}\n\tthis.doc.removeEventListener(\"selectionchange\", this.onSelectionChange, false);\n};\n\nEPUBJS.Renderer.prototype.onSelectionChange = function(e){\n\tif (this.selectionEndTimeout) {\n\t\tclearTimeout(this.selectionEndTimeout);\n\t}\n\tthis.selectionEndTimeout = setTimeout(function() {\n\t\tthis.selectedRange = this.render.window.getSelection();\n\t\tthis.trigger(\"renderer:selected\", this.selectedRange);\n\t}.bind(this), 500);\n};\n\n\n//-- Spreads\n\nEPUBJS.Renderer.prototype.setMinSpreadWidth = function(width){\n\tthis.minSpreadWidth = width;\n\tthis.spreads = this.determineSpreads(width);\n};\n\nEPUBJS.Renderer.prototype.determineSpreads = function(cutoff){\n\tif(this.isForcedSingle || !cutoff || this.width < cutoff) {\n\t\treturn false; //-- Single Page\n\t}else{\n\t\treturn true; //-- Double Page\n\t}\n};\n\nEPUBJS.Renderer.prototype.forceSingle = function(bool){\n\tif(bool) {\n\t\tthis.isForcedSingle = true;\n\t\t// this.spreads = false;\n\t} else {\n\t\tthis.isForcedSingle = false;\n\t\t// this.spreads = this.determineSpreads(this.minSpreadWidth);\n\t}\n};\n\nEPUBJS.Renderer.prototype.setGap = function(gap){\n\tthis.gap = gap; //-- False == auto gap\n};\n\nEPUBJS.Renderer.prototype.setDirection = function(direction){\n\tthis.direction = direction;\n\tthis.render.setDirection(this.direction);\n};\n\n//-- Content Replacements\n\nEPUBJS.Renderer.prototype.replace = function(query, func, finished, progress){\n\tvar items = this.contents.querySelectorAll(query),\n\t\tresources = Array.prototype.slice.call(items),\n\t\tcount = resources.length;\n\n\n\tif(count === 0) {\n\t\tfinished(false);\n\t\treturn;\n\t}\n\tresources.forEach(function(item){\n\t\tvar called = false;\n\t\tvar after = function(result, full){\n\t\t\tif(called === false) {\n\t\t\t\tcount--;\n\t\t\t\tif(progress) progress(result, full, count);\n\t\t\t\tif(count <= 0 && finished) finished(true);\n\t\t\t\tcalled = true;\n\t\t\t}\n\t\t};\n\n\t\tfunc(item, after);\n\n\t}.bind(this));\n\n};\n\n//-- Enable binding events to Renderer\nRSVP.EventTarget.mixin(EPUBJS.Renderer.prototype);\n\nvar EPUBJS = EPUBJS || {};\nEPUBJS.replace = {};\n\n//-- Replaces the relative links within the book to use our internal page changer\nEPUBJS.replace.hrefs = function(callback, renderer){\n\tvar book = this;\n\tvar replacments = function(link, done){\n\t\tvar href = link.getAttribute(\"href\"),\n\t\t\t\tisRelative = href.search(\"://\"),\n\t\t\t\tdirectory,\n\t\t\t\trelative,\n\t\t\t\tlocation,\n\t\t\t\tbase,\n\t\t\t\turi,\n\t\t\t\turl;\n\n\t\tif(isRelative != -1){\n\n\t\t\tlink.setAttribute(\"target\", \"_blank\");\n\n\t\t}else{\n\t\t\t// Links may need to be resolved, such as ../chp1.xhtml\n\t\t\tbase = renderer.render.docEl.querySelector('base');\n\t\t\turl = base.getAttribute(\"href\");\n\t\t\turi = EPUBJS.core.uri(url);\n\t\t\tdirectory = uri.directory;\n\n\t\t\tif(directory) {\n\t\t\t\t// We must ensure that the file:// protocol is preserved for\n\t\t\t\t// local file links, as in certain contexts (such as under\n\t\t\t\t// Titanium), file links without the file:// protocol will not\n\t\t\t\t// work\n\t\t\t\tif (uri.protocol === \"file\") {\n\t\t\t\t\trelative = EPUBJS.core.resolveUrl(uri.base, href);\n\t\t\t\t} else {\n\t\t\t\t\trelative = EPUBJS.core.resolveUrl(directory, href);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trelative = href;\n\t\t\t}\n\n\t\t\tlink.onclick = function(){\n\t\t\t\tbook.goto(relative);\n\t\t\t\treturn false;\n\t\t\t};\n\n\t\t}\n\t\tdone();\n\n\t};\n\n\trenderer.replace(\"a[href]\", replacments, callback);\n\n};\n\nEPUBJS.replace.head = function(callback, renderer) {\n\n\trenderer.replaceWithStored(\"link[href]\", \"href\", EPUBJS.replace.links, callback);\n\n};\n\n\n//-- Replaces assets src's to point to stored version if browser is offline\nEPUBJS.replace.resources = function(callback, renderer){\n\t//srcs = this.doc.querySelectorAll('[src]');\n\trenderer.replaceWithStored(\"[src]\", \"src\", EPUBJS.replace.srcs, callback);\n\n};\n\nEPUBJS.replace.svg = function(callback, renderer) {\n\n\trenderer.replaceWithStored(\"svg image\", \"xlink:href\", function(_store, full, done){\n\t\t_store.getUrl(full).then(done);\n\t}, callback);\n\n};\n\nEPUBJS.replace.srcs = function(_store, full, done){\n\n\t_store.getUrl(full).then(done);\n\n};\n\n//-- Replaces links in head, such as stylesheets - link[href]\nEPUBJS.replace.links = function(_store, full, done, link){\n\t//-- Handle replacing urls in CSS\n\tif(link.getAttribute(\"rel\") === \"stylesheet\") {\n\t\tEPUBJS.replace.stylesheets(_store, full).then(function(url, full){\n\t\t\t// done\n\t\t\tdone(url, full);\n\t\t},  function(reason) {\n\t\t\t// we were unable to replace the style sheets\n\t\t\tdone(null);\n\t\t});\n\t}else{\n\t\t_store.getUrl(full).then(done, function(reason) {\n\t\t\t// we were unable to get the url, signal to upper layer\n\t\t\tdone(null);\n\t\t});\n\t}\n};\n\nEPUBJS.replace.stylesheets = function(_store, full) {\n\tvar deferred = new RSVP.defer();\n\n\tif(!_store) return;\n\n\t_store.getText(full).then(function(text){\n\t\tvar url;\n\n\t\t EPUBJS.replace.cssImports(_store, full, text).then(function (importText) {\n\n          text = importText + text;\n\n\t\t\tEPUBJS.replace.cssUrls(_store, full, text).then(function(newText){\n\t\t\t\tvar _URL = window.URL || window.webkitURL || window.mozURL;\n\n\t\t\t\tvar blob = new Blob([newText], { \"type\" : \"text\\/css\" }),\n\t\t\t\t\t\turl = _URL.createObjectURL(blob);\n\n\t\t\t\tdeferred.resolve(url);\n\n\t\t\t}, function(reason) {\n\t\t\t\tdeferred.reject(reason);\n\t\t\t});\n\n\t\t},function(reason) {\n\t\t\tdeferred.reject(reason);\n\t\t});\n\n\t}, function(reason) {\n\t\tdeferred.reject(reason);\n\t});\n\n\treturn deferred.promise;\n};\n\nEPUBJS.replace.cssImports = function (_store, base, text) {\n  var deferred = new RSVP.defer();\n  if(!_store) return;\n\n  // check for css @import\n  var importRegex = /@import\\s+(?:url\\()?\\'?\\\"?((?!data:)[^\\'|^\\\"^\\)]*)\\'?\\\"?\\)?/gi;\n  var importMatches, importFiles = [], allImportText =  '';\n\n  while (importMatches = importRegex.exec(text)) {\n      importFiles.push(importMatches[1]);\n  }\n\n  if (importFiles.length === 0) {\n    deferred.resolve(allImportText);\n  }\n\n  importFiles.forEach(function (fileUrl) {\n      var full = EPUBJS.core.resolveUrl(base, fileUrl);\n      full = EPUBJS.core.uri(full).path;\n      _store.getText(full).then(function(importText){\n        allImportText += importText;\n        if (importFiles.indexOf(fileUrl) === importFiles.length - 1) {\n          deferred.resolve(allImportText);\n        }\n      }, function(reason) {\n        deferred.reject(reason);\n      });\n  });\n\n  return deferred.promise;\n\n};\n\n\nEPUBJS.replace.cssUrls = function(_store, base, text){\n\tvar deferred = new RSVP.defer(),\n\t\tpromises = [],\n\t\tmatches = text.match(/url\\(\\'?\\\"?((?!data:)[^\\'|^\\\"^\\)]*)\\'?\\\"?\\)/g);\n\n\tif(!_store) return;\n\n\tif(!matches){\n\t\tdeferred.resolve(text);\n\t\treturn deferred.promise;\n\t}\n\n\tmatches.forEach(function(str){\n\t\tvar full = EPUBJS.core.resolveUrl(base, str.replace(/url\\(|[|\\)|\\'|\\\"]|\\?.*$/g, ''));\n\t\tvar replaced = _store.getUrl(full).then(function(url){\n\t\t\ttext = text.replace(str, 'url(\"'+url+'\")');\n\t\t}, function(reason) {\n\t\t\tdeferred.reject(reason);\n\t\t});\n\n\t\tpromises.push(replaced);\n\t});\n\n\tRSVP.all(promises).then(function(){\n\t\tdeferred.resolve(text);\n\t});\n\n\treturn deferred.promise;\n};\n\n\nEPUBJS.Storage = function(withCredentials){\n\n\tthis.checkRequirements();\n\tthis.urlCache = {};\n\tthis.withCredentials = withCredentials;\n\tthis.URL = window.URL || window.webkitURL || window.mozURL;\n\tthis.offline = false;\n};\n\n//-- Load the zip lib and set the workerScriptsPath\nEPUBJS.Storage.prototype.checkRequirements = function(callback){\n\tif(typeof(localforage) == \"undefined\") console.error(\"localForage library not loaded\");\n};\n\nEPUBJS.Storage.prototype.put = function(assets, store) {\n\tvar deferred = new RSVP.defer();\n\tvar count = assets.length;\n\tvar current = 0;\n\tvar next = function(deferred){\n\t\tvar done = deferred || new RSVP.defer();\n\t\tvar url;\n\t\tvar encodedUrl;\n\n\t\tif(current >= count) {\n\t\t\tdone.resolve();\n\t\t} else {\n\t\t\turl = assets[current].url;\n\t\t\tencodedUrl = window.encodeURIComponent(url);\n\n\t\t\tEPUBJS.core.request(url, \"binary\")\n\t\t\t.then(function (data) {\n\t\t\t\treturn localforage.setItem(encodedUrl, data);\n\t\t\t})\n\t\t\t.then(function(data){\n\t\t\t\tcurrent++;\n        // Load up the next\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tnext(done);\n\t\t\t\t}, 1);\n\n      });\n\t\t}\n\t\treturn done.promise;\n\t}.bind(this);\n\n\tif(!Array.isArray(assets)) {\n\t\tassets = [assets];\n\t}\n\n\tnext().then(function(){\n\t\tdeferred.resolve();\n\t}.bind(this));\n\n\treturn deferred.promise;\n};\n\nEPUBJS.Storage.prototype.token = function(url, value){\n\tvar encodedUrl = window.encodeURIComponent(url);\n\treturn localforage.setItem(encodedUrl, value)\n\t\t.then(function (result) {\n\t\t\tif (result === null) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n};\n\nEPUBJS.Storage.prototype.isStored = function(url){\n\tvar encodedUrl = window.encodeURIComponent(url);\n\treturn localforage.getItem(encodedUrl)\n\t\t.then(function (result) {\n\t\t\tif (result === null) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n};\n\nEPUBJS.Storage.prototype.getText = function(url){\n\tvar encodedUrl = window.encodeURIComponent(url);\n\n\treturn EPUBJS.core.request(url, 'arraybuffer', this.withCredentials)\n\t\t.then(function(buffer){\n\n\t\t\tif(this.offline){\n\t\t\t\tthis.offline = false;\n\t\t\t\tthis.trigger(\"offline\", false);\n\t\t\t}\n\t\t\tlocalforage.setItem(encodedUrl, buffer);\n\t\t\treturn buffer;\n\t\t}.bind(this))\n\t\t.then(function(data) {\n\t\t\tvar deferred = new RSVP.defer();\n\t\t\tvar mimeType = EPUBJS.core.getMimeType(url);\n\t\t\tvar blob = new Blob([data], {type : mimeType});\n\t\t\tvar reader = new FileReader();\n\t\t\treader.addEventListener(\"loadend\", function() {\n\t\t\t\tdeferred.resolve(reader.result);\n\t\t\t});\n\t\t\treader.readAsText(blob, mimeType);\n\t\t\treturn deferred.promise;\n\t\t})\n\t\t.catch(function() {\n\n\t\t\tvar deferred = new RSVP.defer();\n\t\t\tvar entry = localforage.getItem(encodedUrl);\n\n\t\t\tif(!this.offline){\n\t\t\t\tthis.offline = true;\n\t\t\t\tthis.trigger(\"offline\", true);\n\t\t\t}\n\n\t\t\tif(!entry) {\n\t\t\t\tdeferred.reject({\n\t\t\t\t\tmessage : \"File not found in the storage: \" + url,\n\t\t\t\t\tstack : new Error().stack\n\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\n\t\t\tentry.then(function(data) {\n\t\t\t\tvar mimeType = EPUBJS.core.getMimeType(url);\n\t\t\t\tvar blob = new Blob([data], {type : mimeType});\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.addEventListener(\"loadend\", function() {\n\t\t\t\t\tdeferred.resolve(reader.result);\n\t\t\t\t});\n\t\t\t\treader.readAsText(blob, mimeType);\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t}.bind(this));\n};\n\nEPUBJS.Storage.prototype.getUrl = function(url){\n\tvar encodedUrl = window.encodeURIComponent(url);\n\n\treturn EPUBJS.core.request(url, 'arraybuffer', this.withCredentials)\n\t\t.then(function(buffer){\n\t\t\tif(this.offline){\n\t\t\t\tthis.offline = false;\n\t\t\t\tthis.trigger(\"offline\", false);\n\t\t\t}\n\t\t\tlocalforage.setItem(encodedUrl, buffer);\n\t\t\treturn url;\n\t\t}.bind(this))\n\t\t.catch(function() {\n\t\t\tvar deferred = new RSVP.defer();\n\t\t\tvar entry;\n\t\t\tvar _URL = window.URL || window.webkitURL || window.mozURL;\n\t\t\tvar tempUrl;\n\n\t\t\tif(!this.offline){\n\t\t\t\tthis.offline = true;\n\t\t\t\tthis.trigger(\"offline\", true);\n\t\t\t}\n\n\t\t\tif(encodedUrl in this.urlCache) {\n\t\t\t\tdeferred.resolve(this.urlCache[encodedUrl]);\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\n\t\t\tentry = localforage.getItem(encodedUrl);\n\n\t\t\tif(!entry) {\n\t\t\t\tdeferred.reject({\n\t\t\t\t\tmessage : \"File not found in the storage: \" + url,\n\t\t\t\t\tstack : new Error().stack\n\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\n\t\t\tentry.then(function(data) {\n\t\t\t\tvar blob = new Blob([data], {type : EPUBJS.core.getMimeType(url)});\n\t\t\t\ttempUrl = _URL.createObjectURL(blob);\n\t\t\t\tdeferred.resolve(tempUrl);\n\t\t\t\tthis.urlCache[encodedUrl] = tempUrl;\n\t\t\t}.bind(this));\n\n\n\t\t\treturn deferred.promise;\n\t}.bind(this));\n};\n\nEPUBJS.Storage.prototype.getXml = function(url){\n\tvar encodedUrl = window.encodeURIComponent(url);\n\n\treturn EPUBJS.core.request(url, 'arraybuffer', this.withCredentials)\n\t\t.then(function(buffer){\n\t\t\tif(this.offline){\n\t\t\t\tthis.offline = false;\n\t\t\t\tthis.trigger(\"offline\", false);\n\t\t\t}\n\t\t\tlocalforage.setItem(encodedUrl, buffer);\n\t\t\treturn buffer;\n\t\t}.bind(this))\n\t\t.then(function(data) {\n\t\t\tvar deferred = new RSVP.defer();\n\t\t\tvar mimeType = EPUBJS.core.getMimeType(url);\n\t\t\tvar blob = new Blob([data], {type : mimeType});\n\t\t\tvar reader = new FileReader();\n\t\t\treader.addEventListener(\"loadend\", function() {\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\tvar doc = parser.parseFromString(reader.result, \"text/xml\");\n\t\t\t\tdeferred.resolve(doc);\n\t\t\t});\n\t\t\treader.readAsText(blob, mimeType);\n\t\t\treturn deferred.promise;\n\t\t})\n\t\t.catch(function() {\n\t\t\tvar deferred = new RSVP.defer();\n\t\t\tvar entry = localforage.getItem(encodedUrl);\n\n\t\t\tif(!this.offline){\n\t\t\t\tthis.offline = true;\n\t\t\t\tthis.trigger(\"offline\", true);\n\t\t\t}\n\n\t\t\tif(!entry) {\n\t\t\t\tdeferred.reject({\n\t\t\t\t\tmessage : \"File not found in the storage: \" + url,\n\t\t\t\t\tstack : new Error().stack\n\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\n\t\t\tentry.then(function(data) {\n\t\t\t\tvar mimeType = EPUBJS.core.getMimeType(url);\n\t\t\t\tvar blob = new Blob([data], {type : mimeType});\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.addEventListener(\"loadend\", function() {\n\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\tvar doc = parser.parseFromString(reader.result, \"text/xml\");\n\t\t\t\t\tdeferred.resolve(doc);\n\t\t\t\t});\n\t\t\t\treader.readAsText(blob, mimeType);\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t}.bind(this));\n};\n\nEPUBJS.Storage.prototype.revokeUrl = function(url){\n\tvar _URL = window.URL || window.webkitURL || window.mozURL;\n\tvar fromCache = this.urlCache[url];\n\tif(fromCache) _URL.revokeObjectURL(fromCache);\n};\n\nEPUBJS.Storage.prototype.failed = function(error){\n\tconsole.error(error);\n};\n\nRSVP.EventTarget.mixin(EPUBJS.Storage.prototype);\n\nEPUBJS.Unarchiver = function(url){\n\n\tthis.checkRequirements();\n\tthis.urlCache = {};\n\n};\n\n//-- Load the zip lib and set the workerScriptsPath\nEPUBJS.Unarchiver.prototype.checkRequirements = function(callback){\n\tif(typeof(JSZip) == \"undefined\") console.error(\"JSZip lib not loaded\");\n};\n\nEPUBJS.Unarchiver.prototype.open = function(zipUrl, callback){\n\tif (zipUrl instanceof ArrayBuffer) {\n\t\tthis.zip = new JSZip(zipUrl);\n\t\tvar deferred = new RSVP.defer();\n\t\tdeferred.resolve();\n\t\treturn deferred.promise;\n\t} else {\n\t\treturn EPUBJS.core.request(zipUrl, \"binary\").then(function(data){\n\t\t\tthis.zip = new JSZip(data);\n\t\t}.bind(this));\n\t}\n};\n\nEPUBJS.Unarchiver.prototype.getXml = function(url, encoding){\n\tvar decodededUrl = window.decodeURIComponent(url);\n\treturn this.getText(decodededUrl, encoding).\n\t\t\tthen(function(text){\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\tvar mimeType = EPUBJS.core.getMimeType(url);\n\t\t\t\treturn parser.parseFromString(text, mimeType);\n\t\t\t});\n\n};\n\nEPUBJS.Unarchiver.prototype.getUrl = function(url, mime){\n\tvar unarchiver = this;\n\tvar deferred = new RSVP.defer();\n\tvar decodededUrl = window.decodeURIComponent(url);\n\tvar entry = this.zip.file(decodededUrl);\n\tvar _URL = window.URL || window.webkitURL || window.mozURL;\n\tvar tempUrl;\n\tvar blob;\n\n\tif(!entry) {\n\t\tdeferred.reject({\n\t\t\tmessage : \"File not found in the epub: \" + url,\n\t\t\tstack : new Error().stack\n\t\t});\n\t\treturn deferred.promise;\n\t}\n\n\tif(url in this.urlCache) {\n\t\tdeferred.resolve(this.urlCache[url]);\n\t\treturn deferred.promise;\n\t}\n\n\tblob = new Blob([entry.asUint8Array()], {type : EPUBJS.core.getMimeType(entry.name)});\n\n\ttempUrl = _URL.createObjectURL(blob);\n\tdeferred.resolve(tempUrl);\n\tunarchiver.urlCache[url] = tempUrl;\n\n\treturn deferred.promise;\n};\n\nEPUBJS.Unarchiver.prototype.getText = function(url, encoding){\n\tvar unarchiver = this;\n\tvar deferred = new RSVP.defer();\n\tvar decodededUrl = window.decodeURIComponent(url);\n\tvar entry = this.zip.file(decodededUrl);\n\tvar text;\n\n\tif(!entry) {\n\t\tdeferred.reject({\n\t\t\tmessage : \"File not found in the epub: \" + url,\n\t\t\tstack : new Error().stack\n\t\t});\n\t\treturn deferred.promise;\n\t}\n\n\ttext = entry.asText();\n\tdeferred.resolve(text);\n\n\treturn deferred.promise;\n};\n\nEPUBJS.Unarchiver.prototype.revokeUrl = function(url){\n\tvar _URL = window.URL || window.webkitURL || window.mozURL;\n\tvar fromCache = this.urlCache[url];\n\tif(fromCache) _URL.revokeObjectURL(fromCache);\n};\n\nEPUBJS.Unarchiver.prototype.failed = function(error){\n\tconsole.error(error);\n};\n\nEPUBJS.Unarchiver.prototype.afterSaved = function(error){\n\tthis.callback();\n};\n\nEPUBJS.Unarchiver.prototype.toStorage = function(entries){\n\tvar timeout = 0,\n\t\tdelay = 20,\n\t\tthat = this,\n\t\tcount = entries.length;\n\n\tfunction callback(){\n\t\tcount--;\n\t\tif(count === 0) that.afterSaved();\n\t}\n\n\tentries.forEach(function(entry){\n\n\t\tsetTimeout(function(entry){\n\t\t\tthat.saveEntryFileToStorage(entry, callback);\n\t\t}, timeout, entry);\n\n\t\ttimeout += delay;\n\t});\n\n\tconsole.log(\"time\", timeout);\n\n\t//entries.forEach(this.saveEntryFileToStorage.bind(this));\n};\n\n// EPUBJS.Unarchiver.prototype.saveEntryFileToStorage = function(entry, callback){\n// \tvar that = this;\n// \tentry.getData(new zip.BlobWriter(), function(blob) {\n// \t\tEPUBJS.storage.save(entry.filename, blob, callback);\n// \t});\n// };\n\n/*\n From Zip.js, by Gildas Lormeau\n */\n\n(function() {\n\t\"use strict\";\n\tvar table = {\n\t\t\"application\" : {\n\t\t\t\"ecmascript\" : [ \"es\", \"ecma\" ],\n\t\t\t\"javascript\" : \"js\",\n\t\t\t\"ogg\" : \"ogx\",\n\t\t\t\"pdf\" : \"pdf\",\n\t\t\t\"postscript\" : [ \"ps\", \"ai\", \"eps\", \"epsi\", \"epsf\", \"eps2\", \"eps3\" ],\n\t\t\t\"rdf+xml\" : \"rdf\",\n\t\t\t\"smil\" : [ \"smi\", \"smil\" ],\n\t\t\t\"xhtml+xml\" : [ \"xhtml\", \"xht\" ],\n\t\t\t\"xml\" : [ \"xml\", \"xsl\", \"xsd\", \"opf\", \"ncx\" ],\n\t\t\t\"zip\" : \"zip\",\n\t\t\t\"x-httpd-eruby\" : \"rhtml\",\n\t\t\t\"x-latex\" : \"latex\",\n\t\t\t\"x-maker\" : [ \"frm\", \"maker\", \"frame\", \"fm\", \"fb\", \"book\", \"fbdoc\" ],\n\t\t\t\"x-object\" : \"o\",\n\t\t\t\"x-shockwave-flash\" : [ \"swf\", \"swfl\" ],\n\t\t\t\"x-silverlight\" : \"scr\",\n\t\t\t\"epub+zip\" : \"epub\",\n\t\t\t\"font-tdpfr\" : \"pfr\",\n\t\t\t\"inkml+xml\" : [ \"ink\", \"inkml\" ],\n\t\t\t\"json\" : \"json\",\n\t\t\t\"jsonml+json\" : \"jsonml\",\n\t\t\t\"mathml+xml\" : \"mathml\",\n\t\t\t\"metalink+xml\" : \"metalink\",\n\t\t\t\"mp4\" : \"mp4s\",\n\t\t\t// \"oebps-package+xml\" : \"opf\",\n\t\t\t\"omdoc+xml\" : \"omdoc\",\n\t\t\t\"oxps\" : \"oxps\",\n\t\t\t\"vnd.amazon.ebook\" : \"azw\",\n\t\t\t\"widget\" : \"wgt\",\n\t\t\t// \"x-dtbncx+xml\" : \"ncx\",\n\t\t\t\"x-dtbook+xml\" : \"dtb\",\n\t\t\t\"x-dtbresource+xml\" : \"res\",\n\t\t\t\"x-font-bdf\" : \"bdf\",\n\t\t\t\"x-font-ghostscript\" : \"gsf\",\n\t\t\t\"x-font-linux-psf\" : \"psf\",\n\t\t\t\"x-font-otf\" : \"otf\",\n\t\t\t\"x-font-pcf\" : \"pcf\",\n\t\t\t\"x-font-snf\" : \"snf\",\n\t\t\t\"x-font-ttf\" : [ \"ttf\", \"ttc\" ],\n\t\t\t\"x-font-type1\" : [ \"pfa\", \"pfb\", \"pfm\", \"afm\" ],\n\t\t\t\"x-font-woff\" : \"woff\",\n\t\t\t\"x-mobipocket-ebook\" : [ \"prc\", \"mobi\" ],\n\t\t\t\"x-mspublisher\" : \"pub\",\n\t\t\t\"x-nzb\" : \"nzb\",\n\t\t\t\"x-tgif\" : \"obj\",\n\t\t\t\"xaml+xml\" : \"xaml\",\n\t\t\t\"xml-dtd\" : \"dtd\",\n\t\t\t\"xproc+xml\" : \"xpl\",\n\t\t\t\"xslt+xml\" : \"xslt\",\n\t\t\t\"internet-property-stream\" : \"acx\",\n\t\t\t\"x-compress\" : \"z\",\n\t\t\t\"x-compressed\" : \"tgz\",\n\t\t\t\"x-gzip\" : \"gz\",\n\t\t},\n\t\t\"audio\" : {\n\t\t\t\"flac\" : \"flac\",\n\t\t\t\"midi\" : [ \"mid\", \"midi\", \"kar\", \"rmi\" ],\n\t\t\t\"mpeg\" : [ \"mpga\", \"mpega\", \"mp2\", \"mp3\", \"m4a\", \"mp2a\", \"m2a\", \"m3a\" ],\n\t\t\t\"mpegurl\" : \"m3u\",\n\t\t\t\"ogg\" : [ \"oga\", \"ogg\", \"spx\" ],\n\t\t\t\"x-aiff\" : [ \"aif\", \"aiff\", \"aifc\" ],\n\t\t\t\"x-ms-wma\" : \"wma\",\n\t\t\t\"x-wav\" : \"wav\",\n\t\t\t\"adpcm\" : \"adp\",\n\t\t\t\"mp4\" : \"mp4a\",\n\t\t\t\"webm\" : \"weba\",\n\t\t\t\"x-aac\" : \"aac\",\n\t\t\t\"x-caf\" : \"caf\",\n\t\t\t\"x-matroska\" : \"mka\",\n\t\t\t\"x-pn-realaudio-plugin\" : \"rmp\",\n\t\t\t\"xm\" : \"xm\",\n\t\t\t\"mid\" : [ \"mid\", \"rmi\" ]\n\t\t},\n\t\t\"image\" : {\n\t\t\t\"gif\" : \"gif\",\n\t\t\t\"ief\" : \"ief\",\n\t\t\t\"jpeg\" : [ \"jpeg\", \"jpg\", \"jpe\" ],\n\t\t\t\"pcx\" : \"pcx\",\n\t\t\t\"png\" : \"png\",\n\t\t\t\"svg+xml\" : [ \"svg\", \"svgz\" ],\n\t\t\t\"tiff\" : [ \"tiff\", \"tif\" ],\n\t\t\t\"x-icon\" : \"ico\",\n\t\t\t\"bmp\" : \"bmp\",\n\t\t\t\"webp\" : \"webp\",\n\t\t\t\"x-pict\" : [ \"pic\", \"pct\" ],\n\t\t\t\"x-tga\" : \"tga\",\n\t\t\t\"cis-cod\" : \"cod\",\n\t\t},\n\t\t\"message\" : {\n\t\t\t\"rfc822\" : [ \"eml\", \"mime\", \"mht\", \"mhtml\", \"nws\" ]\n\t\t},\n\t\t\"text\" : {\n\t\t\t\"cache-manifest\" : [ \"manifest\", \"appcache\" ],\n\t\t\t\"calendar\" : [ \"ics\", \"icz\", \"ifb\" ],\n\t\t\t\"css\" : \"css\",\n\t\t\t\"csv\" : \"csv\",\n\t\t\t\"h323\" : \"323\",\n\t\t\t\"html\" : [ \"html\", \"htm\", \"shtml\", \"stm\" ],\n\t\t\t\"iuls\" : \"uls\",\n\t\t\t\"mathml\" : \"mml\",\n\t\t\t\"plain\" : [ \"txt\", \"text\", \"brf\", \"conf\", \"def\", \"list\", \"log\", \"in\", \"bas\" ],\n\t\t\t\"richtext\" : \"rtx\",\n\t\t\t\"tab-separated-values\" : \"tsv\",\n\t\t\t\"x-bibtex\" : \"bib\",\n\t\t\t\"x-dsrc\" : \"d\",\n\t\t\t\"x-diff\" : [ \"diff\", \"patch\" ],\n\t\t\t\"x-haskell\" : \"hs\",\n\t\t\t\"x-java\" : \"java\",\n\t\t\t\"x-literate-haskell\" : \"lhs\",\n\t\t\t\"x-moc\" : \"moc\",\n\t\t\t\"x-pascal\" : [ \"p\", \"pas\" ],\n\t\t\t\"x-pcs-gcd\" : \"gcd\",\n\t\t\t\"x-perl\" : [ \"pl\", \"pm\" ],\n\t\t\t\"x-python\" : \"py\",\n\t\t\t\"x-scala\" : \"scala\",\n\t\t\t\"x-setext\" : \"etx\",\n\t\t\t\"x-tcl\" : [ \"tcl\", \"tk\" ],\n\t\t\t\"x-tex\" : [ \"tex\", \"ltx\", \"sty\", \"cls\" ],\n\t\t\t\"x-vcard\" : \"vcf\",\n\t\t\t\"sgml\" : [ \"sgml\", \"sgm\" ],\n\t\t\t\"x-c\" : [ \"c\", \"cc\", \"cxx\", \"cpp\", \"h\", \"hh\", \"dic\" ],\n\t\t\t\"x-fortran\" : [ \"f\", \"for\", \"f77\", \"f90\" ],\n\t\t\t\"x-opml\" : \"opml\",\n\t\t\t\"x-nfo\" : \"nfo\",\n\t\t\t\"x-sfv\" : \"sfv\",\n\t\t\t\"x-uuencode\" : \"uu\",\n\t\t\t\"webviewhtml\" : \"htt\"\n\t\t},\n\t\t\"video\" : {\n\t\t\t\"mpeg\" : [ \"mpeg\", \"mpg\", \"mpe\", \"m1v\", \"m2v\", \"mp2\", \"mpa\", \"mpv2\" ],\n\t\t\t\"mp4\" : [ \"mp4\", \"mp4v\", \"mpg4\" ],\n\t\t\t\"quicktime\" : [ \"qt\", \"mov\" ],\n\t\t\t\"ogg\" : \"ogv\",\n\t\t\t\"vnd.mpegurl\" : [ \"mxu\", \"m4u\" ],\n\t\t\t\"x-flv\" : \"flv\",\n\t\t\t\"x-la-asf\" : [ \"lsf\", \"lsx\" ],\n\t\t\t\"x-mng\" : \"mng\",\n\t\t\t\"x-ms-asf\" : [ \"asf\", \"asx\", \"asr\" ],\n\t\t\t\"x-ms-wm\" : \"wm\",\n\t\t\t\"x-ms-wmv\" : \"wmv\",\n\t\t\t\"x-ms-wmx\" : \"wmx\",\n\t\t\t\"x-ms-wvx\" : \"wvx\",\n\t\t\t\"x-msvideo\" : \"avi\",\n\t\t\t\"x-sgi-movie\" : \"movie\",\n\t\t\t\"x-matroska\" : [ \"mpv\", \"mkv\", \"mk3d\", \"mks\" ],\n\t\t\t\"3gpp2\" : \"3g2\",\n\t\t\t\"h261\" : \"h261\",\n\t\t\t\"h263\" : \"h263\",\n\t\t\t\"h264\" : \"h264\",\n\t\t\t\"jpeg\" : \"jpgv\",\n\t\t\t\"jpm\" : [ \"jpm\", \"jpgm\" ],\n\t\t\t\"mj2\" : [ \"mj2\", \"mjp2\" ],\n\t\t\t\"vnd.ms-playready.media.pyv\" : \"pyv\",\n\t\t\t\"vnd.uvvu.mp4\" : [ \"uvu\", \"uvvu\" ],\n\t\t\t\"vnd.vivo\" : \"viv\",\n\t\t\t\"webm\" : \"webm\",\n\t\t\t\"x-f4v\" : \"f4v\",\n\t\t\t\"x-m4v\" : \"m4v\",\n\t\t\t\"x-ms-vob\" : \"vob\",\n\t\t\t\"x-smv\" : \"smv\"\n\t\t}\n\t};\n\n\tvar mimeTypes = (function() {\n\t\tvar type, subtype, val, index, mimeTypes = {};\n\t\tfor (type in table) {\n\t\t\tif (table.hasOwnProperty(type)) {\n\t\t\t\tfor (subtype in table[type]) {\n\t\t\t\t\tif (table[type].hasOwnProperty(subtype)) {\n\t\t\t\t\t\tval = table[type][subtype];\n\t\t\t\t\t\tif (typeof val == \"string\") {\n\t\t\t\t\t\t\tmimeTypes[val] = type + \"/\" + subtype;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (index = 0; index < val.length; index++) {\n\t\t\t\t\t\t\t\tmimeTypes[val[index]] = type + \"/\" + subtype;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mimeTypes;\n\t})();\n\n\tEPUBJS.core.getMimeType = function(filename) {\n\t\tvar defaultValue = \"text/plain\";//\"application/octet-stream\";\n\t\treturn filename && mimeTypes[filename.split(\".\").pop().toLowerCase()] || defaultValue;\n\t};\n\n})();\n\n//# sourceMappingURL=epub.js.map"

/***/ }),

/***/ 99:
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
module.exports = function(src) {
	function log(error) {
		(typeof console !== "undefined")
		&& (console.error || console.log)("[Script Loader]", error);
	}

	// Check for IE =< 8
	function isIE() {
		return typeof attachEvent !== "undefined" && typeof addEventListener === "undefined";
	}

	try {
		if (typeof execScript !== "undefined" && isIE()) {
			execScript(src);
		} else if (typeof eval !== "undefined") {
			eval.call(null, src);
		} else {
			log("EvalError: No eval function available");
		}
	} catch (error) {
		log(error);
	}
}


/***/ })

});